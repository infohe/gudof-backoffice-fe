{"version":3,"sources":["items/ProductTemplates/default/menu.js","items/ProductTemplates/default/settings.js","items/ProductTemplates/default/options.js","items/ProductTemplates/core.js","axios.js","items/Categories/New/index.js","items/Categories/Delete/index.js","items/Categories/Delete/DeleteTemplate.js","items/Categories/Search/index.js","items/Categories/New/RootCategory.js","items/Categories/Categories.js","items/ProductTemplates/rjsf-patch/ArrayField.jsx","items/ProductTemplates/rjsf-patch/BooleanField.jsx","items/ProductTemplates/rjsf-patch/StringField.jsx","items/ProductTemplates/rjsf-patch/SchemaField.jsx","items/ProductTemplates/rjsf-patch/utils.js","items/ProductTemplates/rjsf-patch/Form.jsx","items/ProductTemplates/Template/Template.jsx","items/ProductTemplates/InlineEditor.jsx","items/ProductTemplates/Template/connectors.jsx","items/ProductTemplates/Template/index.jsx","items/ProductTemplates/views/FormView.jsx","items/ProductTemplates/JsonEditor.jsx","items/ProductTemplates/views/SchemaView.jsx","items/ProductTemplates/views/UiSchemaView.jsx","items/ProductTemplates/views/FormDataView.jsx","items/Products/index.js","items/ProductTemplates/Tree/Menu.jsx","items/ProductTemplates/Tree/TreeNodeTitle.jsx","items/ProductTemplates/Tree/Tree.jsx","items/ProductTemplates/Tree/index.js","items/ProductTemplates/Editor/JsonEditor.jsx","items/ProductTemplates/Editor/BasicEditor.jsx","items/ProductTemplates/Editor/index.jsx","items/ProductTemplates/Toolbar.jsx","items/ProductTemplates/Settings.jsx","items/ProductTemplates/Templates.jsx","items/ProductTemplates/List/index.js","items/Products/List/ProductList.js","items/ProductTemplates/reducers.js","items/ProductTemplates/store.js","App.js","serviceWorker.js","index.js"],"names":["basic","schema","type","title","properties","object","text","checkbox","checkboxes","items","enum","uniqueItems","list","dropdown","enumNames","number","textarea","datetime","uiSchema","module","exports","leftSiderWidth","rightSiderWidth","formWidth","isInlineMode","subViews","categoryId","templateId","productId","categories","isEmptyObject","obj","i","undefined","isLeaf","node","schema2tree","name","schema2node","FORCE_CHANGE_KEY","forceChange","Date","now","process","e","path","key","join","length","children","child","push","Array","isArray","nextPath","map","a","toString","additionalItems","getNodeByPath","tree","find","getNode","split","updateParentKey","parentKey","Object","assign","getNodeParentKey","substring","updateNodeParentKeyAndName","newKey","toUpperCase","slice","updateNodeByNewChildren","oldNode","newChildren","newSchema","newProperties","newItemsNode","newAdditionalItemsNode","updateSchema","newUiSchema","startsWith","empty","updateUiSchema","newNode","updateArrayIndex","_removeNodeByPath","head","tail","arrayItemsFlag","removed","newTree","filter","required","newRequired","removeNodeByPath","removeNode","notification","message","description","_addNodeByPath","position","node2Add","added","cn","newNodeChildren","console","log","addNodeByPath","addNode","targetKey","_moveNodeByPath","sh","st","th","tt","updated","node2move","tmpTree","moveNodeByPath","sourceNode","targetNode","moveNode","sourceKey","allowedUpdatedTypes","updateNodeByPath","nodeUpdate","_updateNodeByPath","includes","nu","typeUpdated","oldSchema","oldUiSchema","updateNode","getNodeByRjsfId","rjsfId","indexOf","index","isNaN","rest","n","instance","axios","create","baseURL","NewCategoryModal","visibility","setVisibility","saveNewCategory","useState","setName","image","setImage","visible","onOk","newName","newImage","onCancel","destroyOnClose","preserve","size","placeholder","onChange","target","value","defaultValue","DeleteCategoryModal","deleteCategory","DeleteTemplateModal","deleteTemplate","Search","selectPrevMatch","selectNextMatch","searchParams","inputChange","searchFocusIndex","searchString","searchFoundCount","style","display","width","onSubmit","event","preventDefault","id","disabled","onClick","NewRootCategory","Categories","props","state","api","delete","template_id","status","forEach","cat","_id","setState","deleteTemplateModalVisibility","bool","ModalVisiblity","newCategory","saveToBackend","bind","newModalVisibility","deleteFromBackend","deleteModalVisibility","getKey","getParentKey","parent_id","get","data","splice","getTreeFromFlatData","flatData","rootKey","this","setOptions","options","post","then","resp","catch","getNodeKey","treeIndex","hello","concat","addNodeUnderParent","treeData","expandParent","addAsFirstChild","removeNodeAtPath","className","canDrag","generateNodeProps","buttons","href","products","searchMethod","searchQuery","toLowerCase","onlyExpandSearchedNodes","searchFocusOffset","searchFinishCallback","matches","active","New","Delete","DeleteTemplate","Component","connect","dispatch","payload","ArrayFieldPatched","idSchema","formData","readonly","autofocus","onBlur","onFocus","registry","getDefaultRegistry","rawErrors","widgets","definitions","formContext","itemsSchema","retrieveSchema","enumOptions","optionsList","getUiOptions","widget","Widget","getWidget","$id","multiple","onSelectChange","ArrayField","BooleanField","fields","oneOf","option","const","label","DescriptionField","defaultProps","StringField","format","isSelect","defaultWidget","hasWidget","PatchedSchemaField","error","info","duration","SchemaField","Error","msg","showIcon","_getWidget","TitleField","require","default","FormPatch","ArrayFieldTemplate","ObjectFieldTemplate","FieldTemplate","Form","Label","htmlFor","InlineEditor","onCompleteEditing","editing","newValue","trim","onStartEditing","stopPropagation","input","focus","onCancelEditing","nextProps","ref","r","onKeyUp","keyCode","EditOutlined","renderEditing","renderView","TextArea","Input","ACTIVE_STYLE","backgroundColor","ExtendedInlineEditor","InlineTextAreaEditor","autoSize","ButtonGroup","select","remove","placement","SelectOutlined","onConfirm","DeleteOutlined","classNames","errors","help","hidden","displayLabel","present","activeNodeKey","settings","updateTitle","updateDescription","updateHelp","labelElement","descriptionElement","helpElement","_label","_description","_help","prop","content","titleElement","_title","FormView","setFormData","liveValidate","idPrefix","React","isLiveValidate","JsonEditor","JSON","parse","string","onClickPrettify","stringify","objA","objB","hasOwnProperty","shallowEqual","nextState","errorMessage","matched","exec","textAreaRef","selectionStart","selectionEnd","renderErrorMessage","setTree","json2schema","charAt","name2title","Number","isInteger","s","genForm","Products","submitHandler","body","category_id","patch","query","URLSearchParams","location","search","template","updateSettings","formSchema","Card","variant","raised","SubMenu","Menu","Item","nameGen","occupied","AddItemMenu","onAddNode","node2add","menuTree","menu","menuOpenKeys","menuOpenChange","mode","theme","openKeys","onOpenChange","b","targetNodeKey","keys","TreeNodeTitle","updateNodeName","searchValue","isRoot","indexBefore","indexAfter","color","trigger","overlay","PlusCircleOutlined","thisKey","okText","cancelText","CloseCircleFilled","PureComponent","TreeNode","Tree","Demo","onDrop","dropKey","eventKey","dragKey","dragNode","dropPos","pos","dropPosition","onExpand","expandedKeys","newSearchExpanded","loop","item","parents","searchExpanded","setActiveNode","selectedKeys","draggable","onDragEnter","onSelect","selected","blockNode","source","selectedKey","updateNodeTitle","updateMode","NodeJsonEditor","schemaJsonString","uiSchemaJsonString","rschema","Option","Select","FormItemTemplate","actions","shape","icon","CloseOutlined","Meta","TimeThrottle","throttle","timer","clearTimeout","setTimeout","onSubmitValue","onRemove","TimeThrottleInput","TimeThrottleTextArea","TimeThrottleRange","min","max","textAlign","borderLeft","pointerEvents","lodash","boolean","radio","password","uri","date","file","updown","range","integer","array","files","toPairs","flatMap","groupBy","t","types","update","availableTypes","ClassNamesEditor","colSizes","onSliderChange","col","found","newClassNames","perfix","v","Set","cols","extractCol","newOptions","align","xs","renderMenu","CaretDownOutlined","sliderValue","tokenSeparators","updateUiOptions","availableWidgets","f","showSearch","pattern","rangeMeta","match","minp","maxp","itemRange","defaultChecked","values","enumKey","enumName","formatOptions","BasicEditor","l","addable","editable","PlusOutlined","itemLayout","dataSource","renderItem","TabPane","Tabs","editorList","Editor","uiOptionsUpdate","uiOptions","newUiOptions","filteredEditors","defaultActiveKey","tab","margin","schemaUpdate","uiSchemaUpdate","buttonStyle","marginLeft","Toolbar","newTemplate","save","response","open","showTemplates","category","handleOk","renderThisTemplate","templates","thisTemplate","existingTemplate","templateProperties","price","undo","redo","past","future","FolderOpenOutlined","Modal","confirm","SaveOutlined","UndoOutlined","RedoOutlined","footer","bordered","newForm","ActionTypes","UNDO","REDO","tipFormatter","flag","window","innerWidth","Settings","included","left","right","checked","rootNode","setMenu","sytle","okType","closable","maskClosable","localStorage","removeItem","reload","siderWidth","inlineMode","reset","List","listItems","Header","Layout","Sider","Content","NewTemplate","collapsed","toggle","defaultMenu","collapsible","background","padding","overflow","boxShadow","height","minHeight","verticalAlign","setData","tableColumns","setColumns","fetching","setFetch","useEffect","el","dataIndex","fixed","render","columns","ProductList","dataFetching","names","prod","product","updates","meta","created_at","updated_at","filters","defaultSortOrder","sorter","defaultMenuSchema","emptyTree","accuracy","limit","reducer","combineReducers","action","newState","history","removeUnnecessaryHistory","undoable","includeAction","defaultSettings","defaultOptions","persistConfig","storage","stateReconciler","hardSet","initTree","persistedReducer","persistReducer","store","createStore","persistor","persistStore","App","handleClick","current","pathname","secondslash","UnorderedListOutlined","to","ContainerOutlined","DatabaseFilled","exact","component","AppContainer","loading","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd9d875d.chunk.js","sourcesContent":["const basic = {\n  schema: {\n    type: 'object',\n    title: 'Basic',\n    properties: {\n      object: { type: 'object', title: 'Object', properties: {} },\n      text: { type: 'string', title: 'Text' },\n      checkbox: { type: 'boolean', title: 'Checkbox' },\n      checkboxes: {\n        type: 'array',\n        title: 'Check Boxes',\n        items: {\n          type: 'string',\n          enum: ['option-1', 'option-2', 'option-3'],\n        },\n        uniqueItems: true,\n      },\n      list: {\n        type: 'array', \n        title: 'List', \n        items: {\n          type: 'string'\n        }\n      },\n      dropdown: {\n        type: 'string',\n        title: 'Dropdown',\n        enum: ['option-1', 'option-2', 'option-3'],\n        enumNames: ['Option 1', 'Option 2', 'Option 3'],\n      },\n      number: { type: 'number', title: 'Number' },\n      textarea: { type: 'string', title: 'Text Area' },\n      datetime: { type: 'string', title: 'Date Time' },\n    },\n  },\n  uiSchema: {\n    textarea: { 'ui:widget': 'textarea' },\n    datetime: { 'ui:widget': 'datetime' },\n    checkboxes: {\n      'ui:widget': 'checkboxes',\n    },\n  },\n};\n\nmodule.exports = {\n  schema: {\n    type: 'object',\n    properties: {\n      basic: basic.schema,\n    },\n  },\n  uiSchema: {\n    basic: basic.uiSchema,\n  },\n};\n","module.exports = {\n  leftSiderWidth: 300,\n  rightSiderWidth: 360,\n  formWidth: 600,\n  isInlineMode: true,\n  subViews: ['schema', 'uiSchema', 'formData'],\n};\n","const options = {\n    categoryId: null,\n    templateId: null,\n    productId: null,\n    categories: []\n};\n\nmodule.exports = options;","import { notification } from 'antd';\n\nfunction isEmptyObject(obj) {\n  if (!obj) return true;\n  for (const i in obj) {\n    if (obj[i] !== undefined) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isLeaf(node) {\n  return node.isLeaf;\n}\n\nfunction schema2tree(name, schema, uiSchema) {\n  return [schema2node([name], schema, uiSchema)];\n}\n\nlet forceChange = ((FORCE_CHANGE_KEY) => (obj) => {\n  // workaround for forcing rjsf to rerender because the schema still deep equal to after reordering properties.\n  if (FORCE_CHANGE_KEY in obj) {\n    delete obj[FORCE_CHANGE_KEY];\n  } else {\n    obj[FORCE_CHANGE_KEY] = undefined;\n  }\n})(`__${Date.now()}__`);\n\ntry {\n  if (process.env.NODE_ENV === 'test') {\n    forceChange = (a) => a;\n  }\n} catch (e) {}\n\nfunction schema2node(path, schema, uiSchema) {\n  if (!schema) return null;\n  const key = path.join('.');\n  const name = path[path.length - 1];\n  if (schema.type === 'object') {\n    let children = [];\n    for (const i in schema.properties) {\n      const nextPath = [...path, i];\n      const child = schema2node(nextPath, schema.properties[i], uiSchema && uiSchema[i]);\n      if (child) children.push(child);\n    }\n    return {\n      key,\n      name,\n      //path,\n      schema,\n      uiSchema,\n      children,\n    };\n  }\n  if (schema.type === 'array') {\n    let children;\n    if (Array.isArray(schema.items)) {\n      const nextPath = [...path, '[items]'];\n      children = [\n        {\n          key: key + '.[items]',\n          name: '[items]',\n          //path: nextPath,\n          children: schema.items.map((a, i) =>\n            schema2node([...nextPath, i.toString()], schema.items[i], uiSchema && uiSchema.items && uiSchema.items[i])\n          ),\n        },\n      ];\n      if ('additionalItems' in schema) {\n        const nextPath = [...path, 'additionalItems'];\n        children.push(schema2node(nextPath, schema.additionalItems, uiSchema && uiSchema.additionalItems));\n      }\n    } else {\n      children = [schema2node([...path, 'items'], schema.items, uiSchema && uiSchema.items)];\n    }\n\n    return {\n      key,\n      name,\n      schema,\n      uiSchema,\n      children,\n      //path,\n    };\n  }\n  return {\n    key,\n    name,\n    //path,\n    schema,\n    uiSchema,\n    isLeaf: true,\n  };\n}\n\nfunction getNodeByPath(tree, path) {\n  let node;\n  let children = tree;\n  for (const i of path) {\n    node = children.find((a) => a.name === i);\n    if (!node) return null;\n    children = node.children;\n  }\n  return node;\n}\n\nfunction getNode(tree, key) {\n  return getNodeByPath(tree, key.split('.'));\n}\n\nfunction updateParentKey(tree, parentKey) {\n  return tree.map((node) => {\n    const key = parentKey + '.' + node.name;\n    return Object.assign(\n      {},\n      node,\n      {\n        key: parentKey + '.' + node.name,\n      },\n      node.children && {\n        children: updateParentKey(node.children, key),\n      }\n    );\n  });\n}\n\nfunction getNodeParentKey(node) {\n  return node.key.substring(0, node.key.length - node.name.length - 1);\n}\n\nfunction updateNodeParentKeyAndName(node, parentKey, name) {\n  if (!name) {\n    name = node.name;\n  }\n  if (!parentKey) {\n    parentKey = getNodeParentKey(node);\n  }\n  const newKey = parentKey ? parentKey + '.' + name : name;\n  if (node.key === newKey) return node;\n  node.schema.title = name[0].toUpperCase() + name.slice(1, name.length);\n  return Object.assign(\n    {},\n    node,\n    {\n      name,\n      key: newKey,\n    },\n    node.children && {\n      children: updateParentKey(node.children, newKey),\n    }\n  );\n}\n\nfunction updateSchema(node, newChildren) {\n  let newSchema = Object.assign({}, node.schema);\n  if (node.schema.type === 'object') {\n    let newProperties = {};\n    for (const child of newChildren) {\n      newProperties[child.name] = child.schema;\n    }\n    newSchema.properties = newProperties;\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      newSchema = Object.assign({}, node.schema);\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          newSchema.items = newItemsNode.children.map((a) => a.schema);\n        } else {\n          delete newSchema.items;\n        }\n      } else {\n        // additionalItems field updated\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newSchema.additionalItems = newAdditionalItemsNode.schema;\n        } else {\n          delete newSchema.additionalItems;\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode) {\n        newSchema.items = newItemsNode.schema;\n      } else {\n        delete newSchema.items;\n      }\n    }\n  }\n  return newSchema;\n}\n\nfunction updateUiSchema(node, newChildren) {\n  let newUiSchema = {};\n  for (const i in node.uiSchema) {\n    if (i.startsWith('ui:') || i === 'classNames') {\n      newUiSchema[i] = node.uiSchema[i];\n    }\n  }\n  if (node.schema.type === 'object') {\n    for (const child of newChildren) {\n      if (child.uiSchema) {\n        newUiSchema[child.name] = child.uiSchema;\n      }\n    }\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          let empty = true;\n          newUiSchema.items = newItemsNode.children.map((a) => {\n            empty = empty && !a.uiSchema;\n            return a.uiSchema || null;\n          });\n          if (empty) {\n            delete newUiSchema.items;\n          }\n        }\n        if ('additionalItems' in node.uiSchema) {\n          newUiSchema.additionalItems = node.uiSchema.additionalItems;\n        }\n      } else {\n        // additionalItems field updated\n        if ('items' in node.uiSchema) {\n          newUiSchema.items = node.uiSchema.items;\n        }\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newUiSchema.additionalItems = newItemsNode.children.map((a) => a.schema);\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode && newItemsNode.uiSchema) {\n        newUiSchema.items = newItemsNode.uiSchema;\n      }\n    }\n  }\n  return newUiSchema;\n}\n\nfunction updateNodeByNewChildren(oldNode, newChildren) {\n  if (!oldNode.schema) {\n    return { ...oldNode, children: newChildren };\n  }\n  const schema = updateSchema(oldNode, newChildren);\n  const uiSchema = updateUiSchema(oldNode, newChildren);\n  const newNode = Object.assign({}, oldNode, {\n    schema,\n    uiSchema,\n    children: newChildren,\n  });\n  if (isEmptyObject(uiSchema)) {\n    delete newNode.uiSchema;\n  }\n  return newNode;\n}\n\nfunction updateArrayIndex(tree) {\n  return tree.map((node, i) =>\n    node.name === i.toString() ? node : updateNodeParentKeyAndName(node, null, i.toString())\n  );\n}\n\nfunction _removeNodeByPath(tree, [head, ...tail], arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let removed = false;\n  let newTree = [];\n  if (!tail.length) {\n    let newTree = tree.filter((a) => a.name !== head);\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return newTree.length === tree.length ? tree : newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    const newChildren = _removeNodeByPath(node.children, tail, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    removed = true;\n    let newNode = updateNodeByNewChildren(node, newChildren);\n    let newSchema = null;\n    if (tail.length === 1 && (newSchema = newNode.schema) && newSchema.required) {\n      const newRequired = newSchema.required.filter((a) => a !== tail[0]);\n      if (newRequired.length !== newSchema.required.length) {\n        newNode.schema = Object.assign({}, newSchema, {\n          required: newRequired.length ? newRequired : undefined,\n        });\n      }\n    }\n    newTree.push(newNode);\n  }\n  return removed ? newTree : tree;\n}\n\nfunction removeNodeByPath(tree, path) {\n  return _removeNodeByPath(tree, path);\n}\n\nfunction removeNode(tree, key) {\n  if (key === `${tree[0].key}.name` || key === `${tree[0].key}.image`) {\n    // Antd modal error notification.\n    notification['error']({\n      message: 'Cannot delete basic fields!',\n      description: 'You cannot delete the basic fields required for templates.'\n    })\n    return tree;\n  }\n  return _removeNodeByPath(tree, key.split('.'));\n}\n\nfunction _addNodeByPath(tree, [head, ...tail], position, node2Add, arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let added = false;\n  let newTree = [];\n  if (!tail.length) {\n    tree = tree || [];\n    let added = false;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name !== head) {\n        newTree.push(cn);\n        continue;\n      }\n      added = true;\n      if (position < 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n      if (position === 0) {\n        if (isLeaf(cn)) return tree;\n        if (!arrayItemsFlag && cn.children.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n\n        let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2Add, cn.key)];\n        if (arrayItemsFlag === 1) {\n          newNodeChildren = updateArrayIndex(newNodeChildren);\n        }\n        newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n      } else {\n        newTree.push(cn);\n      }\n      if (position > 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n    }\n    if (!added) return tree;\n    if (arrayItemsFlag === 2) {\n      return updateArrayIndex(newTree);\n    }\n    return newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    console.log(arrayItemsFlag);\n    const newChildren = _addNodeByPath(node.children, tail, position, node2Add, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    added = true;\n    newTree.push(updateNodeByNewChildren(node, newChildren));\n  }\n  return added ? newTree : tree;\n}\n\nfunction addNodeByPath(tree, [head, ...tail], position, newNode) {\n  return _addNodeByPath(tree, [head, ...tail], position, newNode);\n}\n\nfunction addNode(tree, targetKey, position, newNode) {\n  return _addNodeByPath(tree, targetKey.split('.'), position, newNode);\n}\n\nfunction _moveNodeByPath(tree, [sh, ...st], [th, ...tt], position, arrayItemsFlag = 0) {\n  if (!sh) return tree;\n  if (sh === th && tt.length) {\n    let newTree = [];\n    let updated = false;\n    for (const node of tree) {\n      if (node.name !== sh) {\n        newTree.push(node);\n        continue;\n      }\n      if (isLeaf(node)) return tree;\n      if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n        arrayItemsFlag = 1;\n      } else if (arrayItemsFlag === 1 && sh === '[items]') {\n        arrayItemsFlag = 2;\n      } else {\n        arrayItemsFlag = 0;\n      }\n      const newChildren = _moveNodeByPath(node.children, st, tt, position, arrayItemsFlag);\n      if (newChildren === node.children) {\n        // no change\n        return tree;\n      }\n      updated = true;\n      if (tt.length === 1 && st.length === 1 && node.schema && node.schema.type === 'object') {\n        // reorder object properties\n        let properties = {};\n        for (const child of newChildren) {\n          properties[child.name] = child.schema;\n        }\n        let schema = Object.assign({}, node.schema, {\n          properties,\n        });\n        forceChange(schema);\n        newTree.push(\n          Object.assign({}, node, {\n            schema,\n            children: newChildren,\n          })\n        );\n      } else {\n        newTree.push(updateNodeByNewChildren(node, newChildren));\n      }\n    }\n    return updated ? newTree : tree;\n  }\n\n  if (!st.length && !tt.length) {\n    let newTree = [];\n    let updated = false;\n    const node2move = tree.find((a) => a.name === sh);\n    if (!node2move) return tree;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name === sh) continue;\n      if (cn.name === th) {\n        updated = true;\n        if (position < 0) newTree.push(node2move);\n        if (position === 0) {\n          if (isLeaf(cn)) return tree;\n          let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2move, cn.key)];\n          if (arrayItemsFlag === 1) {\n            newNodeChildren = updateArrayIndex(newNodeChildren);\n          }\n          newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n        } else {\n          newTree.push(cn);\n        }\n        if (position > 0) newTree.push(node2move);\n      } else {\n        newTree.push(cn);\n      }\n    }\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return updated ? newTree : tree;\n  }\n\n  const node2move = getNodeByPath(tree, [sh, ...st]);\n  if (!node2move) return tree;\n  const tmpTree = _removeNodeByPath(tree, [sh, ...st], arrayItemsFlag);\n  const newTree = _addNodeByPath(tmpTree, [th, ...tt], position, node2move, arrayItemsFlag);\n  return newTree === tmpTree ? tree : newTree;\n}\n\nfunction moveNodeByPath(tree, sourceNode, targetNode, position) {\n  return _moveNodeByPath(tree, sourceNode, targetNode, position);\n}\nfunction moveNode(tree, sourceKey, targetKey, position) {\n  return _moveNodeByPath(tree, sourceKey.split('.'), targetKey.split('.'), position);\n}\n\nvar allowedUpdatedTypes = ['string', 'number', 'integer', 'boolean'];\n\nfunction _updateNodeByPath(tree, [head, ...tail], nodeUpdate) {\n  let newTree = [];\n  let updated = false;\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    let newNode = Object.assign({}, node);\n    if (!tail.length) {\n      const { schema, uiSchema, name } = nodeUpdate;\n      let nu = Object.assign({}, nodeUpdate);\n      delete nu.schema;\n      delete nu.uiSchema;\n      delete nu.name;\n      delete nu.children;\n      delete nu.key;\n      newNode = Object.assign(newNode, nu);\n      let typeUpdated = false;\n      if (schema) {\n        updated = true;\n        const oldSchema = node.schema;\n        let newSchema = Object.assign({}, schema);\n        if (!newSchema.type) {\n          newSchema.type = oldSchema.type;\n        } else {\n          if (newSchema.type !== oldSchema.type) {\n            if (allowedUpdatedTypes.includes(newSchema.type) && allowedUpdatedTypes.includes(oldSchema.type)) {\n              typeUpdated = true;\n              for (const i in newSchema) {\n                if (!['type', 'title', 'description'].includes(i)) {\n                  delete newSchema[i];\n                }\n              }\n            } else {\n              return tree;\n            }\n          }\n        }\n\n        if (newSchema.type === 'object') {\n          newSchema.properties = oldSchema.properties;\n        }\n        if (newSchema.type === 'array') {\n          newSchema.items = oldSchema.items;\n          newSchema.additionalItems = oldSchema.items;\n        }\n        newNode.schema = newSchema;\n      }\n      if (uiSchema) {\n        updated = true;\n        const oldUiSchema = node.uiSchema;\n        const newUiSchema = {};\n        for (const i in uiSchema) {\n          if (i.startsWith('ui:') || i === 'classNames') {\n            newUiSchema[i] = uiSchema[i];\n          }\n        }\n        if (typeUpdated) delete newUiSchema['ui:widget'];\n        for (const i in node.uiSchema) {\n          if (!(i.startsWith('ui:') || i === 'classNames')) {\n            newUiSchema[i] = oldUiSchema[i];\n          }\n        }\n        if (isEmptyObject(newUiSchema)) {\n          delete newNode.uiSchema;\n        } else {\n          newNode.uiSchema = newUiSchema;\n        }\n      }\n      if (name && name !== newNode.name) {\n        if (tree.find((a) => a.name === name)) return tree;\n        updated = true;\n        newNode = updateNodeParentKeyAndName(newNode, null, name);\n      }\n      newTree.push(newNode);\n    } else {\n      if (node.children) {\n        const newChildren = _updateNodeByPath(node.children, tail, nodeUpdate);\n        if (newChildren === node.children) {\n          return tree;\n        }\n        updated = true;\n        let newNode = updateNodeByNewChildren(node, newChildren);\n        // update required\n        let newSchema = null;\n        if (\n          tail.length === 1 &&\n          nodeUpdate.name &&\n          (newSchema = newNode.schema) &&\n          newSchema.required &&\n          newSchema.required.includes(tail[0])\n        ) {\n          newNode.schema = Object.assign({}, newSchema, {\n            required: newSchema.required.map((a) => (a === tail[0] ? nodeUpdate.name : a)),\n          });\n        }\n        newTree.push(newNode);\n      } else {\n        return tree;\n      }\n    }\n  }\n  return updated ? newTree : tree;\n}\n\nfunction updateNodeByPath(tree, path, nodeUpdate) {\n  return _updateNodeByPath(tree, path, nodeUpdate);\n}\n\nfunction updateNode(tree, targetKey, nodeUpdate) {\n  return updateNodeByPath(tree, targetKey.split('.'), nodeUpdate);\n}\n\nvar SEPERATOR = '_';\nfunction getNodeByRjsfId(tree, rjsfId) {\n  for (const node of tree) {\n    if (node && node.name === rjsfId) {\n      return node;\n    }\n    if (rjsfId.startsWith(node.name) && rjsfId[node.name.length] === SEPERATOR) {\n      if (node.schema.type === 'array') {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const i = rjsfId.indexOf(SEPERATOR);\n        const index = i > 0 ? rjsfId.slice(0, i) : rjsfId;\n        if (isNaN(index)) return null;\n        const rest = i > 0 ? rjsfId.slice(i + 1) : null;\n        if (Array.isArray(node.schema.items)) {\n          if (+index < node.schema.items.length) {\n            let n = node.children.find((a) => a.name === '[items]');\n            n = n && n.children.find((a) => a.name === index);\n            return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n          } else {\n            let n = node.children.find((a) => a.name === 'additionalItems');\n            return rest ? n && getNodeByRjsfId(n.children, rest) : n;\n          }\n        } else {\n          let n = node.children.find((a) => a.name === 'items');\n          return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n        }\n      }\n\n      if (node.children) {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const n = getNodeByRjsfId(node.children, rjsfId);\n        if (n) return n;\n      }\n    }\n  }\n  return null;\n}\n\nexport {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n\nexport default {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://infohebackoffice.herokuapp.com';\nexport const instance = axios.create({\n    // baseURL: 'https://infohebackoffice.herokuapp.com' \n    // baseURL : 'http://localhost:4000'\n    baseURL : 'https://infohebackend.herokuapp.com'\n\n});\n\n// export default {instance};","import React, { useState } from 'react';\nimport { Modal, Input, Form } from 'antd';\n\nconst NewCategoryModal = ({ visibility, setVisibility, saveNewCategory }) => {\n\n    let [name, setName] = useState('')\n    let [image, setImage] = useState('')\n\n    const handleOk = e => {\n        let newName = name;\n        let newImage = image;\n        setName('');\n        setImage('');\n        saveNewCategory(newName,newImage);\n    };\n\n    const handleCancel = e => {\n        setVisibility(false)\n    };\n\n    return (\n        <Modal\n            title=\"Add Category Name\"\n            visible={visibility}\n            onOk={handleOk}\n            onCancel={handleCancel}\n            destroyOnClose\n        >\n            <Form preserve={false}>\n                <Input size=\"large\" placeholder=\"Enter category\" onChange={e => setName(e.target.value)} defaultValue=''/>\n                <Input size=\"large\" placeholder=\"Enter category\" onChange={e => setImage(e.target.value)} defaultValue=''/>\n\n            </Form>\n        </Modal>\n    )\n}\n\nexport default NewCategoryModal\n","import React from 'react';\nimport { Modal } from 'antd';\n\nconst DeleteCategoryModal = ({ visibility, setVisibility, deleteCategory }) => {\n\n    const handleOk = e => {\n        deleteCategory(true)\n        setVisibility(false)\n    };\n\n    const handleCancel = e => {\n        setVisibility(false)\n    };\n\n    return (\n        <Modal\n            title=\"Confirm to delete Category\"\n            visible={visibility}\n            onOk={handleOk}\n            onCancel={handleCancel}\n        >\n            <p>Are you sure you want to delete this Category?</p>\n        </Modal>\n    )\n}\n\nexport default DeleteCategoryModal\n","import React from 'react';\nimport { Modal } from 'antd';\n\nconst DeleteTemplateModal = ({ visibility, setVisibility, deleteTemplate }) => {\n\n    const handleOk = e => {\n        deleteTemplate()\n        setVisibility(false)\n    };\n\n    const handleCancel = e => {\n        setVisibility(false)\n    };\n\n    return (\n        <Modal\n            title=\"Confirm to remove Template\"\n            visible={visibility}\n            onOk={handleOk}\n            onCancel={handleCancel}\n        >\n            <p>Are you sure you want to delete this Template?</p>\n        </Modal>\n    )\n}\n\nexport default DeleteTemplateModal;\n","import React from 'react';\nimport { Input } from 'antd';\n\nconst Search = ({ selectPrevMatch, selectNextMatch, searchParams, inputChange}) => {\n    let { searchFocusIndex, searchString, searchFoundCount } = searchParams;\n    return (\n        <form\n            style={{ display: 'flex', width: '60%' }}\n            onSubmit={event => {\n                event.preventDefault();\n            }}\n        >\n            <Input\n                id=\"find-box\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={searchString}\n                onChange={inputChange}\n            />\n            <button\n                type=\"button\"\n                disabled={!searchFoundCount}\n                onClick={selectPrevMatch}\n            >\n                &lt;\n            </button>\n            <button\n                type=\"submit\"\n                disabled={!searchFoundCount}\n                onClick={selectNextMatch}\n            >\n                &gt;\n            </button>\n            <span>\n                &nbsp;\n                {searchFoundCount > 0 ? searchFocusIndex + 1 : 0}\n                &nbsp;/&nbsp;\n                {searchFoundCount || 0}\n            </span>\n        </form>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport { Button } from 'antd';\n\nconst NewRootCategory = ({onClick}) => {\n    return (\n        <Button\n            type=\"primary\"\n            onClick={onClick}\n        >\n            Add New Category\n        </Button>\n    )\n}\n\nexport default NewRootCategory;","import React, { Component } from 'react';\nimport {instance as api} from '../../axios';\nimport './Categories.css';\n// after\nimport { connect } from \"react-redux\";\nimport SortableTree from 'react-sortable-tree';\nimport { getTreeFromFlatData, addNodeUnderParent, removeNodeAtPath } from \"react-sortable-tree\";\nimport \"react-sortable-tree/style.css\";\nimport { notification, Button, Skeleton } from 'antd';\n\nimport NewCategoryModal from './New';\nimport DeleteCategoryModal  from './Delete';\nimport DeleteTemplateModal from './Delete/DeleteTemplate';\nimport Search from './Search';\nimport NewRootCategory from './New/RootCategory'; \nclass Categories extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          searchString: '',\n          searchFocusIndex: 0,\n          searchFoundCount: null,\n          categories: [],\n          newCategory: {\n            ModalVisiblity: false,\n            name: \"\",\n            node: null,\n            path: null\n          },\n          deleteCategory: {\n            ModalVisiblity: false,\n            node: null,\n            path: null\n          },\n          deleteTemplate: {\n            ModalVisiblity: false,\n            node: null,\n            path: null\n          }\n        };\n        this.saveToBackend = this.saveToBackend.bind(this)\n        this.newModalVisibility = this.newModalVisibility.bind(this)\n        this.saveNewCategory = this.saveNewCategory.bind(this)\n        \n        this.deleteFromBackend = this.deleteFromBackend.bind(this)\n        this.deleteModalVisibility = this.deleteModalVisibility.bind(this)\n        this.deleteCategory = this.deleteCategory.bind(this)\n    }\n\n    async componentDidMount () {\n        const {data} = await api.get(\"/categories\")\n        let categories = data;\n        for (var i = 0; i < categories.length; i++) {\n          // To remove certain null values. This bug had been rectified in the backend.\n          // Condition still kept as a double check\n          if (categories[i] === null) {\n            categories.splice(i, 1);\n            i--;\n            continue;\n          }\n          categories[i].title = categories[i].name\n        }\n        \n        function getKey(node) {\n          return node._id;\n        }\n\n        function getParentKey(node) {\n          return node.parent_id\n        }\n\n        const tree = getTreeFromFlatData({flatData: categories, getKey, getParentKey, rootKey: null})\n        categories = tree; //populate this from API.\n        this.setState({ categories });\n        this.props.setOptions({ options: categories })\n    }\n\n    async deleteFromBackend (id) {\n      const resp = await api.delete('/categories/'+id)\n      if (resp.status === 204) {\n        notification['success']({\n          message: 'Category Deleted',\n          description:\n            'The category has been deleted from the database!',\n        });\n      }\n    }\n\n    saveToBackend (newNode) {\n      let newCategory = this.state.newCategory;\n      this.setState({newCategory})\n      return api.post(\"/categories\", {...newNode, name: newNode.title})\n        .then(resp => {\n          if(resp.status === 201) {\n            notification['success']({\n              message: 'New Category Saved',\n              description:\n                'The new category has been added to the database!',\n            });\n            return true;\n          } else {\n            return false;\n          }\n        }).catch(e => false)\n    }\n\n    newModalVisibility (bool, node, path) {\n      let newCategory = this.state.newCategory\n      newCategory.ModalVisiblity = bool\n      // We need to save the node and path of the current node so that\n      // the modal will send the data and we can have the parent_id to send to the backend. \n      if(node) {\n        newCategory.node = node\n      }\n      if(path) {\n        newCategory.path = path\n      }\n      this.setState({newCategory})\n    }\n\n    async saveNewCategory (name,image) {\n      const getNodeKey = ({ treeIndex }) => treeIndex;\n      let newCategory = this.state.newCategory\n      let {node, path} = newCategory, title = name\n\n      if (!title) {\n        return;\n      }\n      const newNode = {\n        title,\n        image:image,\n        hello:\"hello\",\n        parent_id: node ? node._id : null,\n        path: node ? node.path + '/' + title : title, \n      };\n      \n      const savedToBackend = await this.saveToBackend(newNode)\n      if (!savedToBackend) {\n        return notification['error']({\n          message: 'An Error Occurred',\n          description: 'The new category was not added to the database!',\n        });\n      }\n      if(node === null) {\n        this.setState(state => ({\n          categories: state.categories.concat(newNode),\n        }))\n      } else {\n        this.setState((state) => ({\n          categories: addNodeUnderParent({\n            treeData: state.categories,\n            parentKey: path[path.length - 1],\n            expandParent: true,\n            getNodeKey,\n            newNode,\n            addAsFirstChild: state.addAsFirstChild,\n          }).treeData,\n        }));\n      }\n      // After addition of the new node, the newCategory variable in state needs to be updated.\n      // BUG: This code is not working. newCategory is not updated.\n      newCategory.ModalVisiblity = false;\n      newCategory.node = null;\n      newCategory.path = null;\n      this.setState({ newCategory })\n    }\n\n    deleteModalVisibility(bool, node, path) {\n      let deleteCategory = this.state.deleteCategory\n      deleteCategory.ModalVisiblity = bool\n      if (node) {\n        deleteCategory.node = node\n      }\n      if (path) {\n        deleteCategory.path = path\n      }\n      this.setState({ deleteCategory })\n    }\n\n    deleteCategory (bool) {\n      const getNodeKey = ({ treeIndex }) => treeIndex;\n      let {node, path} = this.state.deleteCategory\n      this.setState(state => ({\n        categories: removeNodeAtPath({\n          treeData: state.categories,\n          path,\n          getNodeKey,\n        }),\n      }))\n      this.deleteFromBackend(node._id)\n    }\n\n    deleteTemplate = async () => {\n      const node = this.state.deleteTemplate.node\n      const resp = await api.delete(`/templates/${node.template_id}`)\n      if (resp.status === 204) {\n        notification['success']({\n          message: 'Template Deleted',\n          description:\n            'The template has been removed from the database!',\n        });\n        let categories = this.state.categories;\n        categories.forEach(cat => {\n          if (cat._id === node._id) {\n            cat.template_id = null;\n          }\n        })\n        this.setState({ categories })\n      }\n    }\n\n    deleteTemplateModalVisibility = (bool, node, path) => {\n      let deleteTemplate = this.state.deleteTemplate;\n      deleteTemplate = {\n        ModalVisiblity: bool,\n        node, \n        path\n      };\n      this.setState({ deleteTemplate });\n    }\n\n    render() {\n      const { searchString, searchFocusIndex, searchFoundCount } = this.state;\n      \n      const selectPrevMatch = () =>\n        this.setState({\n          searchFocusIndex:\n            searchFocusIndex !== null\n              ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n              : searchFoundCount - 1,\n        });\n\n      const selectNextMatch = () =>\n        this.setState({\n          searchFocusIndex:\n            searchFocusIndex !== null\n              ? (searchFocusIndex + 1) % searchFoundCount\n              : 0,\n        });\n\n      const customSearchMethod = ({ node, searchQuery }) => {\n        return (\n        searchQuery &&\n        node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1)\n      }\n\n      const searchInputChange = (event) => this.setState({ searchString: event.target.value });\n      return (\n        <div className=\"Categories\">\n          <h3>List of Categories</h3>\n          <Search\n            searchParams={{searchString, searchFocusIndex, searchFoundCount}}\n            selectPrevMatch={selectPrevMatch}\n            selectNextMatch={selectNextMatch}\n            inputChange={searchInputChange}\n          />\n          <NewRootCategory \n            onClick={() => this.newModalVisibility(true, null, null)}\n          />\n          {this.state.categories.length ? (<SortableTree\n            canDrag={false}\n            treeData={this.state.categories}\n            onChange={(treeData) => this.setState({ categories: treeData })}\n            generateNodeProps={({ node, path }) => ({\n              buttons: [\n                <Button\n                  onClick={async () => {\n                    this.newModalVisibility(true, node, path)\n                  }}\n                >\n                  Add Child\n                </Button>,\n                // If a category has children or a category has an existing template, it cannot be deleted. \n                (!node.children && node.template_id == null) ? (<Button\n                  onClick={(event) => {\n                    this.deleteModalVisibility(true, node, path)\n                  }\n                }>\n                  Remove\n                </Button>) : null,\n                (!node.template_id) ? (<Button\n                  href={`/template?category=${node._id}`}\n                >\n                  Add Template\n                </Button>) : [(<Button\n                  key={`edit-${node._id}`}\n                  href={`/template?category=${node._id}&template=${node.template_id}`}\n                >\n                  View/Edit Template\n                </Button>),\n                ((node.products === 0 && node.template_id !== null) ? (<Button\n                  key={`remove-${node._id}`}\n                  onClick={async (event) => this.deleteTemplateModalVisibility(true, node, path)}\n                >\n                  Remove Template\n                </Button>) : (<Button\n                  key={`editprod-${node._id}`}\n                  href={`/product?category=${node._id}`}\n                >\n                  View/Edit Product\n                </Button>)),\n                (<Button\n                  key={`addprod-${node._id}`}\n                  href={`/addproduct?category=${node._id}&template=${node.template_id}`}\n                >\n                  Add Product\n                </Button>)],\n              ],\n            })}\n            searchMethod={customSearchMethod}\n            onlyExpandSearchedNodes\n            // The query string used in the search. This is required for searching.\n            searchQuery={searchString}\n            // When matches are found, this property lets you highlight a specific\n            // match and scroll to it. This is optional.\n            searchFocusOffset={searchFocusIndex}\n            // This callback returns the matches from the search,\n            // including their `node`s, `treeIndex`es, and `path`s\n            // Here I just use it to note how many matches were found.\n            // This is optional, but without it, the only thing searches\n            // do natively is outline the matching nodes.\n            searchFinishCallback={matches =>\n              this.setState({\n                searchFoundCount: matches.length,\n                searchFocusIndex:\n                matches.length > 0 ? searchFocusIndex % matches.length : 0,\n              })\n            }\n          />) : <Skeleton active />}\n          <NewCategoryModal\n            visibility={this.state.newCategory.ModalVisiblity}\n            setVisibility={this.newModalVisibility}\n            saveNewCategory={this.saveNewCategory}\n          />\n          <DeleteCategoryModal\n            visibility={this.state.deleteCategory.ModalVisiblity}\n            setVisibility={this.deleteModalVisibility}\n            deleteCategory={this.deleteCategory}\n          />\n          <DeleteTemplateModal\n            visibility={this.state.deleteTemplate.ModalVisiblity}\n            setVisibility={this.deleteTemplateModalVisibility}\n            deleteTemplate={this.deleteTemplate}\n          />\n        </div>\n      );\n    }\n}\n\nexport default connect(({ options }) => ({\n  options\n}), (dispatch) => ({\n  setOptions: ({ options }) => \n    dispatch({\n      type: 'SET_OPTIONS',\n      payload: options\n    })\n}))(Categories);\n","import React from 'react';\nimport ArrayField from '@rjsf/core/lib/components/fields/ArrayField';\n\nimport { getWidget, getUiOptions, optionsList, retrieveSchema, getDefaultRegistry } from './utils';\n\nclass ArrayFieldPatched extends ArrayField {\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData,\n      disabled,\n      readonly,\n      autofocus,\n      onBlur,\n      onFocus,\n      registry = getDefaultRegistry(),\n      rawErrors,\n    } = this.props;\n    const items = this.props.formData;\n    const { widgets, definitions, formContext } = registry;\n    const itemsSchema = retrieveSchema(schema.items, definitions, formData);\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', ...options } = {\n      ...getUiOptions(uiSchema),\n      enumOptions,\n    };\n    const Widget = getWidget(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema && idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n}\n\nexport default ArrayFieldPatched;\n","import React from 'react';\nimport * as types from '@rjsf/core/lib/types';\n\nimport { getWidget, getUiOptions, optionsList, getDefaultRegistry } from './utils';\n\nfunction BooleanField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry = getDefaultRegistry(),\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, fields } = registry;\n  const { widget = 'checkbox', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  let enumOptions;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map((option) => ({\n        ...option,\n        title: option.title || (option.const === true ? 'Yes' : 'No'),\n      })),\n    });\n  } else {\n    enumOptions = optionsList({\n      enum: schema.enum || [true, false],\n      enumNames: schema.enumNames || (schema.enum && schema.enum[0] === false ? ['No', 'Yes'] : ['Yes', 'No']),\n    });\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n      DescriptionField={fields.DescriptionField}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default BooleanField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getWidget, getUiOptions, isSelect, optionsList, getDefaultRegistry, hasWidget } from './utils';\n\nfunction StringField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    registry = getDefaultRegistry(),\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext } = registry;\n  const enumOptions = isSelect(schema) && optionsList(schema);\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      label={title === undefined ? name : title}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  StringField.propTypes = {\n    schema: PropTypes.object.isRequired,\n    uiSchema: PropTypes.object.isRequired,\n    idSchema: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    formData: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    registry: PropTypes.shape({\n      widgets: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])).isRequired,\n      fields: PropTypes.objectOf(PropTypes.func).isRequired,\n      definitions: PropTypes.object.isRequired,\n      formContext: PropTypes.object.isRequired,\n    }),\n    formContext: PropTypes.object.isRequired,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    rawErrors: PropTypes.arrayOf(PropTypes.string),\n  };\n}\n\nStringField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default StringField;\n","import SchemaField from '@rjsf/core/lib/components/fields/SchemaField';\nimport { notification } from 'antd';\n\nexport default class PatchedSchemaField extends SchemaField {\n  componentDidCatch(error, info) {\n    notification.error({\n      message: `Error: ${this.props.idSchema.$id}`,\n      description: error.toString(),\n      duration: 0,\n    });\n  }\n}\n","import React from 'react';\nimport { Alert } from 'antd';\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport StringField from './StringField';\nimport SchemaField from './SchemaField';\nimport { getWidget as _getWidget } from '@rjsf/core/lib/utils';\nexport * from '@rjsf/core/lib/utils';\n\nfunction Error(msg) {\n  return () => <Alert message={msg} type=\"error\" showIcon />;\n}\n\nexport function getWidget(...args) {\n  try {\n    return _getWidget(...args);\n  } catch (e) {\n    return Error(e.toString());\n  }\n}\n\nfunction TitleField(props) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required ? '*' : null}\n    </legend>\n  );\n}\n\nexport function getDefaultRegistry() {\n  const fields = {\n    ...require('@rjsf/core/lib/components/fields').default,\n    ArrayField,\n    StringField,\n    BooleanField,\n    TitleField,\n    SchemaField,\n  };\n  return {\n    fields,\n    widgets: require('@rjsf/core/lib/components/widgets').default,\n    definitions: {},\n    formContext: {},\n  };\n}\n","import Form from '@rjsf/core/lib';\nimport { getDefaultRegistry } from './utils';\n\nexport default class FormPatch extends Form {\n  getRegistry() {\n    const { fields, widgets } = getDefaultRegistry();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      widgets: { ...widgets, ...this.props.widgets },\n      ArrayFieldTemplate: this.props.ArrayFieldTemplate,\n      ObjectFieldTemplate: this.props.ObjectFieldTemplate,\n      FieldTemplate: this.props.FieldTemplate,\n      definitions: this.props.schema.definitions || {},\n      formContext: this.props.formContext || {},\n      onSubmit: this.props.onSubmit\n    };\n  }\n}\n","import React from 'react';\n\nconst REQUIRED_FIELD_SYMBOL = '*';\n\nfunction Label(props) {\n  const { label, required, id } = props;\n  if (!label) {\n    // See #312: Ensure compatibility with old versions of React.\n    return <div />;\n  }\n  return (\n    <label className=\"control-label\" htmlFor={id}>\n      {label}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n\nexport function DefaultTemplate(props) {\n  const { id, classNames, label, children, errors, help, description, hidden, required, displayLabel } = props;\n  if (hidden) {\n    return children;\n  }\n\n  return (\n    <div className={classNames}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </div>\n  );\n}\n\nexport function DefaultObjectFieldTemplate(props) {\n  const { TitleField, DescriptionField } = props;\n  return (\n    <fieldset>\n      {(props.uiSchema['ui:title'] || props.title) && (\n        <TitleField\n          id={`${props.idSchema.$id}__title`}\n          title={props.title || props.uiSchema['ui:title']}\n          required={props.required}\n          formContext={props.formContext}\n        />\n      )}\n      {props.description && (\n        <DescriptionField\n          id={`${props.idSchema.$id}__description`}\n          description={props.description}\n          formContext={props.formContext}\n        />\n      )}\n      {props.properties.map((prop) => prop.content)}\n    </fieldset>\n  );\n}\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\n\nexport default class InlineEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      value: this.props.value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ value: nextProps.value });\n  }\n\n  onChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n  onCompleteEditing = () => {\n    this.setState({ editing: false });\n    const newValue = this.state.value.trim();\n    if (newValue !== this.props.value) {\n      this.props.onChange && this.props.onChange(newValue);\n    }\n  };\n  onStartEditing = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState({ editing: true }, () => this.input && this.input.focus());\n  };\n\n  onCancelEditing = () => {\n    this.setState({\n      editing: false,\n      value: this.props.value,\n    });\n  };\n\n  renderEditing() {\n    return (\n      <Input\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        onKeyUp={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.keyCode === 13) {\n            this.onCompleteEditing();\n          } else if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n\n  renderView() {\n    return (\n      <span>\n        {this.props.children}\n        <EditOutlined onClick={this.onStartEditing} />\n      </span>\n    );\n  }\n\n  render() {\n    if (this.state.editing) {\n      return this.renderEditing();\n    } else {\n      return this.renderView();\n    }\n  }\n}\n","import React from 'react';\nimport InlineEditor from '../InlineEditor';\nimport { connect } from 'react-redux';\nimport { Input, Popconfirm, Tooltip } from 'antd';\nimport { SelectOutlined, DeleteOutlined } from '@ant-design/icons';\nconst { getNodeByRjsfId } = require('../core');\nconst { TextArea } = Input;\n\nconst ACTIVE_STYLE = { backgroundColor: '#bae7ff' };\n\nclass ExtendedInlineEditor extends InlineEditor {\n  renderView() {\n    return (\n      <span className=\"fb-test\" onClick={this.onStartEditing}>\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nclass InlineTextAreaEditor extends ExtendedInlineEditor {\n  renderEditing() {\n    return (\n      <TextArea\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        autoSize\n        onKeyUp={(e) => {\n          if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst ButtonGroup = connect(null, (dispatch, { id }) => ({\n  select: () => dispatch({ type: 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID', payload: id }),\n  remove: () => dispatch({ type: 'TREE_REMOVE_NODE_BY_RJSF_ID', payload: id }),\n}))((props) => {\n  const { select, remove, id } = props;\n  return (\n    <Tooltip title={id} placement=\"right\">\n      <a href=\"#!\">\n        <SelectOutlined onClick={select} />\n      </a>\n      <Popconfirm title={`Remove ${id}?`} onConfirm={remove}>\n        <a href=\"#!\">\n          <DeleteOutlined />\n        </a>\n      </Popconfirm>\n    </Tooltip>\n  );\n});\n\nexport function fieldTemplateConnector(FieldTemplate) {\n  return connect(\n    ({ tree: { present }, activeNodeKey, settings: { isInlineMode } }, { id }) => {\n      const n = getNodeByRjsfId(present, id);\n      const active = n && n.key === activeNodeKey;\n      return { tree: present, active, isInlineMode };\n    },\n    (dispatch, { id, schema, uiSchema }) => ({\n      updateTitle: (title) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { schema: { ...schema, title } } },\n        }),\n      updateDescription: (description) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { schema: { ...schema, description } } },\n        }),\n      updateHelp: (help) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { uiSchema: { ...uiSchema, 'ui:help': help } } },\n        }),\n    })\n  )((props) => {\n    const {\n      id,\n      label,\n      description,\n      help,\n      schema,\n      updateTitle,\n      updateDescription,\n      updateHelp,\n      active,\n      classNames,\n      isInlineMode,\n    } = props;\n    if (!isInlineMode) return <FieldTemplate {...props} />;\n    const labelElement = label && (\n      <ExtendedInlineEditor value={label} onChange={updateTitle}>\n        {label}\n      </ExtendedInlineEditor>\n    );\n    const descriptionElement = description && (\n      <InlineTextAreaEditor value={description.props.description} onChange={updateDescription}>\n        {description}\n      </InlineTextAreaEditor>\n    );\n    const helpElement = help && (\n      <ExtendedInlineEditor value={help.props.help} onChange={updateHelp}>\n        {help}\n      </ExtendedInlineEditor>\n    );\n    return (\n      <div className={classNames} style={active ? ACTIVE_STYLE : null}>\n        {['object', 'array'].includes(schema.type) ? null : (\n          <div className=\"pull-right\">\n            {' '}\n            <ButtonGroup id={id} />{' '}\n          </div>\n        )}\n        <FieldTemplate\n          _label={label}\n          _description={description}\n          _help={help}\n          {...props}\n          classNames={null}\n          label={labelElement}\n          description={descriptionElement}\n          help={helpElement}\n        />\n      </div>\n    );\n  });\n}\n\nexport function objectFieldTemplateConnector(ObjectFieldTemplate) {\n  return connect(\n    ({ tree: { present }, activeNodeKey, settings: { isInlineMode } }, { idSchema }) => {\n      const n = idSchema && idSchema.$id && getNodeByRjsfId(present, idSchema.$id);\n      const active = n && n.key === activeNodeKey;\n      return { tree: present, active, isInlineMode };\n    },\n    (dispatch, { idSchema, schema }) => ({\n      updateTitle: (title) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: idSchema.$id, nodeUpdate: { schema: { ...schema, title } } },\n        }),\n      updateDescription: (description) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: idSchema.$id, nodeUpdate: { schema: { ...schema, description } } },\n        }),\n    })\n  )((props) => {\n    const { idSchema, title, description, updateTitle, updateDescription, active, isInlineMode } = props;\n    if (!isInlineMode) return <ObjectFieldTemplate {...props} />;\n    const titleElement = title && (\n      <span>\n        <ExtendedInlineEditor value={title} onChange={updateTitle}>\n          {title}\n        </ExtendedInlineEditor>\n        <span className=\"pull-right\">\n          {' '}\n          <ButtonGroup id={idSchema.$id} />{' '}\n        </span>\n      </span>\n    );\n    const descriptionElement = description && (\n      <InlineTextAreaEditor value={description} onChange={updateDescription}>\n        {description}\n      </InlineTextAreaEditor>\n    );\n\n    return (\n      <div style={active ? ACTIVE_STYLE : null}>\n        <ObjectFieldTemplate\n          _title={title}\n          _description={description}\n          {...props}\n          title={titleElement}\n          description={descriptionElement}\n        />\n      </div>\n    );\n  });\n}\n","import { DefaultTemplate, DefaultObjectFieldTemplate } from './Template';\nimport { fieldTemplateConnector, objectFieldTemplateConnector } from './connectors';\n\nexport const FieldTemplate = fieldTemplateConnector(DefaultTemplate);\nexport const ObjectFieldTemplate = objectFieldTemplateConnector(DefaultObjectFieldTemplate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from '../rjsf-patch/Form';\n\nimport { FieldTemplate, ObjectFieldTemplate } from '../Template';\n\nclass FormView extends React.Component {\n  render() {\n    if (!this.props.schema) {\n      return null;\n    }\n    const { name, schema, uiSchema, formData, setFormData, liveValidate, onSubmit } = this.props;\n    return (\n      <Form\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        liveValidate={liveValidate}\n        FieldTemplate={FieldTemplate}\n        ObjectFieldTemplate={ObjectFieldTemplate}\n        idPrefix={name}\n        onChange={setFormData}\n        onSubmit={onSubmit}\n      />\n    );\n  }\n}\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ name, schema, uiSchema }],\n    },\n    formData,\n    settings: { isLiveValidate },\n  }) => ({\n    name,\n    schema,\n    uiSchema,\n    formData,\n    liveValidate: isLiveValidate,\n  }),\n  (dispatch) => ({\n    setFormData: ({ formData }) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n  })\n)(FormView);\n","import React from 'react';\nimport { Input, Alert } from 'antd';\nconst { TextArea } = Input;\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  if (!objA || !objB) {\n    return false;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) && (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B'a keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default class JsonEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      string: JSON.stringify(value, null, 2),\n      value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!shallowEqual(nextProps.value, this.state.value)) {\n      this.setState({\n        value: nextProps.value,\n        string: JSON.stringify(nextProps.value, null, 2),\n        error: null,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.string !== this.state.string;\n  }\n\n  onChange = (e) => {\n    const value = e.target.value;\n    try {\n      const obj = value ? JSON.parse(value) : null;\n      this.setState(\n        {\n          value: obj,\n          string: value,\n          error: null,\n        },\n        () => this.props.onChange(obj)\n      );\n    } catch (error) {\n      this.setState({\n        string: value,\n        error,\n      });\n    }\n  };\n\n  renderErrorMessage() {\n    const { error } = this.state;\n    if (!error) return null;\n    const errorMessage = error.toString();\n    const message = (\n      <a\n        href=\"#!\"\n        onClick={() => {\n          const matched = /position ([0-9]+)/.exec(errorMessage);\n          const position = matched ? matched[1] : -1;\n          const input = this.input.textAreaRef;\n          input.selectionStart = position;\n          input.selectionEnd = position;\n          input.focus();\n        }}\n      >\n        {error.toString()}\n      </a>\n    );\n    return <Alert message={message} type=\"error\" showIcon />;\n  }\n\n  onClickPrettify = () => {\n    let { error } = this.state;\n    if (!error) {\n      this.setState({\n        string: JSON.stringify(this.props.value, null, 2),\n      });\n    }\n  };\n\n  render() {\n    const { string } = this.state;\n    return (\n      <div>\n        {this.renderErrorMessage() || (\n          <Alert\n            message={\n              <a href=\"#!\" onClick={this.onClickPrettify}>\n                Prettify\n              </a>\n            }\n            type=\"success\"\n            showIcon\n          />\n        )}\n        <TextArea {...this.props} ref={(ref) => (this.input = ref)} value={string} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ schema }],\n    },\n  }) => ({ schema }),\n  (dispatch) => ({\n    setTree: (schema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          schema,\n        },\n      }),\n  })\n)(({ schema, setTree }) => <JsonEditor value={schema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ uiSchema }],\n    },\n  }) => ({ uiSchema }),\n  (dispatch) => ({\n    setTree: (uiSchema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          uiSchema,\n        },\n      }),\n  })\n)(({ uiSchema, setTree }) => <JsonEditor value={uiSchema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport JsonEditor from '../JsonEditor';\n\nfunction name2title(name) {\n  if (!name) return name;\n  const words = name.indexOf('_') >= 0 ? name.split('_') : name.split(/(?=[A-Z])/);\n  return words.map((a) => a.charAt(0).toUpperCase() + a.slice(1)).join(' ');\n}\n\nfunction json2schema(data, name) {\n  const title = name ? name2title(name) : undefined;\n  if (typeof data === 'number') {\n    return {\n      type: Number.isInteger(data) ? 'integer' : 'number',\n      title,\n    };\n  }\n  if (typeof data === 'string') {\n    return {\n      type: 'string',\n      title,\n    };\n  }\n  if (typeof data === 'boolean') {\n    return {\n      type: 'boolean',\n      title,\n    };\n  }\n  if (typeof data === 'object') {\n    if (Array.isArray(data)) {\n      return {\n        type: 'array',\n        title,\n        items: json2schema(data[0]),\n      };\n    }\n    let properties = {};\n    for (const i in data) {\n      const s = json2schema(data[i], i);\n      if (s) {\n        properties[i] = s;\n      }\n    }\n    return {\n      type: 'object',\n      title,\n      properties,\n    };\n  }\n  return undefined;\n}\n\nexport default connect(\n  ({ formData }) => ({ formData }),\n  (dispatch) => ({\n    setFormData: (formData) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n    genForm: (formData) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          name: 'root',\n          schema: json2schema(formData, 'form'),\n          uiSchema: {},\n        },\n      }),\n  })\n)(({ formData, setFormData, genForm }) => (\n  <div>\n    <JsonEditor value={formData} onChange={(value) => setFormData(value)} autoSize />\n    <Button type=\"primary\" onClick={() => genForm(formData)}>\n      Gen Form\n    </Button>\n    <Button onClick={() => setFormData({})}>Clear</Button>\n  </div>\n));\n","import React, { Component } from 'react';\nimport {instance as api} from '../../axios';\nimport { connect } from 'react-redux';\nimport { Card } from '@material-ui/core';\nimport { FormView } from '../ProductTemplates/views/index';\nimport { notification } from 'antd';\n\nimport './Products.css';\n\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {},\n      schema: {},\n      templateId: null,\n      categoryId: null,\n      productId: null, // Will have value when product is edited.\n    };\n  }\n\n  async componentDidMount() {\n    const query = new URLSearchParams(this.props.location.search)\n    let templateId = query.get('template'), \n        categoryId = query.get('category'),\n        productId = query.get('product');\n    \n    let uiSchema = {}\n    // If product is being Edited\n    if (productId !== null) {\n      this.setState({ productId })\n      // Lock the inputs manuf, model\n      uiSchema = {\n        name: { \"ui:readonly\": true },\n        image: { \"ui:readonly\": true}\n      }\n    }\n    const { data: template } = await api.get(\"/templates/\" + templateId);\n    if (categoryId === 'null') {\n      categoryId = template.category_id\n    }\n    // To remove the inline icons (Delete, etc) which are present in Template page\n    this.props.updateSettings({ isInlineMode: false })\n    this.props.setTree({schema: JSON.parse(template.formSchema), uiSchema})\n    this.setState({ schema: JSON.parse(template.formSchema), templateId, categoryId });\n  }\n\n  submitHandler = async () => {\n  try {\n    let name = '', formData = this.props.formData;\n    name = `${formData.name}`;\n    const body = {\n      template_id: this.state.templateId,\n      category_id: this.state.categoryId,\n      data: JSON.stringify(formData),\n      name\n    };\n    let data;\n    if (this.state.productId !== null) {\n      body.id = this.state.productId\n      data = await api.patch(\"/product\", body);\n    } else {\n      data = await api.post(\"/product\", body);\n    }\n    if (data.status === 201 || data.status === 200) {\n      notification['success']({\n          message: 'Product Added',\n          description:\n            'The product has been added to the database!',\n        });\n      this.props.setFormData({formData: {}})\n    } else {\n      notification['error']({\n        message: 'An Error Occurred',\n        description: 'The product was not saved to the database. Please try again later.'\n      })\n    }\n  } catch (e) {\n    notification['error']({\n      message: 'An Error Occurred',\n      description: 'The product was not saved to the database. Please try again later.'\n    })\n  }\n  };\n\n  render() {\n    return (\n      <div className=\"product\">\n        <h4>Form Page</h4>\n        <h5>{this.state.productId ? 'Edit Product' : 'Add New Product'}</h5>\n        <Card variant=\"elevation\" raised className=\"card\">\n          <FormView\n            formData={this.props.formData}\n            schema={this.props.schema}\n            onSubmit={this.submitHandler}\n          />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(({ \n  settings,\n  formData, \n  tree: {\n    present: [{ schema }]\n  }\n}) => ({\n  settings,\n  schema,\n  formData\n}), (dispatch) => ({\n  setTree: ({schema, uiSchema}) =>\n    dispatch({\n      type: 'TREE_SET_TREE',\n      payload: {\n        schema,\n        uiSchema\n      },\n    }),\n  setFormData: ({ formData }) =>\n    dispatch({\n      type: 'FORM_DATA_SET',\n      payload: formData,\n    }),\n  updateSettings: (payload) =>\n    dispatch({\n      type: 'SETTINGS_UPDATE',\n      payload,\n    }),\n}))(Products);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Menu } from 'antd';\nconst { SubMenu, Item } = Menu;\n\nfunction nameGen(name, occupied) {\n  let n = 1;\n  let newName = name;\n  while (occupied && occupied.includes(newName)) {\n    newName = name + '_' + n;\n    n += 1;\n  }\n  return newName;\n}\n\nclass AddItemMenu extends React.Component {\n  onAddNode = (node2add) => {\n    const { addNode } = this.props;\n    const name = nameGen(\n      node2add.name,\n      this.props.node.children.map((a) => a.name)\n    );\n    console.log(node2add)\n    addNode({ ...node2add, name });\n  };\n  render() {\n    const {\n      menu: { children: menuTree },\n      menuOpenKeys,\n      menuOpenChange,\n    } = this.props;\n    /* A modal can be added here that can ask for the title of the List element to be added. \n    Or a patch file will need to be replicated in the rjsf-patch for specific List element. */\n    return (\n      <Menu mode=\"inline\" theme=\"dark\" openKeys={menuOpenKeys} onOpenChange={menuOpenChange}>\n        {menuTree.map((a) =>\n          a.schema && a.schema.type === 'object' && a.children && a.children.length ? (\n            <SubMenu key={a.key} title={a.schema.title || a.name}>\n              {a.children.map((b) => (\n                <Item key={b.key} onClick={() => this.onAddNode(b)}>\n                  {b.schema.title || b.name}\n                </Item>\n              ))}\n            </SubMenu>\n          ) : (\n            <Item key={a.key} onClick={() => this.onAddNode(a)}>\n              {a.schema.title || a.name}\n            </Item>\n          )\n        )}\n      </Menu>\n    );\n  }\n}\n\nexport default connect(\n  ({ menu, menuOpenKeys }) => ({ menu, menuOpenKeys }),\n  (dispatch, { node }) => ({\n    addNode: (node2add) =>\n      dispatch({\n        type: 'TREE_ADD_NODE',\n        payload: {\n          targetNodeKey: node.key,\n          position: 0,\n          node2add,\n        },\n      }),\n    menuOpenChange: (keys) =>\n      dispatch({\n        type: 'MENU_OPEN_KEYS_SET',\n        payload: keys,\n      }),\n  })\n)(AddItemMenu);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Popconfirm } from 'antd';\nimport { PlusCircleOutlined, CloseCircleFilled } from '@ant-design/icons';\nimport InlineEditor from '../InlineEditor';\nimport { Dropdown, notification } from 'antd';\nimport AddItemMenu from './Menu';\n\nclass TreeNodeTitle extends PureComponent {\n  render() {\n    const { node, removeNode, updateNodeName, searchValue } = this.props;\n    const { name, key } = node;\n    const isLeaf = node.isLeaf;\n    const isRoot = node.name === node.key;\n    const isArray = node.schema.type === 'array';\n    const indexBefore = node.name.toLowerCase().indexOf(searchValue);\n    const indexAfter = indexBefore + searchValue.length;\n    return (\n      <span style={{ display: 'block' }}>\n        {searchValue && indexBefore >= 0 ? (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name.slice(0, indexBefore)}\n            <span style={{ color: '#f50' }}>{name.slice(indexBefore, indexAfter)}</span>\n            {name.slice(indexAfter)}\n          </InlineEditor>\n        ) : (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name}\n          </InlineEditor>\n        )}\n        <span className=\"pull-right\">\n          {!(isLeaf || isArray) ? (\n            <span className=\"form-builder-add-item-menu\" onClick={(e) => e.stopPropagation()}>\n              <Dropdown placement=\"bottomLeft\" trigger={['click']} overlay={<AddItemMenu node={node} />}>\n                <PlusCircleOutlined />\n              </Dropdown>\n            </span>\n          ) : null}\n          {!isRoot ? (\n            <span className=\"tree-node-delete\" onClick={(e) => e.stopPropagation()}>\n              <Popconfirm\n                placement=\"rightTop\"\n                title={`Delete \"${key}\"?`}\n                onConfirm={() => {\n                  // This check is really not needed right now, but still\n                  let thisKey = node.key.split('.')[1]\n                  if (thisKey === 'name' || thisKey === 'image') {\n                    return notification['error']({\n                      message: 'Cannot delete basic fields!',\n                      description: 'You cannot delete the basic fields required for templates.'\n                    })\n                  }\n                  removeNode(key)}}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <CloseCircleFilled />\n              </Popconfirm>\n            </span>\n          ) : null}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default connect(null, (dispatch) => ({\n  removeNode: (key) =>\n    dispatch({\n      type: 'TREE_REMOVE_NODE',\n      payload: key,\n    }),\n  updateNodeName: (key, name) =>\n    dispatch({\n      type: 'TREE_UPDATE_NODE',\n      payload: { target: key, nodeUpdate: { name } },\n    }),\n}))(TreeNodeTitle);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tree, Input } from 'antd';\nimport TreeNodeTitle from './TreeNodeTitle';\nconst { TreeNode } = Tree;\nconst { Search } = Input;\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: ['root'],\n      searchValue: '',\n      searchExpanded: [],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeNodeKey && nextProps.activeNodeKey !== this.props.activeNodeKey) {\n      let path = nextProps.activeNodeKey.split('.');\n      let expandedKeys = [...this.state.expandedKeys];\n      const n = path.length;\n      for (var i = 1; i < n; i++) {\n        path[i] = path[i - 1] + '.' + path[i];\n        if (!expandedKeys.includes(path[i - 1])) {\n          expandedKeys.push(path[i - 1]);\n        }\n      }\n      this.setState({\n        expandedKeys,\n      });\n    }\n  }\n\n  onDrop = (info) => {\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    this.props.moveNode(dragKey, dropKey, dropPosition);\n  };\n\n  onExpand = (expandedKeys) => {\n    this.setState({\n      expandedKeys,\n    });\n  };\n\n  onChange = (e) => {\n    const { expandedKeys } = this.state;\n    const searchValue = e.target.value.trim().toLowerCase();\n    if (!searchValue) {\n      this.setState({\n        searchValue,\n        searchExpanded: [],\n      });\n      return;\n    }\n\n    let newSearchExpanded = [];\n    const loop = (data) => {\n      if (!data) return;\n      for (const item of data) {\n        if (item.name.toLowerCase().includes(searchValue)) {\n          let parents = item.key.split('.');\n          const n = parents.length;\n          for (let i = 1; i < n; i++) {\n            if (!(expandedKeys.includes(parents[i - 1]) || newSearchExpanded.includes(parents[i - 1]))) {\n              newSearchExpanded.push(parents[i - 1]);\n            }\n            parents[i] = parents[i - 1] + '.' + parents[i];\n          }\n        }\n        loop(item.children);\n      }\n    };\n    loop(this.props.tree);\n    this.setState({\n      searchValue,\n      searchExpanded: newSearchExpanded,\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      expandedKeys: [...this.state.expandedKeys, ...this.state.searchExpanded],\n      searchExpanded: [],\n    });\n  };\n\n  render() {\n    const { tree, setActiveNode, activeNodeKey } = this.props;\n    const { searchValue, expandedKeys, searchExpanded } = this.state;\n    const loop = (data) =>\n      data.map((item) => {\n        if (item.children && item.children.length) {\n          return (\n            <TreeNode\n              key={item.key}\n              title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n              isLeaf={item.isLeaf}\n            >\n              {loop(item.children)}\n            </TreeNode>\n          );\n        }\n        return (\n          <TreeNode\n            key={item.key}\n            title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n            isLeaf={item.isLeaf}\n          />\n        );\n      });\n    const children = loop(tree);\n    return (\n      <div>\n        <Search placeholder=\"Search\" onChange={this.onChange} onBlur={this.onBlur} />\n        <Tree\n          className=\"form-builder-draggable-tree\"\n          expandedKeys={searchExpanded.length ? [...expandedKeys, ...searchExpanded] : expandedKeys}\n          selectedKeys={[activeNodeKey]}\n          draggable\n          onDragEnter={this.onDragEnter}\n          onDrop={this.onDrop}\n          onExpand={this.onExpand}\n          onSelect={([selected]) => setActiveNode(selected)}\n          blockNode\n        >\n          {children}\n        </Tree>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    tree: present,\n    activeNodeKey,\n  }),\n  (dispatch) => ({\n    moveNode: (source, target, position) =>\n      dispatch({\n        type: 'TREE_MOVE_NODE',\n        payload: {\n          source,\n          target,\n          position,\n        },\n      }),\n    removeNode: (target) =>\n      dispatch({\n        type: 'TREE_REMOVE_NODE',\n        payload: target,\n      }),\n    setActiveNode: (selectedKey) =>\n      dispatch({\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: selectedKey,\n      }),\n    updateNodeTitle: (target, name) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target: target,\n          node: { name },\n          updateMode: 1,\n        },\n      }),\n  })\n)(Demo);\n","import Tree from './Tree';\nexport default Tree;\n","import React from 'react';\nimport JsonEditor from '../JsonEditor';\nimport { Input } from 'antd';\n\nexport default class NodeJsonEditor extends React.Component {\n  static get key() {\n    return 'json-editor';\n  }\n  static get name() {\n    return 'Json';\n  }\n  static filter(node) {\n    return true;\n  }\n\n  constructor(props) {\n    super(props);\n    const { schema, uiSchema } = props;\n    this.state = {\n      schemaJsonString: JSON.stringify(schema, null, 2),\n      uiSchemaJsonString: JSON.stringify(schema, null, 2),\n      schema,\n      uiSchema,\n    };\n  }\n\n  render() {\n    const { node, updateNode } = this.props;\n    const { schema, uiSchema } = node;\n    const { properties, items, additionalItems, ...rschema } = schema;\n    return (\n      <div>\n        <Input value={node.name} onChange={(e) => updateNode({ name: e.target.value })} />\n        <JsonEditor value={rschema} onChange={(schema) => updateNode({ schema })} autoSize />\n        <JsonEditor value={uiSchema} onChange={(uiSchema) => updateNode({ uiSchema })} autoSize />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Input, InputNumber, Select, Row, Col, Button, List, Dropdown, Menu, Switch, Slider } from 'antd';\nimport { EditOutlined, CaretDownOutlined, CloseOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport lodash from 'lodash';\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nexport function _FormItemTemplate({ title, children }) {\n  return (\n    <Row className=\"ant-form-item\">\n      <Col className=\"ant-form-item-label\">\n        <label>{title}</label>\n      </Col>\n      <Col className=\"ant-form-item-control-wrapper\">{children}</Col>\n    </Row>\n  );\n}\n\nexport function FormItemTemplate({ title, children, remove }) {\n  return (\n    <List.Item\n      actions={\n        remove ? [<Button onClick={remove} size=\"small\" type=\"danger\" shape=\"circle\" icon={<CloseOutlined />} />] : null\n      }\n    >\n      <List.Item.Meta title={title} description={children} />\n    </List.Item>\n  );\n}\n\nclass TimeThrottle extends React.Component {\n  throttle = 1000;\n  editing = (<EditOutlined />);\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: null,\n      value: props.value,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n      this.setState({ timer: null });\n      this.onSubmitValue(this.state.value);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n\n  onChange = (value) => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      value: value,\n      timer: setTimeout(() => {\n        this.setState({ timer: null });\n        this.onSubmitValue(this.state.value);\n      }, this.throttle),\n    });\n  };\n\n  onSubmitValue(value) {\n    this.props.onChange(value);\n  }\n\n  onBlur = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(this.state.value);\n  };\n\n  onRemove = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(undefined);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nclass TimeThrottleInput extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    return (\n      <FormItemTemplate\n        title={\n          <span>\n            {title}\n            {this.state.timer ? this.editing : null}\n          </span>\n        }\n        remove={this.onRemove}\n      >\n        <Input\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleTextArea extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {this.state.timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <TextArea\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleRange extends TimeThrottle {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value[0] !== this.state.value[0] || nextProps.value[1] !== this.state.value[1]) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n  onSubmitValue(value) {\n    if (!value) {\n      this.props.onChange(value);\n    }\n    let [min, max] = value;\n    if (typeof min === 'string') {\n      if (min) {\n        min = this.props.value[0];\n      } else {\n        min = undefined;\n      }\n    }\n    if (typeof max === 'string') {\n      if (max) {\n        max = this.props.value[1];\n      } else {\n        max = undefined;\n      }\n    }\n    this.props.onChange([min, max]);\n  }\n  render() {\n    const {\n      value: [min, max],\n      timer,\n    } = this.state;\n    const { title } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([typeof n === 'string' && !n ? undefined : n, max]);\n          }}\n          value={min === 0 && max === undefined ? '' : min}\n          style={{ width: 100, textAlign: 'center' }}\n          placeholder=\"Minimum\"\n        />\n        <Input\n          style={{ width: 30, borderLeft: 0, pointerEvents: 'none', backgroundColor: '#fff' }}\n          placeholder=\"~\"\n          disabled\n        />\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([min, typeof n === 'string' && !n ? undefined : n]);\n          }}\n          value={max}\n          style={{ width: 100, textAlign: 'center', borderLeft: 0 }}\n          placeholder=\"Maximum\"\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nconst widgetMap = {\n  boolean: {\n    checkbox: 'CheckboxWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    hidden: 'HiddenWidget',\n  },\n  string: {\n    text: 'TextWidget',\n    password: 'PasswordWidget',\n    // email: \"EmailWidget\",\n    // hostname: \"TextWidget\",\n    // ipv4: \"TextWidget\",\n    // ipv6: \"TextWidget\",\n    uri: 'URLWidget',\n    'data-url': 'FileWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    textarea: 'TextareaWidget',\n    hidden: 'HiddenWidget',\n    date: 'DateWidget',\n    datetime: 'DateTimeWidget',\n    // \"date-time\": \"DateTimeWidget\",\n    'alt-date': 'AltDateWidget',\n    'alt-datetime': 'AltDateTimeWidget',\n    color: 'ColorWidget',\n    file: 'FileWidget',\n  },\n  number: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  integer: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  array: {\n    select: 'SelectWidget',\n    checkboxes: 'CheckboxesWidget',\n    files: 'FileWidget',\n  },\n};\n\nconst widgets = lodash(widgetMap)\n  .toPairs()\n  .flatMap(([type, widgets]) =>\n    lodash(widgets)\n      .toPairs()\n      .map(([widget]) => [widget, type])\n      .value()\n  )\n  .groupBy('0')\n  .toPairs()\n  .map(([widget, types]) => [widget, types.map((a) => a[1])])\n  .map(([widget, types]) => [\n    types.length > 1 ? ({ type }) => types.includes(type) : ((t) => ({ type }) => type === t)(types[0]),\n    widget,\n  ])\n  .map(([filter, widget]) => {\n    switch (widget) {\n      case 'select':\n      case 'radio':\n        return [(schema, uiSchema) => schema.enum && filter(schema, uiSchema), widget];\n\n      default:\n        return [filter, widget];\n    }\n  })\n  .value();\n\nfunction type({ node: { schema }, updateSchema: update }) {\n  const key = 'type';\n  const title = 'Type';\n  const availableTypes = ['string', 'number', 'integer', 'boolean'];\n  if (!availableTypes.includes(schema.type)) return [];\n  const value = (schema || {})[key];\n  return [\n    null,\n    <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n      <Select onChange={(value) => update({ [key]: value })} value={value} style={{ width: '100%' }}>\n        {availableTypes.map((key) => (\n          <Option key={key}>{key}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nfunction title({ node: { schema }, updateSchema: update }) {\n  const key = 'title';\n  const title = 'Title';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction description({ node: { schema }, updateSchema: update }) {\n  const key = 'description';\n  const title = 'Description';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleTextArea\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n        autoSize\n      />,\n    ];\n  }\n}\n\nclass ClassNamesEditor extends React.Component {\n  colSizes = ['sm', 'md', 'lg', 'xl'];\n  style = { width: '100%' };\n\n  constructor(props) {\n    super(props);\n    const value = [...new Set(this.props.value.split(' ').filter((a) => a))];\n\n    const cols = this.extractCol(value);\n    this.state = {\n      col: cols.length ? cols[0][0] : 'md',\n      value: value,\n      options: value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      const value = nextProps.value.split(' ').filter((a) => a);\n      const { options } = this.state;\n      const newOptions = value.filter((a) => !options.includes(a));\n      this.setState({\n        value,\n        options: newOptions, //[...options, ...newOptions]\n      });\n    }\n  }\n\n  extractCol(classNames) {\n    return classNames\n      .filter((a) => a.startsWith('col-'))\n      .map((a) => a.split('-'))\n      .filter((a) => a.length === 3 && Number.isInteger(+a[2]) && this.colSizes.includes(a[1]))\n      .map(([a, b, c]) => [b, +c]);\n  }\n\n  renderMenu() {\n    return (\n      <Menu onClick={({ key }) => this.setState({ col: key })}>\n        {this.colSizes.map((a) => (\n          <Menu.Item key={a}>col-{a}-</Menu.Item>\n        ))}\n      </Menu>\n    );\n  }\n\n  sliderValue() {\n    const { value, col } = this.state;\n    return (this.extractCol(value).find((a) => a[0] === col) || [0, 0])[1];\n  }\n\n  onSliderChange = (value) => {\n    const { value: classNames, col } = this.state;\n\n    let found = false;\n    let newClassNames = classNames\n      .map((a) => {\n        let [perfix, b, v] = a.split('-');\n        if (perfix === 'col' && b === col && Number.isInteger(+v)) {\n          found = true;\n          return value ? `col-${b}-${value}` : '';\n        }\n        return a;\n      })\n      .filter((a) => a);\n    if (!found && value) {\n      newClassNames.push(`col-${col}-${value}`);\n    }\n    this.props.onChange(newClassNames.join(' '));\n  };\n\n  render() {\n    const { title, ...rest } = this.props;\n    const { options, value, col } = this.state;\n    return (\n      <FormItemTemplate title={title} remove={() => this.props.onChange(undefined)}>\n        <Row type=\"flex\" align=\"middle\">\n          <Col xs={4}>\n            <Dropdown overlay={this.renderMenu()}>\n              <Button type=\"link\">\n                {col} <CaretDownOutlined />\n              </Button>\n            </Dropdown>\n          </Col>\n          <Col xs={20}>\n            <Slider min={0} max={12} value={this.sliderValue()} onChange={this.onSliderChange} />\n          </Col>\n        </Row>\n        <Select\n          style={this.style}\n          mode=\"tags\"\n          tokenSeparators={[' ']}\n          {...rest}\n          value={value}\n          onChange={(value) => this.props.onChange(value.join(' '))}\n          onBlur={this.onBlur}\n        >\n          {options.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>\n    );\n  }\n}\n\nfunction classNames({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'classNames';\n  const title = 'Class Names';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <ClassNamesEditor key={key} title={title} value={value} onChange={(value) => update({ classNames: value })} />,\n    ];\n  }\n}\n\nfunction placeholder({ node: { schema, uiSchema }, updateUiOptions: update }) {\n  if (schema.type === 'object' || schema.type === 'array') {\n    return [];\n  }\n  const key = 'placeholder';\n  const title = 'Placeholder';\n  const uiOptions = (uiSchema || {})['ui:options'];\n  const value = (uiOptions || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction help({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:help';\n  const title = 'Help';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction widget({ node: { schema, uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:widget';\n  const title = 'Widget';\n  const availableWidgets = widgets.filter(([f]) => f(schema || {}, uiSchema || {}));\n  if (!availableWidgets.length) return [];\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          onChange={(value) => update({ [key]: value || null })}\n          value={value}\n          style={{ width: '100%' }}\n          showSearch\n        >\n          {availableWidgets.map(([_, key]) => (\n            <Option key={key}>{key}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\nfunction pattern({ node: { schema }, updateSchema: update }) {\n  if (schema.type !== 'string') return [];\n  const key = 'pattern';\n  const title = 'Pattern';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction required({ node: { schema }, updateSchema: update }) {\n  const key = 'required';\n  const title = 'Required';\n  if (schema.type !== 'object') return [];\n  if (!schema.required) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <FormItemTemplate key={key} title=\"Required\" remove={() => update({ [key]: undefined })}>\n      <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        onChange={(required) => update({ required })}\n        value={schema.required}\n      >\n        {Object.keys(schema.properties || {}).map((a) => (\n          <Option key={a}>{a}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nconst rangeMeta = (match, key, title, minp, maxp) => ({ node: { schema }, updateSchema: update }) => {\n  if (!match(schema)) return [];\n  if (schema[minp] === undefined && schema[maxp] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [minp]: 0 })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <TimeThrottleRange\n      key={key}\n      title={title}\n      value={[schema[minp], schema[maxp]]}\n      onChange={(value) => {\n        if (!value) {\n          update({ [minp]: undefined, [maxp]: undefined });\n        } else {\n          const [min, max] = value;\n          update({\n            [minp]: min ? min : max === undefined ? 0 : undefined,\n            [maxp]: max,\n          });\n        }\n      }}\n    />,\n  ];\n};\nconst length = rangeMeta((a) => a.type === 'string', 'length', 'Length', 'minLength', 'maxLength');\nconst range = rangeMeta((a) => a.type === 'number' || a.type === 'integer', 'range', 'Range', 'minimum', 'maximum');\nconst itemRange = rangeMeta((a) => a.type === 'array', 'itemRange', 'Item Range', 'minItems', 'maxItems');\n\nfunction uniqueItems({ node: { schema }, updateSchema: update }) {\n  const key = 'uniqueItems';\n  const title = 'Unique Items';\n  if (schema.type !== 'array') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: true })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <List.Item\n        actions={[\n          <Button onClick={() => update({ [key]: undefined })} size=\"small\" type=\"danger\" icon={<CloseOutlined />} />,\n        ]}\n      >\n        <List.Item.Meta title={title} />\n        <Switch defaultChecked onChange={(value) => update({ [key]: value })} />\n      </List.Item>,\n    ];\n  }\n}\n\nconst [enumKey, enumName] = [\n  ['enum', 'Enum'],\n  ['enumNames', 'Enum Names'],\n].map(([key, title]) => ({ node: { schema }, updateSchema: update }) => {\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          mode=\"tags\"\n          style={{ width: '100%' }}\n          onChange={(values) => update({ [key]: values })}\n          value={schema[key]}\n        >\n          {schema[key].map((a) => (\n            <Select.Option key={a}>{a}</Select.Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n});\n\nconst formatOptions = ['date-time', 'email', 'hostname', 'ipv4', 'ipv6', 'uri'];\nfunction format({ node: { schema }, updateSchema: update }) {\n  const key = 'format';\n  const title = 'Format';\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select style={{ width: '100%' }} onChange={(value) => update({ [key]: value })} value={schema[key]}>\n          {formatOptions.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\n\nexport default class BasicEditor extends React.Component {\n  static get key() {\n    return 'basic-editor';\n  }\n\n  static get name() {\n    return 'Basic';\n  }\n\n  static filter(node) {\n    return node.schema;\n  }\n\n  name() {\n    return null;\n  }\n\n  render() {\n    const l = [\n      type,\n      title,\n      description,\n      required,\n      widget,\n      classNames,\n      help,\n      placeholder,\n      enumKey,\n      enumName,\n      pattern,\n      length,\n      range,\n      itemRange,\n      uniqueItems,\n      format,\n    ].map((f) => f(this.props));\n\n    const addable = l.map((a) => a[0]).filter((a) => a);\n    const editable = l.map((a) => a[1]).filter((a) => a);\n\n    if (addable.length) {\n      editable.push(\n        <List.Item key=\"addButton\">\n          <Dropdown trigger={['click']} overlay={<Menu>{addable}</Menu>}>\n            <Button style={{ width: '100%' }} type=\"primary\" icon={<PlusOutlined />} />\n          </Dropdown>\n        </List.Item>\n      );\n    }\n\n    return <List itemLayout=\"horizontal\" dataSource={editable} renderItem={(a) => a} />;\n  }\n\n  _render() {\n    return (\n      <form className=\"ant-form ant-form-horizontal\">\n        {this.name()}\n        <fieldset>\n          <legend>Schema</legend>\n          {this.title()}\n          {this.description()}\n        </fieldset>\n        <fieldset>\n          <legend>uiSchema</legend>\n          {this.widgets()}\n          {this.classNames()}\n          {this.help()}\n        </fieldset>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs } from 'antd';\nimport JsonEditor from './JsonEditor';\nimport BasicEditor from './BasicEditor';\n\nconst { getNode } = require('../core');\nconst { TabPane } = Tabs;\n\nconst editorList = [BasicEditor, JsonEditor];\n\nclass Editor extends React.Component {\n  updateUiOptions = (uiOptionsUpdate) => {\n    const { uiSchema = {}, key } = this.props.node;\n    const uiOptions = uiSchema['ui:options'] || {};\n    const newUiOptions = { ...uiOptions, ...uiOptionsUpdate };\n    for (const i in newUiOptions) {\n      if (newUiOptions[i] !== undefined) {\n        this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': { ...uiOptions, ...newUiOptions } } });\n        return;\n      }\n    }\n    this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': undefined } });\n  };\n\n  render() {\n    const { node, updateNode } = this.props;\n    if (!(node && node.schema)) return null;\n    const filteredEditors = editorList.filter((a) => a.filter(node));\n    return (\n      <>\n        <Tabs defaultActiveKey={filteredEditors[0].key} type=\"card\">\n          {filteredEditors.map((Editor) => (\n            <TabPane tab={Editor.name} key={Editor.key}>\n              <div style={{ margin: '0px 16px' }}>\n                <Editor\n                  key={node.key}\n                  node={node}\n                  updateNode={(nodeUpdate) => updateNode(node.key, nodeUpdate)}\n                  updateSchema={(schemaUpdate) => updateNode(node.key, { schema: { ...node.schema, ...schemaUpdate } })}\n                  updateUiSchema={(uiSchemaUpdate) =>\n                    updateNode(node.key, { uiSchema: { ...node.uiSchema, ...uiSchemaUpdate } })\n                  }\n                  updateUiOptions={this.updateUiOptions}\n                />\n              </div>\n            </TabPane>\n          ))}\n        </Tabs>\n        <p>Click on the selected form in the left sidebar to push this drawer in.</p>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    node: activeNodeKey && getNode(present, activeNodeKey),\n  }),\n  (dispatch) => ({\n    updateNode: (target, nodeUpdate) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target,\n          nodeUpdate,\n        },\n      }),\n  })\n)(Editor);\n","import React from 'react';\nimport {instance as api} from \"../../axios\";\nimport { connect } from 'react-redux';\nimport { Button, Tooltip, Modal, notification, List } from 'antd';\nimport { FolderOpenOutlined, SaveOutlined, UndoOutlined, RedoOutlined } from '@ant-design/icons';\nimport { ActionTypes } from 'redux-undo';\nimport './index.css';\n\nconst buttonStyle = { marginLeft: 8 };\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      templates: [],\n      categories: [],\n      templateId: null,\n      categoryId: null\n    };\n  }\n\n  async componentDidMount() {\n    const { data: templates } = await api.get(\n      \"/templates\"\n    );\n    const templateProperties = {\n      categoryId: this.props.category,\n      templateId: this.props.template\n    }\n    this.setState({ templates, ...templateProperties });\n    if (templateProperties.templateId !== null)\n      this.renderThisTemplate(templateProperties.templateId)\n    else {\n      let schema = {\n        type: \"object\",\n        properties: {\n          name: {\n            type: \"string\",\n            title: \"Name\"\n          },\n          image: {\n            type: \"string\",\n            title: \"Image\"\n          },\n          description: {\n            type: \"string\",\n            title: \"Description\"\n          },\n          price: {\n            type: \"string\",\n            title: \"Price\"\n          }\n        }\n      },\n      uiSchema = {}\n      const { data: category } = await api.get('/categories/'+this.state.categoryId)\n      console.log(category)\n      // Will receive category_name to add in name of template\n      let name=`${category.name}-template`;\n      this.props.setTree({name, schema, uiSchema});\n    }\n  }\n\n  newTemplate = () => {\n    this.setState({ templateId: null })\n  }\n\n  save = async () => {\n    const {name , schema, uiSchema } = this.props.tree.present[0];\n    const body = {\n        name,\n        category_id: this.state.categoryId,\n        formSchema: JSON.stringify(schema),\n        uiSchema: (uiSchema !== undefined) ? JSON.stringify(uiSchema) : \"\",\n      };\n    try {\n      let resp;\n      console.log(body)\n      if(this.state.templateId === null) {\n        resp = await api.post(\n          \"/templates\",\n          body\n        );\n      } else {\n        resp = await api.patch(\n          \"/templates\",\n          {...body, id: this.state.templateId}\n        );\n      }\n      const response = resp.status;\n      if (response === 201) {\n        notification.open({\n          message: 'Template Created',\n          description:\n          'Your new template was added to the database.'\n        });\n      } else if (response === 200) {\n        notification.open({\n          message: 'Template Update',\n          description:\n            'Your new template was updated in the database.'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      notification.open({\n        message: 'Sorry, Template could not be created.',\n        description: 'There was some error in the backend'\n      })\n    }\n  };\n\n  showTemplates = async () => {\n    let { data: categories } = await api.get(\n      \"/categories\"\n    );\n    categories = categories.filter(category => category !== null && category.template_id !== null)\n    this.setState({\n      visible: true,\n      categories\n    });\n  };\n\n  handleOk = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  renderThisTemplate = async (_id) => {\n    let [thisTemplate] = this.state.templates.filter(template => template._id === _id)\n    let schema = JSON.parse(thisTemplate.formSchema), uiSchema = {}, name = thisTemplate.name\n    if (thisTemplate.uiSchema !== \"\") {\n      uiSchema = JSON.parse(thisTemplate.uiSchema)\n    }\n    this.props.setTree({ name, schema, uiSchema });\n    this.setState({ visible: false, existingTemplate: true, templateId: thisTemplate._id })\n  }\n\n  render() {\n    const { tree, undo, redo } = this.props;\n    const { past, future } = tree;\n    return (\n      <span>\n        {/* <Tooltip title=\"New\" onClick={this.newTemplate}>\n          <Button\n            style={buttonStyle}\n            onClick={newForm}\n            icon={<FileAddOutlined />}\n          />\n        </Tooltip> */}\n        <Tooltip title=\"Open\">  \n          <Button\n            style={buttonStyle}\n            onClick={() => this.showTemplates()}\n            icon={<FolderOpenOutlined />}\n          >\n            Open\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Save\">\n          <Button\n            style={buttonStyle}\n            onClick={() => {\n              Modal.confirm({\n                title: 'Confirm',\n                content: `Are you sure you want to ${this.state.templateId === null ? 'save' : 'update'} this Template?`,\n                okText: 'OK',\n                cancelText: 'Cancel',\n                onOk: () => this.save()\n              });\n            }}\n            icon={<SaveOutlined />}\n          >\n            {this.state.templateId === null ? 'Save' : 'Update'}\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Undo\">\n          <Button\n            style={buttonStyle}\n            onClick={undo}\n            disabled={!past.length}\n            icon={<UndoOutlined />}\n          >\n            Undo\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Redo\">\n          <Button\n            style={buttonStyle}\n            onClick={redo}\n            disabled={!future.length}\n            icon={<RedoOutlined />}\n          >\n            Redo\n          </Button>\n        </Tooltip>\n        <Modal\n          title=\"View Existing Templates by Category\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleOk}\n          footer={[\n            <Button key=\"back\" onClick={this.handleOk}>\n              Okay\n            </Button>,\n          ]}\n        >\n          <List\n            bordered\n            dataSource={this.state.categories}\n            renderItem={item => (\n              <List.Item \n                className=\"template-list\" \n                onClick={() => this.renderThisTemplate(item.template_id)}\n              >\n                {item.name}\n              </List.Item>\n            )}\n          />\n        </Modal>\n      </span>\n    );\n  }\n}\n\nexport default connect(\n    ({ tree, settings }) => ({ tree, settings }),\n    (dispatch) => ({\n        newForm: () =>\n            dispatch({\n                type: 'TREE_CLEAR',\n            }),\n        setTree: (payload) =>\n            dispatch({\n                type: 'TREE_SET_TREE',\n                payload,\n            }),\n        undo: () => dispatch({ type: ActionTypes.UNDO }),\n        redo: () => dispatch({ type: ActionTypes.REDO }),\n        updateSettings: (subViews) =>\n        // This function was needed before when a select search bar to toggle subviews of \n        // schema, ui-schema and formData was used in this component. \n            dispatch({\n                type: 'SETTINGS_UPDATE',\n                payload: { subViews },\n            }),\n    })\n)(Toolbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Slider, Switch, Button, List, Modal } from 'antd';\nconst { confirm } = Modal;\n\nconst tipFormatter = ((flag = false) => (number) => {\n    flag = !flag;\n    return flag ? number : window.innerWidth - number;\n})();\n\nclass Settings extends React.Component {\n    siderWidth() {\n        const { leftSiderWidth, rightSiderWidth } = this.props.settings;\n        return {\n            key: 'sider-width',\n            title: 'Sider Width',\n            description: (\n                <Slider\n                    included\n                    min={0}\n                    max={window.innerWidth}\n                    tipFormatter={tipFormatter}\n                    range\n                    value={[leftSiderWidth, window.innerWidth - rightSiderWidth]}\n                    onChange={([left, right]) => {\n                        this.props.updateSettings({\n                            leftSiderWidth: left > 200 ? left : 200,\n                            rightSiderWidth: window.innerWidth - right,\n                        });\n                    }}\n                />\n            ),\n        };\n    }\n\n    formWidth() {\n        return {\n            key: 'form-item',\n            title: 'Form Width',\n            description: (\n                <Slider\n                    min={0}\n                    max={window.innerWidth}\n                    value={this.props.settings.formWidth}\n                    onChange={(value) => {\n                        this.props.updateSettings({\n                            formWidth: value,\n                        });\n                    }}\n                />\n            ),\n        };\n    }\n\n    inlineMode() {\n        return {\n            key: 'inline-mode',\n            title: 'Inline Mode',\n            actions: [\n                <Switch\n                    onChange={(v) => this.props.updateSettings({ isInlineMode: v })}\n                    checked={this.props.settings.isInlineMode}\n                />,\n            ],\n        };\n    }\n\n    liveValidate() {\n        return {\n            key: 'live-validate',\n            title: 'Live Validate',\n            actions: [\n                <Switch\n                    onChange={(v) => this.props.updateSettings({ isLiveValidate: v })}\n                    checked={this.props.settings.isLiveValidate}\n                />,\n            ],\n        };\n    }\n\n    menu() {\n        const { setTree, rootNode, setMenu, menu } = this.props;\n        return {\n            key: 'menu',\n            title: 'Menu',\n            description: [\n                <Button key=\"edit\" onClick={() => setTree(menu)}>\n                    Customize\n        </Button>,\n                <Button key=\"set\" onClick={() => setMenu(rootNode)}>\n                    Apply Change\n        </Button>,\n            ],\n        };\n    }\n\n    reset() {\n        return {\n            key: 'reset',\n            description: (\n                <Button\n                    type=\"danger\"\n                    sytle={{ width: '100%' }}\n                    key=\"edit\"\n                    onClick={() => {\n                        confirm({\n                            title: 'Reset Form Buiilder?',\n                            content: 'Removing persistent data from local storage.\\n All settings and unsaved form will be lost.',\n                            okText: 'Continue',\n                            okType: 'danger',\n                            closable: true,\n                            maskClosable: true,\n                            onOk() {\n                                window.localStorage.removeItem('persist:react-jsonschema-formbuilder');\n                                window.location.reload();\n                            },\n                        });\n                    }}\n                >\n                    Reset Form Builder\n                </Button>\n            ),\n        };\n    }\n\n    listItems() {\n        return [this.siderWidth(), this.formWidth(), this.inlineMode(), this.liveValidate(), this.menu(), this.reset()];\n    }\n\n    renderItem(a) {\n        const {\n            Item,\n            Item: { Meta },\n        } = List;\n        return (\n            <Item key={a.key} actions={a.actions}>\n                <Meta title={a.title} description={a.description} />\n            </Item>\n        );\n    }\n\n    render() {\n        return <List itemLayout=\"horizontal\" dataSource={this.listItems()} renderItem={this.renderItem} />;\n    }\n}\n\nexport default connect(\n    ({\n        settings,\n        tree: {\n            present: [rootNode],\n        },\n        menu,\n    }) => ({ settings, rootNode, menu }),\n    (dispatch) => ({\n        updateSettings: (payload) =>\n            dispatch({\n                type: 'SETTINGS_UPDATE',\n                payload,\n            }),\n        setTree: ({ schema, uiSchema }) =>\n            dispatch({\n                type: 'TREE_SET_TREE',\n                payload: {\n                    name: 'menu',\n                    schema,\n                    uiSchema,\n                },\n            }),\n        setMenu: ({ schema, uiSchema }) =>\n            dispatch({\n                type: 'MENU_SET',\n                payload: {\n                    schema,\n                    uiSchema,\n                },\n            }),\n    })\n)(Settings);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './css';\nimport { Layout, Tabs, Card } from 'antd';\nimport Tree from './Tree';\nimport { FormView, SchemaView, UiSchemaView } from \"./views\";\nimport NodeEditor from './Editor';\nimport Toolbar from './Toolbar';\nimport Settings from './Settings';\nconst { Header, Sider, Content } = Layout;\nconst { TabPane } = Tabs;\n\nclass NewTemplate extends Component {\n    state = {\n        collapsed: false,\n        categoryId: null,\n        templateId: null\n    };\n    componentWillMount() {\n      this.props.setFormData({ formData: {} })\n      this.props.defaultMenu();\n    }\n    componentDidMount () {\n      // To remove the inline icons (Delete, etc) which are present in Template page\n      this.props.updateSettings({ isInlineMode: true })\n      const query = new URLSearchParams(this.props.location.search)\n      let categoryId = query.get('category'), templateId = query.get('template')\n      this.setState({categoryId, templateId})\n    }\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    render() {\n        const { settings } = this.props;\n        return (\n            <Layout>\n                <Sider\n                    trigger={null}\n                    collapsible\n                    collapsed={this.state.collapsed}\n                    width={settings.leftSiderWidth}\n                    style={{\n                        background: '#fff',\n                        padding: 0,\n                        overflow: 'auto',\n                        boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 0,\n                    }}\n                >\n                    <Tabs defaultActiveKey=\"0\" size=\"small\" type=\"card\">\n                        <TabPane tab=\"Editor\" style={{ padding: '8px' }} key=\"0\">\n                            <Tree />\n                        </TabPane>\n                        <TabPane tab=\"Settings\" style={{ padding: '8px' }} key=\"1\">\n                            <Settings />\n                        </TabPane>\n                    </Tabs>\n                </Sider>\n                <Layout style={{ marginLeft: settings.leftSiderWidth }}>\n                    <Header style={{ background: '#fff', padding: 0 }}>\n                        <Toolbar category={this.state.categoryId} template={this.state.templateId}/>\n                    </Header>\n                    <Content style={{ minHeight: 280, padding: '12px 8px' }}>\n                        <Card\n                            bordered={false}\n                            style={{ width: settings.formWidth, margin: '12px 8px', display: 'inline-block', verticalAlign: 'top' }}\n                        >\n                            <FormView />\n                        </Card>\n                        {/* {(settings.subViews || []).map((a) => {\n                            const style = { margin: '12px 8px', width: 400, display: 'inline-block', verticalAlign: 'top' };\n                            switch (a) {\n                              case \"schema\":\n                                return (\n                                  <Card\n                                    key=\"schema\"\n                                    title=\"Schema\"\n                                    style={style}\n                                  >\n                                    <SchemaView />\n                                  </Card>\n                                );\n                              case \"uiSchema\":\n                                return (\n                                  <Card\n                                    key=\"uischema\"\n                                    title=\"UiSchema\"\n                                    style={style}\n                                  >\n                                    <UiSchemaView />\n                                  </Card>\n                                );\n                              default:\n                                return <div key=\"null\" />;\n                            }\n                        })} */}\n                    </Content>\n                </Layout>\n              <Sider\n                width={this.props.activeNodeKey ? settings.rightSiderWidth : 0}\n                style={{\n                  overflow: 'auto',\n                  background: '#fff',\n                  boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n                  position: 'fixed',\n                  height: '100vh',\n                  right: 0,\n                }}\n              >\n                <NodeEditor />\n              </Sider>\n            </Layout>\n        );\n    }\n}\n\nexport default connect(({ activeNodeKey, settings }) => ({\n  activeNodeKey,\n  settings,\n}), (dispatch) => ({\n  setFormData: ({ formData }) =>\n    dispatch({\n      type: 'FORM_DATA_SET',\n      payload: formData,\n    }),\n    updateSettings: (payload) =>\n      dispatch({\n        type: 'SETTINGS_UPDATE',\n        payload,\n      }),\n    defaultMenu: () =>\n      dispatch({\n        type: 'MENU_DEFAULT',\n        payload: {},\n      }),\n}))(NewTemplate);\n\n// export default NewTemplate;","import React, { useEffect, useState } from 'react';\nimport { Table, Button, notification, Modal, Skeleton } from 'antd';\n\nimport { instance as api } from '../../../axios';\nimport './list.css';\n\nconst List = () => {\n\n    const [data, setData] = useState()\n    const [tableColumns, setColumns] = useState()\n    const [fetching, setFetch] = useState(true)\n\n    useEffect(() => {\n        (async () => {\n            try {\n                let { data: templates } = await api.get('/templates')\n                templates = templates.filter(el => el.category_id !== null);\n                templates = templates.map((el) => {\n                    return {\n                        name: el.name,\n                        category: el.category_id.name,\n                        key: el._id,\n                        category_id: el.category_id._id\n                    };\n                });\n                setData(templates)\n                const columns = [\n                    {\n                        title: 'Template Name',\n                        dataIndex: 'name',\n                        key: 'name'\n                    },\n                    {\n                        title: 'Category',\n                        dataIndex: 'category',\n                        key: 'category'\n                    },\n                    {\n                        title: 'View/Edit',\n                        key: 'view/edit',\n                        fixed: 'right',\n                        render: (item) => {\n                            return (<Button\n                                href={`/template?category=${item.category_id}&template=${item.key}`}\n                            >\n                                View/Edit\n                            </Button>)\n                        }\n                    }\n                ]\n                setColumns(columns);\n                setFetch(false);\n            } catch (e) {\n                console.log(e);\n                notification['error']({\n                    message: 'An Error Occurred',\n                    description: 'There was an error while displaying products.'\n                })\n            }\n        })();\n    }, []);\n    return (\n        <div className=\"container main-container\">\n            <h3>Listing all Templates</h3>\n            {fetching === true ? <Skeleton active /> : <Table dataSource={data} columns={tableColumns} />}\n        </div>\n    )\n}\n\nexport default List;","import React, { Component } from 'react';\nimport { Table, Button, notification, Spin, Space } from 'antd';\nimport { connect } from 'react-redux';\nimport { instance as api } from '../../../axios';\nimport './ProductList.css';\n\nclass ProductList extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            templateId: null,\n            categoryId: null,\n            dataFetching: true,\n            products: {\n                data: [],\n                names: []\n            },\n            columns: []\n        }\n    }\n\n    async componentDidMount () {\n    try {\n        const query = new URLSearchParams(this.props.location.search)\n        let categoryId = query.get('category');\n        let products = []\n        if (categoryId !== null){\n            this.setState({categoryId})\n            let { data } = await api.get(\"/product/category/\"+categoryId)\n            products = data\n            if(products.length !== 0)\n                this.setState({templateId: products[0].template})\n        } else {\n            let { data } = await api.get(\"/product/\")\n            console.log(data)\n            products = data\n        }\n        // For earlier products that didn't have any data\n        products = products.filter(prod => prod.data !== \"{}\")\n        const data = products.map(product => {\n            return JSON.parse(product.data);\n        })\n        const names = products.map(product => {\n            if(product.name === undefined) {\n                // For earlier products that didn't have manuf, model defined.\n                product.name = '--Not defined--'\n            }\n            let updates = product.meta.update;\n            return {\n                name: product.name,\n                image:product.image,\n                description:product.description,\n                price:product.price, \n                data: JSON.parse(product.data), \n                created_at: product.meta.created_at,\n                updated_at: updates.length > 0 ? updates.slice(updates.length-1)[0].updated_at : '-',\n                template: product.template,\n                category: product.category,\n                id: product._id,\n                key: product._id\n            };\n        })\n        const columns = [\n            {\n                title: 'Name', \n                dataIndex: 'name', \n                key: 'name',\n                filters: names.map(prod => ({text: prod.name, value: prod.name}))\n            }, {\n                title: 'Created At',\n                dataIndex: 'created_at',\n                key: 'created_at',\n                defaultSortOrder: 'descend',\n                sorter: (a, b) => new Date(a.created_at) - new Date(b.created_at),\n            }, {\n                title: 'Update At',\n                dataIndex: 'updated_at',\n                key: 'updated_at',\n                sorter: (a, b) => new Date(a.updated_at) - new Date(b.updated_at),\n            }\n        ]\n        columns.push({\n            title: 'Add a product using existing product',\n            key: 'name',\n            width: 200,\n            render: (item) => {\n                return (<Button onClick={async (e) => {\n                    let a = await this.props.setFormData({ formData: item.data });\n                    // Due to asynchronous behaviour, the above line does not work without the setTimeout \n                    if (typeof a === 'object') {\n                        setTimeout(() => {\n                            let path = `addproduct?category=${item.category._id}&template=${item.template._id}`;\n                            window.location.href = path;\n                        }, 1000)\n                    }\n                }}>Make a Copy</Button>)\n            },\n        }, {\n            title: 'Make changes to existing product',\n            key: 'name',\n            width: 200,\n            render: (item) => {\n                return (<Button\n                    onClick={async (e) => {\n                    let a = await this.props.setFormData({ formData: item.data })\n                    // Due to asynchronous behaviour, the above line does not work without the setTimeout\n                    if (typeof a === 'object') {\n                        setTimeout(() => {\n                            let path = `addproduct?category=${item.category._id}&template=${item.template._id}&product=${item.id}`\n                            window.location.href = path;\n                        }, 1000)\n                    }\n                }}>Edit</Button>)\n            },\n        }, {\n            title: 'Delete Product',\n            key: 'name',\n            fixed: 'right',\n            width: 100,\n            render: (item) => {\n                return (<Button onClick={async (e) => {\n                    const resp = await api.delete(`/product/${item.category._id}/${item.id}`)\n                    if(resp.status === 204) {\n                        notification['success']({\n                            message: 'Product Deleted',\n                            description: 'This product was deleted from the database.'\n                        })\n                    } else {\n                        notification['error']({\n                            message: 'An Error Occurred',\n                            description: 'There was an error while deleting this product.'\n                        })\n                    }\n                }}>Remove Product</Button>\n                )\n            }\n        })\n        this.setState({products: {data, names}, columns, dataFetching: false})\n    } catch (e) {\n        console.log(e);\n        notification['error']({\n            message: 'An Error Occurred',\n            description: 'There was an error while displaying products.'\n        })\n    }\n    }\n\n    render() {\n        return (\n        <div className=\"container main-container\">\n            <h3>{this.state.templateId ? 'Listing Products based on Template' : 'Listing all Products'}</h3>\n        <div style={{ display: 'flex' }}>\n                    {!this.state.dataFetching ? <Table dataSource={this.state.products.names} columns={this.state.columns} /> : <Space size=\"middle\"><Spin /></Space>}\n        </div>\n        {this.state.categoryId && this.state.templateId ? (\n            <Button\n                style={{marginLeft: '45%'}}\n                href={`/addproduct?template=${this.state.templateId}&category=${this.state.categoryId}`}\n            >\n            Add Product\n            </Button>\n        ): null}\n        </div>\n        )\n    }\n}\n\nexport default connect(({\n    formData\n}) => ({\n    formData\n}), (dispatch) => ({\n    setFormData: ({ formData }) =>\n        dispatch({\n            type: 'FORM_DATA_SET',\n            payload: formData,\n        }),\n}))(ProductList);","import { schema2tree, schema2node, removeNode, addNode, moveNode, updateNode, getNodeByRjsfId } from './core';\nimport defaultSettings from './default/settings';\nimport defaultMenuSchema from './default/menu';\nimport defaultOptions from './default/options';\nimport undoable from 'redux-undo';\nimport { includeAction } from 'redux-undo';\nimport { combineReducers } from 'redux';\n\nconst defaultMenu = schema2node(['menu'], defaultMenuSchema.schema, defaultMenuSchema.uiSchema);\nconst DEFAULT_TREE_NAME = 'root';\n\nconst emptyTree = schema2tree(DEFAULT_TREE_NAME, { type: 'object', properties: {\n  accuracy: {\n    type: 'string',\n    title: 'Accuracy'\n  },\n  limit: {\n    type: 'string',\n    title: 'Limit'\n  }\n} });\n\nfunction tree(state = emptyTree, action) {\n  switch (action.type) {\n    case 'TREE_CLEAR':\n      return emptyTree;\n    case 'TREE_SET_TREE': {\n      const { name, schema, uiSchema } = action.payload;\n      return schema2tree(\n        name || (state[0] && state[0].name) || DEFAULT_TREE_NAME,\n        schema || state[0].schema,\n        uiSchema || state[0].uiSchema\n      );\n    }\n    case 'TREE_ADD_NODE': {\n      const { targetNodeKey, position, node2add } = action.payload;\n      return addNode(state, targetNodeKey, position, node2add);\n    }\n    case 'TREE_REMOVE_NODE':\n      const newState = removeNode(state, action.payload);\n      return newState.length ? newState : emptyTree;\n    case 'TREE_MOVE_NODE': {\n      const { source, target, position } = action.payload;\n      return moveNode(state, source, target, position);\n    }\n    case 'TREE_UPDATE_NODE': {\n      const { target, nodeUpdate } = action.payload;\n      const newState = updateNode(state, target, nodeUpdate);\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction activeNodeKey(state = null, action) {\n  switch (action.type) {\n    case 'ACTIVE_NODE_KEY_SET':\n      return action.payload || null;\n    case 'TREE_UPDATE_NODE':\n      const { target, nodeUpdate } = action.payload;\n      if (state === target && nodeUpdate.name) {\n        const path = state.split('.');\n        if (path[path.length - 1] !== nodeUpdate.name) {\n          return path.slice(0, -1).join('.') + '.' + nodeUpdate.name;\n        }\n      }\n      return state;\n    case 'TREE_SET_TREE':\n    case 'TREE_CLEAR':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction formData(state = {}, action) {\n  switch (action.type) {\n    case 'FORM_DATA_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction settings(state = defaultSettings, action) {\n  switch (action.type) {\n    case 'SETTINGS_UPDATE':\n      return Object.assign({}, state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction menu(state = defaultMenu, action) {\n  switch (action.type) {\n    case 'MENU_SET': {\n      const { schema, uiSchema } = action.payload;\n      return schema2node(['menu'], schema, uiSchema);\n    }\n    case 'MENU_DEFAULT': {\n      return defaultMenu;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction menuOpenKeys(state = [], action) {\n  switch (action.type) {\n    case 'MENU_OPEN_KEYS_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction options(state = defaultOptions, action) {\n  switch (action.type) {\n    case 'SET_OPTIONS':\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nfunction removeUnnecessaryHistory(reducer) {\n  return (state, action) => {\n    let newState = reducer(state, action);\n    delete newState.history;\n    return newState;\n  };\n}\n\nvar reducer = combineReducers({\n  tree: removeUnnecessaryHistory(\n    undoable(tree, {\n      filter: includeAction([\n        'TREE_UPDATE_NODE',\n        'TREE_SET_TREE',\n        'TREE_CLEAR',\n        'TREE_ADD_NODE',\n        'TREE_REMOVE_NODE',\n        'TREE_MOVE_NODE',\n      ]),\n    })\n  ),\n  activeNodeKey,\n  settings,\n  menu,\n  formData,\n  menuOpenKeys,\n  options,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case 'TREE_REMOVE_NODE_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'TREE_REMOVE_NODE',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'TREE_UPDATE_NODE_BY_RJSF_ID': {\n      const { rjsfId } = action.payload;\n      const target = getNodeByRjsfId(state.tree.present, rjsfId);\n      if (!target) return state;\n      action = {\n        type: 'TREE_UPDATE_NODE',\n        payload: { ...action.payload, target: target.key },\n      };\n      break;\n    }\n    default:\n      break;\n  }\n  return reducer(state, action);\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nvar persistConfig = {\n  key: 'react-jsonschema-formbuilder',\n  storage,\n  stateReconciler: hardSet,\n  throttle: 15,\n};\n\nvar { schema2tree } = require('./core');\n\nvar form = {\n  schema: {\n    title: 'Template Form',\n    description: 'A simple form example.',\n    type: 'object',\n    required: ['name', 'image'],\n    properties: {\n      name: {\n        type: 'string',\n        title: 'Product Name',\n      },\n      image: {\n        type: 'string',\n        title: 'Image Link',\n      },\n      price: {\n        type: 'integer',\n        title: 'Price',\n      },\n      description: {\n        type: 'string',\n        title: 'Description',\n      },\n     \n    },\n  },\n  uiSchema: {\n    name: {\n      'ui:emptyValue': '',\n    },\n    image: {\n      'ui:emptyvalue':'',\n    },\n    price: {\n      'ui:emptyvalue':'',\n    },\n    description: {\n      'ui:emptyvalue':'',\n    },\n    date: {\n      'ui:widget': 'alt-datetime',\n    },\n   \n  },\n};\n\nvar initTree = schema2tree('root', form.schema, form.uiSchema);\n\nvar persistedReducer = persistReducer(persistConfig, reducer);\n\nvar store = createStore(persistedReducer, {\n  tree: {\n    past: [],\n    present: initTree,\n    future: [],\n  },\n});\n\nvar persistor = persistStore(store);\n\nexport { store, persistor };\nexport default { store, persistor };\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport \"./index.css\";\nimport Category from './items/Categories/Categories';\nimport Products from './items/Products';\nimport NewTemplate from './items/ProductTemplates/Templates.jsx';\nimport List from './items/ProductTemplates/List';\nimport ProductList from './items/Products/List/ProductList';\n\nimport { Provider, connect } from \"react-redux\";\nimport { store, persistor } from \"./items/ProductTemplates/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Menu, Layout } from \"antd\";\nimport {\n  ContainerOutlined,\n  UnorderedListOutlined,\n  DatabaseFilled,\n} from \"@ant-design/icons\";\n\nconst { Content } = Layout;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"category\",\n    };\n  }\n\n  componentWillMount () {\n    const pathname = window.location.pathname,\n      secondslash = pathname.indexOf('/', 1) > 0 ? pathname.indexOf('/', 1) + 1 : -1; \n    let location;\n    if (secondslash === -1) {\n      location = pathname.slice(1);\n    } else {\n      location = pathname.slice(1, secondslash);\n    }\n    location = location === '' ? 'category' : location;\n    location = location === 'addproduct' ? 'product' : location;\n    location = location === 'viewtemplates' ? 'template' : location;\n    this.setState({ current: location })\n  }\n\n  handleClick = (e) => {\n    console.log(\"click \", e);\n    this.setState({ current: e.key });\n  };\n\n  render() {\n    const { current } = this.state;\n    return (\n      <Router>\n        <div className=\"App\">\n          <Menu\n            theme=\"dark\"\n            onClick={this.handleClick}\n            selectedKeys={[current]}\n            mode=\"horizontal\"\n          >\n            <Menu.Item key=\"category\" icon={<UnorderedListOutlined />}>\n              <Link to=\"/category\">Categories</Link>\n            </Menu.Item>\n            <Menu.Item key=\"template\" icon={<ContainerOutlined />}>\n              <Link to=\"/viewtemplates\">Product Templates</Link>\n            </Menu.Item>\n            <Menu.Item key=\"product\" icon={<DatabaseFilled />}>\n              <Link to=\"/product\">Products</Link>\n            </Menu.Item>\n          </Menu>\n          <Layout>\n            <Content>\n              <Route path={[\"/category\", \"/\"]} exact>\n                <Category />\n              </Route>\n              <Route path=\"/template\" component={NewTemplate} />\n              <Route path=\"/viewtemplates\" component={List} />\n              <Route path=\"/product\" component={ProductList} />\n              <Route path=\"/addproduct/\" component={Products} />\n            </Content>\n          </Layout>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst AppContainer = connect(({ activeNodeKey, settings }) => ({\n  activeNodeKey,\n  settings,\n}))(App);\nexport default () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <AppContainer />\n    </PersistGate>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}