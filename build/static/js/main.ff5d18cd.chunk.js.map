{"version":3,"sources":["items/ProductTemplates/default/menu.js","items/ProductTemplates/default/settings.js","items/ProductTemplates/default/options.js","axios.js","items/Categories/New/index.js","items/Categories/Delete/index.js","items/Categories/Delete/DeleteTemplate.js","items/Categories/Search/index.js","items/Categories/New/RootCategory.js","items/Categories/Categories.js","items/ProductTemplates/rjsf-patch/ArrayField.jsx","items/ProductTemplates/rjsf-patch/BooleanField.jsx","items/ProductTemplates/rjsf-patch/StringField.jsx","items/ProductTemplates/rjsf-patch/SchemaField.jsx","items/ProductTemplates/rjsf-patch/utils.js","items/ProductTemplates/rjsf-patch/Form.jsx","items/ProductTemplates/Template/Template.jsx","items/ProductTemplates/InlineEditor.jsx","items/ProductTemplates/Template/connectors.jsx","items/ProductTemplates/Template/index.jsx","items/ProductTemplates/views/FormView.jsx","items/ProductTemplates/JsonEditor.jsx","items/ProductTemplates/views/SchemaView.jsx","items/ProductTemplates/views/UiSchemaView.jsx","items/ProductTemplates/views/FormDataView.jsx","items/Products/index.js","items/ProductTemplates/Tree/Menu.jsx","items/ProductTemplates/Tree/TreeNodeTitle.jsx","items/ProductTemplates/Tree/Tree.jsx","items/ProductTemplates/Tree/index.js","items/ProductTemplates/Editor/JsonEditor.jsx","items/ProductTemplates/Editor/BasicEditor.jsx","items/ProductTemplates/Editor/index.jsx","items/ProductTemplates/Toolbar.jsx","items/ProductTemplates/Settings.jsx","items/ProductTemplates/Templates.jsx","items/ProductTemplates/List/index.js","items/Products/List/ProductList.js","items/ProductTemplates/reducers.js","items/ProductTemplates/store.js","App.js","serviceWorker.js","index.js","items/ProductTemplates/core.js"],"names":["basic","schema","type","title","properties","object","text","checkbox","checkboxes","items","enum","uniqueItems","list","dropdown","enumNames","number","textarea","datetime","uiSchema","module","exports","leftSiderWidth","rightSiderWidth","formWidth","isInlineMode","subViews","categoryId","templateId","productId","categories","instance","axios","create","baseURL","NewCategoryModal","visibility","setVisibility","saveNewCategory","useState","name","setName","image","setImage","visible","onOk","e","newName","newImage","onCancel","destroyOnClose","preserve","size","placeholder","onChange","target","value","defaultValue","DeleteCategoryModal","deleteCategory","DeleteTemplateModal","deleteTemplate","Search","selectPrevMatch","selectNextMatch","searchParams","inputChange","searchFocusIndex","searchString","searchFoundCount","style","display","width","onSubmit","event","preventDefault","id","disabled","onClick","NewRootCategory","Categories","props","a","node","state","api","delete","template_id","status","notification","message","description","forEach","cat","_id","setState","deleteTemplateModalVisibility","bool","path","ModalVisiblity","newCategory","saveToBackend","bind","newModalVisibility","deleteFromBackend","deleteModalVisibility","getKey","getParentKey","parent_id","get","data","i","length","splice","tree","getTreeFromFlatData","flatData","rootKey","this","setOptions","options","newNode","post","then","resp","catch","getNodeKey","treeIndex","hello","concat","addNodeUnderParent","treeData","parentKey","expandParent","addAsFirstChild","removeNodeAtPath","className","canDrag","generateNodeProps","buttons","children","key","href","products","searchMethod","searchQuery","toLowerCase","indexOf","onlyExpandSearchedNodes","searchFocusOffset","searchFinishCallback","matches","active","New","Delete","DeleteTemplate","Component","connect","dispatch","payload","ArrayFieldPatched","idSchema","formData","readonly","autofocus","onBlur","onFocus","registry","getDefaultRegistry","rawErrors","widgets","definitions","formContext","itemsSchema","retrieveSchema","enumOptions","optionsList","getUiOptions","widget","Widget","getWidget","$id","multiple","onSelectChange","ArrayField","BooleanField","required","fields","Array","isArray","oneOf","map","option","const","label","undefined","DescriptionField","defaultProps","StringField","format","isSelect","defaultWidget","hasWidget","PatchedSchemaField","error","info","toString","duration","SchemaField","Error","msg","showIcon","_getWidget","TitleField","require","default","FormPatch","ArrayFieldTemplate","ObjectFieldTemplate","FieldTemplate","Form","Label","htmlFor","InlineEditor","onCompleteEditing","editing","newValue","trim","onStartEditing","stopPropagation","input","focus","onCancelEditing","nextProps","ref","r","onKeyUp","keyCode","EditOutlined","renderEditing","renderView","getNodeByRjsfId","TextArea","Input","ACTIVE_STYLE","backgroundColor","ExtendedInlineEditor","InlineTextAreaEditor","autoSize","ButtonGroup","select","remove","placement","SelectOutlined","onConfirm","DeleteOutlined","classNames","errors","help","hidden","displayLabel","present","activeNodeKey","settings","n","updateTitle","rjsfId","nodeUpdate","updateDescription","updateHelp","labelElement","descriptionElement","helpElement","includes","_label","_description","_help","prop","content","titleElement","_title","FormView","setFormData","liveValidate","idPrefix","React","isLiveValidate","JsonEditor","obj","JSON","parse","string","onClickPrettify","stringify","objA","objB","hasOwnProperty","shallowEqual","nextState","errorMessage","matched","exec","position","textAreaRef","selectionStart","selectionEnd","renderErrorMessage","setTree","json2schema","split","charAt","toUpperCase","slice","join","name2title","Number","isInteger","s","genForm","Products","submitHandler","body","category_id","patch","query","URLSearchParams","location","search","template","updateSettings","formSchema","Card","variant","raised","SubMenu","Menu","Item","nameGen","occupied","AddItemMenu","onAddNode","node2add","addNode","console","log","menuTree","menu","menuOpenKeys","menuOpenChange","mode","theme","openKeys","onOpenChange","b","targetNodeKey","keys","TreeNodeTitle","removeNode","updateNodeName","searchValue","isLeaf","isRoot","indexBefore","indexAfter","color","trigger","overlay","PlusCircleOutlined","thisKey","okText","cancelText","CloseCircleFilled","PureComponent","TreeNode","Tree","Demo","onDrop","dropKey","eventKey","dragKey","dragNode","dropPos","pos","dropPosition","moveNode","onExpand","expandedKeys","newSearchExpanded","loop","item","parents","push","searchExpanded","setActiveNode","selectedKeys","draggable","onDragEnter","onSelect","selected","blockNode","source","selectedKey","updateNodeTitle","updateMode","NodeJsonEditor","schemaJsonString","uiSchemaJsonString","updateNode","rschema","additionalItems","Option","Select","FormItemTemplate","actions","shape","icon","CloseOutlined","Meta","TimeThrottle","throttle","timer","clearTimeout","setTimeout","onSubmitValue","onRemove","TimeThrottleInput","rest","TimeThrottleTextArea","TimeThrottleRange","min","max","textAlign","borderLeft","pointerEvents","lodash","boolean","radio","password","uri","date","file","updown","range","integer","array","files","toPairs","flatMap","groupBy","t","types","filter","update","updateSchema","availableTypes","ClassNamesEditor","colSizes","onSliderChange","col","found","newClassNames","perfix","v","Set","cols","extractCol","newOptions","startsWith","find","align","xs","renderMenu","CaretDownOutlined","sliderValue","tokenSeparators","updateUiSchema","updateUiOptions","availableWidgets","f","showSearch","pattern","Object","rangeMeta","match","minp","maxp","itemRange","defaultChecked","values","enumKey","enumName","formatOptions","BasicEditor","l","addable","editable","PlusOutlined","itemLayout","dataSource","renderItem","getNode","TabPane","Tabs","editorList","Editor","uiOptionsUpdate","uiOptions","newUiOptions","filteredEditors","defaultActiveKey","tab","margin","schemaUpdate","uiSchemaUpdate","buttonStyle","marginLeft","Toolbar","newTemplate","save","response","open","showTemplates","category","handleOk","renderThisTemplate","templates","thisTemplate","existingTemplate","templateProperties","price","undo","redo","past","future","FolderOpenOutlined","Modal","confirm","SaveOutlined","UndoOutlined","RedoOutlined","footer","bordered","newForm","ActionTypes","UNDO","REDO","tipFormatter","flag","window","innerWidth","Settings","included","left","right","checked","rootNode","setMenu","sytle","okType","closable","maskClosable","localStorage","removeItem","reload","siderWidth","inlineMode","reset","List","listItems","Header","Layout","Sider","Content","NewTemplate","collapsed","toggle","defaultMenu","collapsible","background","padding","overflow","boxShadow","height","minHeight","verticalAlign","setData","tableColumns","setColumns","fetching","setFetch","useEffect","el","dataIndex","fixed","render","columns","ProductList","dataFetching","names","prod","product","updates","meta","created_at","updated_at","filters","defaultSortOrder","sorter","Date","schema2node","defaultMenuSchema","emptyTree","schema2tree","accuracy","limit","reducer","combineReducers","action","newState","history","removeUnnecessaryHistory","undoable","includeAction","defaultSettings","assign","defaultOptions","persistConfig","storage","stateReconciler","hardSet","initTree","persistedReducer","persistReducer","store","createStore","persistor","persistStore","App","handleClick","current","pathname","secondslash","UnorderedListOutlined","to","ContainerOutlined","DatabaseFilled","exact","component","AppContainer","loading","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","isEmptyObject","FORCE_CHANGE_KEY","forceChange","now","process","child","nextPath","getNodeByPath","updateParentKey","getNodeParentKey","substring","updateNodeParentKeyAndName","newKey","updateNodeByNewChildren","oldNode","newChildren","newSchema","newProperties","newItemsNode","newAdditionalItemsNode","newUiSchema","empty","updateArrayIndex","_removeNodeByPath","head","tail","arrayItemsFlag","removed","newTree","newRequired","removeNodeByPath","_addNodeByPath","node2Add","added","cn","newNodeChildren","addNodeByPath","targetKey","_moveNodeByPath","sh","st","th","tt","updated","node2move","tmpTree","moveNodeByPath","sourceNode","targetNode","sourceKey","allowedUpdatedTypes","updateNodeByPath","_updateNodeByPath","nu","typeUpdated","oldSchema","oldUiSchema","index","isNaN"],"mappings":"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","file":"static/js/main.ff5d18cd.chunk.js","sourcesContent":["const basic = {\n  schema: {\n    type: 'object',\n    title: 'Basic',\n    properties: {\n      object: { type: 'object', title: 'Object', properties: {} },\n      text: { type: 'string', title: 'Text' },\n      checkbox: { type: 'boolean', title: 'Checkbox' },\n      checkboxes: {\n        type: 'array',\n        title: 'Check Boxes',\n        items: {\n          type: 'string',\n          enum: ['option-1', 'option-2', 'option-3'],\n        },\n        uniqueItems: true,\n      },\n      list: {\n        type: 'array', \n        title: 'List', \n        items: {\n          type: 'string'\n        }\n      },\n      dropdown: {\n        type: 'string',\n        title: 'Dropdown',\n        enum: ['option-1', 'option-2', 'option-3'],\n        enumNames: ['Option 1', 'Option 2', 'Option 3'],\n      },\n      number: { type: 'number', title: 'Number' },\n      textarea: { type: 'string', title: 'Text Area' },\n      datetime: { type: 'string', title: 'Date Time' },\n    },\n  },\n  uiSchema: {\n    textarea: { 'ui:widget': 'textarea' },\n    datetime: { 'ui:widget': 'datetime' },\n    checkboxes: {\n      'ui:widget': 'checkboxes',\n    },\n  },\n};\n\nmodule.exports = {\n  schema: {\n    type: 'object',\n    properties: {\n      basic: basic.schema,\n    },\n  },\n  uiSchema: {\n    basic: basic.uiSchema,\n  },\n};\n","module.exports = {\n  leftSiderWidth: 300,\n  rightSiderWidth: 360,\n  formWidth: 600,\n  isInlineMode: true,\n  subViews: ['schema', 'uiSchema', 'formData'],\n};\n","const options = {\n    categoryId: null,\n    templateId: null,\n    productId: null,\n    categories: []\n};\n\nmodule.exports = options;","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://infohebackoffice.herokuapp.com';\nexport const instance = axios.create({\n    // baseURL: 'https://infohebackoffice.herokuapp.com' \n    // baseURL : 'http://localhost:4000'\n    baseURL : 'https://infohebackend.herokuapp.com'\n\n});\n\n// export default {instance};","import React, { useState } from 'react';\nimport { Modal, Input, Form } from 'antd';\n\nconst NewCategoryModal = ({ visibility, setVisibility, saveNewCategory }) => {\n\n    let [name, setName] = useState('')\n    let [image, setImage] = useState('')\n\n    const handleOk = e => {\n        let newName = name;\n        let newImage = image;\n        setName('');\n        setImage('');\n        saveNewCategory(newName,newImage);\n    };\n\n    const handleCancel = e => {\n        setVisibility(false)\n    };\n\n    return (\n        <Modal\n            title=\"Add Category Name\"\n            visible={visibility}\n            onOk={handleOk}\n            onCancel={handleCancel}\n            destroyOnClose\n        >\n            <Form preserve={false}>\n                <Input size=\"large\" placeholder=\"Enter category\" onChange={e => setName(e.target.value)} defaultValue=''/>\n                <Input size=\"large\" placeholder=\"Enter category\" onChange={e => setImage(e.target.value)} defaultValue=''/>\n\n            </Form>\n        </Modal>\n    )\n}\n\nexport default NewCategoryModal\n","import React from 'react';\nimport { Modal } from 'antd';\n\nconst DeleteCategoryModal = ({ visibility, setVisibility, deleteCategory }) => {\n\n    const handleOk = e => {\n        deleteCategory(true)\n        setVisibility(false)\n    };\n\n    const handleCancel = e => {\n        setVisibility(false)\n    };\n\n    return (\n        <Modal\n            title=\"Confirm to delete Category\"\n            visible={visibility}\n            onOk={handleOk}\n            onCancel={handleCancel}\n        >\n            <p>Are you sure you want to delete this Category?</p>\n        </Modal>\n    )\n}\n\nexport default DeleteCategoryModal\n","import React from 'react';\nimport { Modal } from 'antd';\n\nconst DeleteTemplateModal = ({ visibility, setVisibility, deleteTemplate }) => {\n\n    const handleOk = e => {\n        deleteTemplate()\n        setVisibility(false)\n    };\n\n    const handleCancel = e => {\n        setVisibility(false)\n    };\n\n    return (\n        <Modal\n            title=\"Confirm to remove Template\"\n            visible={visibility}\n            onOk={handleOk}\n            onCancel={handleCancel}\n        >\n            <p>Are you sure you want to delete this Template?</p>\n        </Modal>\n    )\n}\n\nexport default DeleteTemplateModal;\n","import React from 'react';\nimport { Input } from 'antd';\n\nconst Search = ({ selectPrevMatch, selectNextMatch, searchParams, inputChange}) => {\n    let { searchFocusIndex, searchString, searchFoundCount } = searchParams;\n    return (\n        <form\n            style={{ display: 'flex', width: '60%' }}\n            onSubmit={event => {\n                event.preventDefault();\n            }}\n        >\n            <Input\n                id=\"find-box\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={searchString}\n                onChange={inputChange}\n            />\n            <button\n                type=\"button\"\n                disabled={!searchFoundCount}\n                onClick={selectPrevMatch}\n            >\n                &lt;\n            </button>\n            <button\n                type=\"submit\"\n                disabled={!searchFoundCount}\n                onClick={selectNextMatch}\n            >\n                &gt;\n            </button>\n            <span>\n                &nbsp;\n                {searchFoundCount > 0 ? searchFocusIndex + 1 : 0}\n                &nbsp;/&nbsp;\n                {searchFoundCount || 0}\n            </span>\n        </form>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport { Button } from 'antd';\n\nconst NewRootCategory = ({onClick}) => {\n    return (\n        <Button\n            type=\"primary\"\n            onClick={onClick}\n        >\n            Add New Category\n        </Button>\n    )\n}\n\nexport default NewRootCategory;","import React, { Component } from 'react';\nimport {instance as api} from '../../axios';\nimport './Categories.css';\n// after\nimport { connect } from \"react-redux\";\nimport SortableTree from 'react-sortable-tree';\nimport { getTreeFromFlatData, addNodeUnderParent, removeNodeAtPath } from \"react-sortable-tree\";\nimport \"react-sortable-tree/style.css\";\nimport { notification, Button, Skeleton } from 'antd';\n\nimport NewCategoryModal from './New';\nimport DeleteCategoryModal  from './Delete';\nimport DeleteTemplateModal from './Delete/DeleteTemplate';\nimport Search from './Search';\nimport NewRootCategory from './New/RootCategory'; \nclass Categories extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          searchString: '',\n          searchFocusIndex: 0,\n          searchFoundCount: null,\n          categories: [],\n          newCategory: {\n            ModalVisiblity: false,\n            name: \"\",\n            node: null,\n            path: null\n          },\n          deleteCategory: {\n            ModalVisiblity: false,\n            node: null,\n            path: null\n          },\n          deleteTemplate: {\n            ModalVisiblity: false,\n            node: null,\n            path: null\n          }\n        };\n        this.saveToBackend = this.saveToBackend.bind(this)\n        this.newModalVisibility = this.newModalVisibility.bind(this)\n        this.saveNewCategory = this.saveNewCategory.bind(this)\n        \n        this.deleteFromBackend = this.deleteFromBackend.bind(this)\n        this.deleteModalVisibility = this.deleteModalVisibility.bind(this)\n        this.deleteCategory = this.deleteCategory.bind(this)\n    }\n\n    async componentDidMount () {\n        const {data} = await api.get(\"/categories\")\n        let categories = data;\n        for (var i = 0; i < categories.length; i++) {\n          // To remove certain null values. This bug had been rectified in the backend.\n          // Condition still kept as a double check\n          if (categories[i] === null) {\n            categories.splice(i, 1);\n            i--;\n            continue;\n          }\n          categories[i].title = categories[i].name\n        }\n        \n        function getKey(node) {\n          return node._id;\n        }\n\n        function getParentKey(node) {\n          return node.parent_id\n        }\n\n        const tree = getTreeFromFlatData({flatData: categories, getKey, getParentKey, rootKey: null})\n        categories = tree; //populate this from API.\n        this.setState({ categories });\n        this.props.setOptions({ options: categories })\n    }\n\n    async deleteFromBackend (id) {\n      const resp = await api.delete('/categories/'+id)\n      if (resp.status === 204) {\n        notification['success']({\n          message: 'Category Deleted',\n          description:\n            'The category has been deleted from the database!',\n        });\n      }\n    }\n\n    saveToBackend (newNode) {\n      let newCategory = this.state.newCategory;\n      this.setState({newCategory})\n      return api.post(\"/categories\", {...newNode, name: newNode.title})\n        .then(resp => {\n          if(resp.status === 201) {\n            notification['success']({\n              message: 'New Category Saved',\n              description:\n                'The new category has been added to the database!',\n            });\n            return true;\n          } else {\n            return false;\n          }\n        }).catch(e => false)\n    }\n\n    newModalVisibility (bool, node, path) {\n      let newCategory = this.state.newCategory\n      newCategory.ModalVisiblity = bool\n      // We need to save the node and path of the current node so that\n      // the modal will send the data and we can have the parent_id to send to the backend. \n      if(node) {\n        newCategory.node = node\n      }\n      if(path) {\n        newCategory.path = path\n      }\n      this.setState({newCategory})\n    }\n\n    async saveNewCategory (name,image) {\n      const getNodeKey = ({ treeIndex }) => treeIndex;\n      let newCategory = this.state.newCategory\n      let {node, path} = newCategory, title = name\n\n      if (!title) {\n        return;\n      }\n      const newNode = {\n        title,\n        image:image,\n        hello:\"hello\",\n        parent_id: node ? node._id : null,\n        path: node ? node.path + '/' + title : title, \n      };\n      \n      const savedToBackend = await this.saveToBackend(newNode)\n      if (!savedToBackend) {\n        return notification['error']({\n          message: 'An Error Occurred',\n          description: 'The new category was not added to the database!',\n        });\n      }\n      if(node === null) {\n        this.setState(state => ({\n          categories: state.categories.concat(newNode),\n        }))\n      } else {\n        this.setState((state) => ({\n          categories: addNodeUnderParent({\n            treeData: state.categories,\n            parentKey: path[path.length - 1],\n            expandParent: true,\n            getNodeKey,\n            newNode,\n            addAsFirstChild: state.addAsFirstChild,\n          }).treeData,\n        }));\n      }\n      // After addition of the new node, the newCategory variable in state needs to be updated.\n      // BUG: This code is not working. newCategory is not updated.\n      newCategory.ModalVisiblity = false;\n      newCategory.node = null;\n      newCategory.path = null;\n      this.setState({ newCategory })\n    }\n\n    deleteModalVisibility(bool, node, path) {\n      let deleteCategory = this.state.deleteCategory\n      deleteCategory.ModalVisiblity = bool\n      if (node) {\n        deleteCategory.node = node\n      }\n      if (path) {\n        deleteCategory.path = path\n      }\n      this.setState({ deleteCategory })\n    }\n\n    deleteCategory (bool) {\n      const getNodeKey = ({ treeIndex }) => treeIndex;\n      let {node, path} = this.state.deleteCategory\n      this.setState(state => ({\n        categories: removeNodeAtPath({\n          treeData: state.categories,\n          path,\n          getNodeKey,\n        }),\n      }))\n      this.deleteFromBackend(node._id)\n    }\n\n    deleteTemplate = async () => {\n      const node = this.state.deleteTemplate.node\n      const resp = await api.delete(`/templates/${node.template_id}`)\n      if (resp.status === 204) {\n        notification['success']({\n          message: 'Template Deleted',\n          description:\n            'The template has been removed from the database!',\n        });\n        let categories = this.state.categories;\n        categories.forEach(cat => {\n          if (cat._id === node._id) {\n            cat.template_id = null;\n          }\n        })\n        this.setState({ categories })\n      }\n    }\n\n    deleteTemplateModalVisibility = (bool, node, path) => {\n      let deleteTemplate = this.state.deleteTemplate;\n      deleteTemplate = {\n        ModalVisiblity: bool,\n        node, \n        path\n      };\n      this.setState({ deleteTemplate });\n    }\n\n    render() {\n      const { searchString, searchFocusIndex, searchFoundCount } = this.state;\n      \n      const selectPrevMatch = () =>\n        this.setState({\n          searchFocusIndex:\n            searchFocusIndex !== null\n              ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n              : searchFoundCount - 1,\n        });\n\n      const selectNextMatch = () =>\n        this.setState({\n          searchFocusIndex:\n            searchFocusIndex !== null\n              ? (searchFocusIndex + 1) % searchFoundCount\n              : 0,\n        });\n\n      const customSearchMethod = ({ node, searchQuery }) => {\n        return (\n        searchQuery &&\n        node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1)\n      }\n\n      const searchInputChange = (event) => this.setState({ searchString: event.target.value });\n      return (\n        <div className=\"Categories\">\n          <h3>List of Categories</h3>\n          <Search\n            searchParams={{searchString, searchFocusIndex, searchFoundCount}}\n            selectPrevMatch={selectPrevMatch}\n            selectNextMatch={selectNextMatch}\n            inputChange={searchInputChange}\n          />\n          <NewRootCategory \n            onClick={() => this.newModalVisibility(true, null, null)}\n          />\n          {this.state.categories.length ? (<SortableTree\n            canDrag={false}\n            treeData={this.state.categories}\n            onChange={(treeData) => this.setState({ categories: treeData })}\n            generateNodeProps={({ node, path }) => ({\n              buttons: [\n                <Button\n                  onClick={async () => {\n                    this.newModalVisibility(true, node, path)\n                  }}\n                >\n                  Add Child\n                </Button>,\n                // If a category has children or a category has an existing template, it cannot be deleted. \n                (!node.children && node.template_id == null) ? (<Button\n                  onClick={(event) => {\n                    this.deleteModalVisibility(true, node, path)\n                  }\n                }>\n                  Remove\n                </Button>) : null,\n                (!node.template_id) ? (<Button\n                  href={`/template?category=${node._id}`}\n                >\n                  Add Template\n                </Button>) : [(<Button\n                  key={`edit-${node._id}`}\n                  href={`/template?category=${node._id}&template=${node.template_id}`}\n                >\n                  View/Edit Template\n                </Button>),\n                ((node.products === 0 && node.template_id !== null) ? (<Button\n                  key={`remove-${node._id}`}\n                  onClick={async (event) => this.deleteTemplateModalVisibility(true, node, path)}\n                >\n                  Remove Template\n                </Button>) : (<Button\n                  key={`editprod-${node._id}`}\n                  href={`/product?category=${node._id}`}\n                >\n                  View/Edit Product\n                </Button>)),\n                (<Button\n                  key={`addprod-${node._id}`}\n                  href={`/addproduct?category=${node._id}&template=${node.template_id}`}\n                >\n                  Add Product\n                </Button>)],\n              ],\n            })}\n            searchMethod={customSearchMethod}\n            onlyExpandSearchedNodes\n            // The query string used in the search. This is required for searching.\n            searchQuery={searchString}\n            // When matches are found, this property lets you highlight a specific\n            // match and scroll to it. This is optional.\n            searchFocusOffset={searchFocusIndex}\n            // This callback returns the matches from the search,\n            // including their `node`s, `treeIndex`es, and `path`s\n            // Here I just use it to note how many matches were found.\n            // This is optional, but without it, the only thing searches\n            // do natively is outline the matching nodes.\n            searchFinishCallback={matches =>\n              this.setState({\n                searchFoundCount: matches.length,\n                searchFocusIndex:\n                matches.length > 0 ? searchFocusIndex % matches.length : 0,\n              })\n            }\n          />) : <Skeleton active />}\n          <NewCategoryModal\n            visibility={this.state.newCategory.ModalVisiblity}\n            setVisibility={this.newModalVisibility}\n            saveNewCategory={this.saveNewCategory}\n          />\n          <DeleteCategoryModal\n            visibility={this.state.deleteCategory.ModalVisiblity}\n            setVisibility={this.deleteModalVisibility}\n            deleteCategory={this.deleteCategory}\n          />\n          <DeleteTemplateModal\n            visibility={this.state.deleteTemplate.ModalVisiblity}\n            setVisibility={this.deleteTemplateModalVisibility}\n            deleteTemplate={this.deleteTemplate}\n          />\n        </div>\n      );\n    }\n}\n\nexport default connect(({ options }) => ({\n  options\n}), (dispatch) => ({\n  setOptions: ({ options }) => \n    dispatch({\n      type: 'SET_OPTIONS',\n      payload: options\n    })\n}))(Categories);\n","import React from 'react';\nimport ArrayField from '@rjsf/core/lib/components/fields/ArrayField';\n\nimport { getWidget, getUiOptions, optionsList, retrieveSchema, getDefaultRegistry } from './utils';\n\nclass ArrayFieldPatched extends ArrayField {\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData,\n      disabled,\n      readonly,\n      autofocus,\n      onBlur,\n      onFocus,\n      registry = getDefaultRegistry(),\n      rawErrors,\n    } = this.props;\n    const items = this.props.formData;\n    const { widgets, definitions, formContext } = registry;\n    const itemsSchema = retrieveSchema(schema.items, definitions, formData);\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', ...options } = {\n      ...getUiOptions(uiSchema),\n      enumOptions,\n    };\n    const Widget = getWidget(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema && idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n}\n\nexport default ArrayFieldPatched;\n","import React from 'react';\nimport * as types from '@rjsf/core/lib/types';\n\nimport { getWidget, getUiOptions, optionsList, getDefaultRegistry } from './utils';\n\nfunction BooleanField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry = getDefaultRegistry(),\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, fields } = registry;\n  const { widget = 'checkbox', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  let enumOptions;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map((option) => ({\n        ...option,\n        title: option.title || (option.const === true ? 'Yes' : 'No'),\n      })),\n    });\n  } else {\n    enumOptions = optionsList({\n      enum: schema.enum || [true, false],\n      enumNames: schema.enumNames || (schema.enum && schema.enum[0] === false ? ['No', 'Yes'] : ['Yes', 'No']),\n    });\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n      DescriptionField={fields.DescriptionField}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default BooleanField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getWidget, getUiOptions, isSelect, optionsList, getDefaultRegistry, hasWidget } from './utils';\n\nfunction StringField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    registry = getDefaultRegistry(),\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext } = registry;\n  const enumOptions = isSelect(schema) && optionsList(schema);\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      label={title === undefined ? name : title}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  StringField.propTypes = {\n    schema: PropTypes.object.isRequired,\n    uiSchema: PropTypes.object.isRequired,\n    idSchema: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    formData: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    registry: PropTypes.shape({\n      widgets: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])).isRequired,\n      fields: PropTypes.objectOf(PropTypes.func).isRequired,\n      definitions: PropTypes.object.isRequired,\n      formContext: PropTypes.object.isRequired,\n    }),\n    formContext: PropTypes.object.isRequired,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    rawErrors: PropTypes.arrayOf(PropTypes.string),\n  };\n}\n\nStringField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default StringField;\n","import SchemaField from '@rjsf/core/lib/components/fields/SchemaField';\nimport { notification } from 'antd';\n\nexport default class PatchedSchemaField extends SchemaField {\n  componentDidCatch(error, info) {\n    notification.error({\n      message: `Error: ${this.props.idSchema.$id}`,\n      description: error.toString(),\n      duration: 0,\n    });\n  }\n}\n","import React from 'react';\nimport { Alert } from 'antd';\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport StringField from './StringField';\nimport SchemaField from './SchemaField';\nimport { getWidget as _getWidget } from '@rjsf/core/lib/utils';\nexport * from '@rjsf/core/lib/utils';\n\nfunction Error(msg) {\n  return () => <Alert message={msg} type=\"error\" showIcon />;\n}\n\nexport function getWidget(...args) {\n  try {\n    return _getWidget(...args);\n  } catch (e) {\n    return Error(e.toString());\n  }\n}\n\nfunction TitleField(props) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required ? '*' : null}\n    </legend>\n  );\n}\n\nexport function getDefaultRegistry() {\n  const fields = {\n    ...require('@rjsf/core/lib/components/fields').default,\n    ArrayField,\n    StringField,\n    BooleanField,\n    TitleField,\n    SchemaField,\n  };\n  return {\n    fields,\n    widgets: require('@rjsf/core/lib/components/widgets').default,\n    definitions: {},\n    formContext: {},\n  };\n}\n","import Form from '@rjsf/core/lib';\nimport { getDefaultRegistry } from './utils';\n\nexport default class FormPatch extends Form {\n  getRegistry() {\n    const { fields, widgets } = getDefaultRegistry();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      widgets: { ...widgets, ...this.props.widgets },\n      ArrayFieldTemplate: this.props.ArrayFieldTemplate,\n      ObjectFieldTemplate: this.props.ObjectFieldTemplate,\n      FieldTemplate: this.props.FieldTemplate,\n      definitions: this.props.schema.definitions || {},\n      formContext: this.props.formContext || {},\n      onSubmit: this.props.onSubmit\n    };\n  }\n}\n","import React from 'react';\n\nconst REQUIRED_FIELD_SYMBOL = '*';\n\nfunction Label(props) {\n  const { label, required, id } = props;\n  if (!label) {\n    // See #312: Ensure compatibility with old versions of React.\n    return <div />;\n  }\n  return (\n    <label className=\"control-label\" htmlFor={id}>\n      {label}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n\nexport function DefaultTemplate(props) {\n  const { id, classNames, label, children, errors, help, description, hidden, required, displayLabel } = props;\n  if (hidden) {\n    return children;\n  }\n\n  return (\n    <div className={classNames}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </div>\n  );\n}\n\nexport function DefaultObjectFieldTemplate(props) {\n  const { TitleField, DescriptionField } = props;\n  return (\n    <fieldset>\n      {(props.uiSchema['ui:title'] || props.title) && (\n        <TitleField\n          id={`${props.idSchema.$id}__title`}\n          title={props.title || props.uiSchema['ui:title']}\n          required={props.required}\n          formContext={props.formContext}\n        />\n      )}\n      {props.description && (\n        <DescriptionField\n          id={`${props.idSchema.$id}__description`}\n          description={props.description}\n          formContext={props.formContext}\n        />\n      )}\n      {props.properties.map((prop) => prop.content)}\n    </fieldset>\n  );\n}\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\n\nexport default class InlineEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      value: this.props.value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ value: nextProps.value });\n  }\n\n  onChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n  onCompleteEditing = () => {\n    this.setState({ editing: false });\n    const newValue = this.state.value.trim();\n    if (newValue !== this.props.value) {\n      this.props.onChange && this.props.onChange(newValue);\n    }\n  };\n  onStartEditing = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState({ editing: true }, () => this.input && this.input.focus());\n  };\n\n  onCancelEditing = () => {\n    this.setState({\n      editing: false,\n      value: this.props.value,\n    });\n  };\n\n  renderEditing() {\n    return (\n      <Input\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        onKeyUp={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.keyCode === 13) {\n            this.onCompleteEditing();\n          } else if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n\n  renderView() {\n    return (\n      <span>\n        {this.props.children}\n        <EditOutlined onClick={this.onStartEditing} />\n      </span>\n    );\n  }\n\n  render() {\n    if (this.state.editing) {\n      return this.renderEditing();\n    } else {\n      return this.renderView();\n    }\n  }\n}\n","import React from 'react';\nimport InlineEditor from '../InlineEditor';\nimport { connect } from 'react-redux';\nimport { Input, Popconfirm, Tooltip } from 'antd';\nimport { SelectOutlined, DeleteOutlined } from '@ant-design/icons';\nconst { getNodeByRjsfId } = require('../core');\nconst { TextArea } = Input;\n\nconst ACTIVE_STYLE = { backgroundColor: '#bae7ff' };\n\nclass ExtendedInlineEditor extends InlineEditor {\n  renderView() {\n    return (\n      <span className=\"fb-test\" onClick={this.onStartEditing}>\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nclass InlineTextAreaEditor extends ExtendedInlineEditor {\n  renderEditing() {\n    return (\n      <TextArea\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        autoSize\n        onKeyUp={(e) => {\n          if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst ButtonGroup = connect(null, (dispatch, { id }) => ({\n  select: () => dispatch({ type: 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID', payload: id }),\n  remove: () => dispatch({ type: 'TREE_REMOVE_NODE_BY_RJSF_ID', payload: id }),\n}))((props) => {\n  const { select, remove, id } = props;\n  return (\n    <Tooltip title={id} placement=\"right\">\n      <a href=\"#!\">\n        <SelectOutlined onClick={select} />\n      </a>\n      <Popconfirm title={`Remove ${id}?`} onConfirm={remove}>\n        <a href=\"#!\">\n          <DeleteOutlined />\n        </a>\n      </Popconfirm>\n    </Tooltip>\n  );\n});\n\nexport function fieldTemplateConnector(FieldTemplate) {\n  return connect(\n    ({ tree: { present }, activeNodeKey, settings: { isInlineMode } }, { id }) => {\n      const n = getNodeByRjsfId(present, id);\n      const active = n && n.key === activeNodeKey;\n      return { tree: present, active, isInlineMode };\n    },\n    (dispatch, { id, schema, uiSchema }) => ({\n      updateTitle: (title) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { schema: { ...schema, title } } },\n        }),\n      updateDescription: (description) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { schema: { ...schema, description } } },\n        }),\n      updateHelp: (help) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { uiSchema: { ...uiSchema, 'ui:help': help } } },\n        }),\n    })\n  )((props) => {\n    const {\n      id,\n      label,\n      description,\n      help,\n      schema,\n      updateTitle,\n      updateDescription,\n      updateHelp,\n      active,\n      classNames,\n      isInlineMode,\n    } = props;\n    if (!isInlineMode) return <FieldTemplate {...props} />;\n    const labelElement = label && (\n      <ExtendedInlineEditor value={label} onChange={updateTitle}>\n        {label}\n      </ExtendedInlineEditor>\n    );\n    const descriptionElement = description && (\n      <InlineTextAreaEditor value={description.props.description} onChange={updateDescription}>\n        {description}\n      </InlineTextAreaEditor>\n    );\n    const helpElement = help && (\n      <ExtendedInlineEditor value={help.props.help} onChange={updateHelp}>\n        {help}\n      </ExtendedInlineEditor>\n    );\n    return (\n      <div className={classNames} style={active ? ACTIVE_STYLE : null}>\n        {['object', 'array'].includes(schema.type) ? null : (\n          <div className=\"pull-right\">\n            {' '}\n            <ButtonGroup id={id} />{' '}\n          </div>\n        )}\n        <FieldTemplate\n          _label={label}\n          _description={description}\n          _help={help}\n          {...props}\n          classNames={null}\n          label={labelElement}\n          description={descriptionElement}\n          help={helpElement}\n        />\n      </div>\n    );\n  });\n}\n\nexport function objectFieldTemplateConnector(ObjectFieldTemplate) {\n  return connect(\n    ({ tree: { present }, activeNodeKey, settings: { isInlineMode } }, { idSchema }) => {\n      const n = idSchema && idSchema.$id && getNodeByRjsfId(present, idSchema.$id);\n      const active = n && n.key === activeNodeKey;\n      return { tree: present, active, isInlineMode };\n    },\n    (dispatch, { idSchema, schema }) => ({\n      updateTitle: (title) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: idSchema.$id, nodeUpdate: { schema: { ...schema, title } } },\n        }),\n      updateDescription: (description) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: idSchema.$id, nodeUpdate: { schema: { ...schema, description } } },\n        }),\n    })\n  )((props) => {\n    const { idSchema, title, description, updateTitle, updateDescription, active, isInlineMode } = props;\n    if (!isInlineMode) return <ObjectFieldTemplate {...props} />;\n    const titleElement = title && (\n      <span>\n        <ExtendedInlineEditor value={title} onChange={updateTitle}>\n          {title}\n        </ExtendedInlineEditor>\n        <span className=\"pull-right\">\n          {' '}\n          <ButtonGroup id={idSchema.$id} />{' '}\n        </span>\n      </span>\n    );\n    const descriptionElement = description && (\n      <InlineTextAreaEditor value={description} onChange={updateDescription}>\n        {description}\n      </InlineTextAreaEditor>\n    );\n\n    return (\n      <div style={active ? ACTIVE_STYLE : null}>\n        <ObjectFieldTemplate\n          _title={title}\n          _description={description}\n          {...props}\n          title={titleElement}\n          description={descriptionElement}\n        />\n      </div>\n    );\n  });\n}\n","import { DefaultTemplate, DefaultObjectFieldTemplate } from './Template';\nimport { fieldTemplateConnector, objectFieldTemplateConnector } from './connectors';\n\nexport const FieldTemplate = fieldTemplateConnector(DefaultTemplate);\nexport const ObjectFieldTemplate = objectFieldTemplateConnector(DefaultObjectFieldTemplate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from '../rjsf-patch/Form';\n\nimport { FieldTemplate, ObjectFieldTemplate } from '../Template';\n\nclass FormView extends React.Component {\n  render() {\n    if (!this.props.schema) {\n      return null;\n    }\n    const { name, schema, uiSchema, formData, setFormData, liveValidate, onSubmit } = this.props;\n    return (\n      <Form\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        liveValidate={liveValidate}\n        FieldTemplate={FieldTemplate}\n        ObjectFieldTemplate={ObjectFieldTemplate}\n        idPrefix={name}\n        onChange={setFormData}\n        onSubmit={onSubmit}\n      />\n    );\n  }\n}\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ name, schema, uiSchema }],\n    },\n    formData,\n    settings: { isLiveValidate },\n  }) => ({\n    name,\n    schema,\n    uiSchema,\n    formData,\n    liveValidate: isLiveValidate,\n  }),\n  (dispatch) => ({\n    setFormData: ({ formData }) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n  })\n)(FormView);\n","import React from 'react';\nimport { Input, Alert } from 'antd';\nconst { TextArea } = Input;\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  if (!objA || !objB) {\n    return false;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) && (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B'a keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default class JsonEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      string: JSON.stringify(value, null, 2),\n      value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!shallowEqual(nextProps.value, this.state.value)) {\n      this.setState({\n        value: nextProps.value,\n        string: JSON.stringify(nextProps.value, null, 2),\n        error: null,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.string !== this.state.string;\n  }\n\n  onChange = (e) => {\n    const value = e.target.value;\n    try {\n      const obj = value ? JSON.parse(value) : null;\n      this.setState(\n        {\n          value: obj,\n          string: value,\n          error: null,\n        },\n        () => this.props.onChange(obj)\n      );\n    } catch (error) {\n      this.setState({\n        string: value,\n        error,\n      });\n    }\n  };\n\n  renderErrorMessage() {\n    const { error } = this.state;\n    if (!error) return null;\n    const errorMessage = error.toString();\n    const message = (\n      <a\n        href=\"#!\"\n        onClick={() => {\n          const matched = /position ([0-9]+)/.exec(errorMessage);\n          const position = matched ? matched[1] : -1;\n          const input = this.input.textAreaRef;\n          input.selectionStart = position;\n          input.selectionEnd = position;\n          input.focus();\n        }}\n      >\n        {error.toString()}\n      </a>\n    );\n    return <Alert message={message} type=\"error\" showIcon />;\n  }\n\n  onClickPrettify = () => {\n    let { error } = this.state;\n    if (!error) {\n      this.setState({\n        string: JSON.stringify(this.props.value, null, 2),\n      });\n    }\n  };\n\n  render() {\n    const { string } = this.state;\n    return (\n      <div>\n        {this.renderErrorMessage() || (\n          <Alert\n            message={\n              <a href=\"#!\" onClick={this.onClickPrettify}>\n                Prettify\n              </a>\n            }\n            type=\"success\"\n            showIcon\n          />\n        )}\n        <TextArea {...this.props} ref={(ref) => (this.input = ref)} value={string} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ schema }],\n    },\n  }) => ({ schema }),\n  (dispatch) => ({\n    setTree: (schema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          schema,\n        },\n      }),\n  })\n)(({ schema, setTree }) => <JsonEditor value={schema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ uiSchema }],\n    },\n  }) => ({ uiSchema }),\n  (dispatch) => ({\n    setTree: (uiSchema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          uiSchema,\n        },\n      }),\n  })\n)(({ uiSchema, setTree }) => <JsonEditor value={uiSchema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport JsonEditor from '../JsonEditor';\n\nfunction name2title(name) {\n  if (!name) return name;\n  const words = name.indexOf('_') >= 0 ? name.split('_') : name.split(/(?=[A-Z])/);\n  return words.map((a) => a.charAt(0).toUpperCase() + a.slice(1)).join(' ');\n}\n\nfunction json2schema(data, name) {\n  const title = name ? name2title(name) : undefined;\n  if (typeof data === 'number') {\n    return {\n      type: Number.isInteger(data) ? 'integer' : 'number',\n      title,\n    };\n  }\n  if (typeof data === 'string') {\n    return {\n      type: 'string',\n      title,\n    };\n  }\n  if (typeof data === 'boolean') {\n    return {\n      type: 'boolean',\n      title,\n    };\n  }\n  if (typeof data === 'object') {\n    if (Array.isArray(data)) {\n      return {\n        type: 'array',\n        title,\n        items: json2schema(data[0]),\n      };\n    }\n    let properties = {};\n    for (const i in data) {\n      const s = json2schema(data[i], i);\n      if (s) {\n        properties[i] = s;\n      }\n    }\n    return {\n      type: 'object',\n      title,\n      properties,\n    };\n  }\n  return undefined;\n}\n\nexport default connect(\n  ({ formData }) => ({ formData }),\n  (dispatch) => ({\n    setFormData: (formData) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n    genForm: (formData) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          name: 'root',\n          schema: json2schema(formData, 'form'),\n          uiSchema: {},\n        },\n      }),\n  })\n)(({ formData, setFormData, genForm }) => (\n  <div>\n    <JsonEditor value={formData} onChange={(value) => setFormData(value)} autoSize />\n    <Button type=\"primary\" onClick={() => genForm(formData)}>\n      Gen Form\n    </Button>\n    <Button onClick={() => setFormData({})}>Clear</Button>\n  </div>\n));\n","import React, { Component } from 'react';\nimport {instance as api} from '../../axios';\nimport { connect } from 'react-redux';\nimport { Card } from '@material-ui/core';\nimport { FormView } from '../ProductTemplates/views/index';\nimport { notification } from 'antd';\n\nimport './Products.css';\n\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {},\n      schema: {},\n      templateId: null,\n      categoryId: null,\n      productId: null, // Will have value when product is edited.\n    };\n  }\n\n  async componentDidMount() {\n    const query = new URLSearchParams(this.props.location.search)\n    let templateId = query.get('template'), \n        categoryId = query.get('category'),\n        productId = query.get('product');\n    \n    let uiSchema = {}\n    // If product is being Edited\n    if (productId !== null) {\n      this.setState({ productId })\n      // Lock the inputs manuf, model\n      uiSchema = {\n        name: { \"ui:readonly\": true },\n        image: { \"ui:readonly\": true}\n      }\n    }\n    const { data: template } = await api.get(\"/templates/\" + templateId);\n    if (categoryId === 'null') {\n      categoryId = template.category_id\n    }\n    // To remove the inline icons (Delete, etc) which are present in Template page\n    this.props.updateSettings({ isInlineMode: false })\n    this.props.setTree({schema: JSON.parse(template.formSchema), uiSchema})\n    this.setState({ schema: JSON.parse(template.formSchema), templateId, categoryId });\n  }\n\n  submitHandler = async () => {\n  try {\n    let name = '', formData = this.props.formData;\n    name = `${formData.name}`;\n    const body = {\n      template_id: this.state.templateId,\n      category_id: this.state.categoryId,\n      data: JSON.stringify(formData),\n      name\n    };\n    let data;\n    if (this.state.productId !== null) {\n      body.id = this.state.productId\n      data = await api.patch(\"/product\", body);\n    } else {\n      data = await api.post(\"/product\", body);\n    }\n    if (data.status === 201 || data.status === 200) {\n      notification['success']({\n          message: 'Product Added',\n          description:\n            'The product has been added to the database!',\n        });\n      this.props.setFormData({formData: {}})\n    } else {\n      notification['error']({\n        message: 'An Error Occurred',\n        description: 'The product was not saved to the database. Please try again later.'\n      })\n    }\n  } catch (e) {\n    notification['error']({\n      message: 'An Error Occurred',\n      description: 'The product was not saved to the database. Please try again later.'\n    })\n  }\n  };\n\n  render() {\n    return (\n      <div className=\"product\">\n        <h4>Form Page</h4>\n        <h5>{this.state.productId ? 'Edit Product' : 'Add New Product'}</h5>\n        <Card variant=\"elevation\" raised className=\"card\">\n          <FormView\n            formData={this.props.formData}\n            schema={this.props.schema}\n            onSubmit={this.submitHandler}\n          />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(({ \n  settings,\n  formData, \n  tree: {\n    present: [{ schema }]\n  }\n}) => ({\n  settings,\n  schema,\n  formData\n}), (dispatch) => ({\n  setTree: ({schema, uiSchema}) =>\n    dispatch({\n      type: 'TREE_SET_TREE',\n      payload: {\n        schema,\n        uiSchema\n      },\n    }),\n  setFormData: ({ formData }) =>\n    dispatch({\n      type: 'FORM_DATA_SET',\n      payload: formData,\n    }),\n  updateSettings: (payload) =>\n    dispatch({\n      type: 'SETTINGS_UPDATE',\n      payload,\n    }),\n}))(Products);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Menu } from 'antd';\nconst { SubMenu, Item } = Menu;\n\nfunction nameGen(name, occupied) {\n  let n = 1;\n  let newName = name;\n  while (occupied && occupied.includes(newName)) {\n    newName = name + '_' + n;\n    n += 1;\n  }\n  return newName;\n}\n\nclass AddItemMenu extends React.Component {\n  onAddNode = (node2add) => {\n    const { addNode } = this.props;\n    const name = nameGen(\n      node2add.name,\n      this.props.node.children.map((a) => a.name)\n    );\n    console.log(node2add)\n    addNode({ ...node2add, name });\n  };\n  render() {\n    const {\n      menu: { children: menuTree },\n      menuOpenKeys,\n      menuOpenChange,\n    } = this.props;\n    /* A modal can be added here that can ask for the title of the List element to be added. \n    Or a patch file will need to be replicated in the rjsf-patch for specific List element. */\n    return (\n      <Menu mode=\"inline\" theme=\"dark\" openKeys={menuOpenKeys} onOpenChange={menuOpenChange}>\n        {menuTree.map((a) =>\n          a.schema && a.schema.type === 'object' && a.children && a.children.length ? (\n            <SubMenu key={a.key} title={a.schema.title || a.name}>\n              {a.children.map((b) => (\n                <Item key={b.key} onClick={() => this.onAddNode(b)}>\n                  {b.schema.title || b.name}\n                </Item>\n              ))}\n            </SubMenu>\n          ) : (\n            <Item key={a.key} onClick={() => this.onAddNode(a)}>\n              {a.schema.title || a.name}\n            </Item>\n          )\n        )}\n      </Menu>\n    );\n  }\n}\n\nexport default connect(\n  ({ menu, menuOpenKeys }) => ({ menu, menuOpenKeys }),\n  (dispatch, { node }) => ({\n    addNode: (node2add) =>\n      dispatch({\n        type: 'TREE_ADD_NODE',\n        payload: {\n          targetNodeKey: node.key,\n          position: 0,\n          node2add,\n        },\n      }),\n    menuOpenChange: (keys) =>\n      dispatch({\n        type: 'MENU_OPEN_KEYS_SET',\n        payload: keys,\n      }),\n  })\n)(AddItemMenu);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Popconfirm } from 'antd';\nimport { PlusCircleOutlined, CloseCircleFilled } from '@ant-design/icons';\nimport InlineEditor from '../InlineEditor';\nimport { Dropdown, notification } from 'antd';\nimport AddItemMenu from './Menu';\n\nclass TreeNodeTitle extends PureComponent {\n  render() {\n    const { node, removeNode, updateNodeName, searchValue } = this.props;\n    const { name, key } = node;\n    const isLeaf = node.isLeaf;\n    const isRoot = node.name === node.key;\n    const isArray = node.schema.type === 'array';\n    const indexBefore = node.name.toLowerCase().indexOf(searchValue);\n    const indexAfter = indexBefore + searchValue.length;\n    return (\n      <span style={{ display: 'block' }}>\n        {searchValue && indexBefore >= 0 ? (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name.slice(0, indexBefore)}\n            <span style={{ color: '#f50' }}>{name.slice(indexBefore, indexAfter)}</span>\n            {name.slice(indexAfter)}\n          </InlineEditor>\n        ) : (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name}\n          </InlineEditor>\n        )}\n        <span className=\"pull-right\">\n          {!(isLeaf || isArray) ? (\n            <span className=\"form-builder-add-item-menu\" onClick={(e) => e.stopPropagation()}>\n              <Dropdown placement=\"bottomLeft\" trigger={['click']} overlay={<AddItemMenu node={node} />}>\n                <PlusCircleOutlined />\n              </Dropdown>\n            </span>\n          ) : null}\n          {!isRoot ? (\n            <span className=\"tree-node-delete\" onClick={(e) => e.stopPropagation()}>\n              <Popconfirm\n                placement=\"rightTop\"\n                title={`Delete \"${key}\"?`}\n                onConfirm={() => {\n                  // This check is really not needed right now, but still\n                  let thisKey = node.key.split('.')[1]\n                  if (thisKey === 'name' || thisKey === 'image') {\n                    return notification['error']({\n                      message: 'Cannot delete basic fields!',\n                      description: 'You cannot delete the basic fields required for templates.'\n                    })\n                  }\n                  removeNode(key)}}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <CloseCircleFilled />\n              </Popconfirm>\n            </span>\n          ) : null}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default connect(null, (dispatch) => ({\n  removeNode: (key) =>\n    dispatch({\n      type: 'TREE_REMOVE_NODE',\n      payload: key,\n    }),\n  updateNodeName: (key, name) =>\n    dispatch({\n      type: 'TREE_UPDATE_NODE',\n      payload: { target: key, nodeUpdate: { name } },\n    }),\n}))(TreeNodeTitle);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tree, Input } from 'antd';\nimport TreeNodeTitle from './TreeNodeTitle';\nconst { TreeNode } = Tree;\nconst { Search } = Input;\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: ['root'],\n      searchValue: '',\n      searchExpanded: [],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeNodeKey && nextProps.activeNodeKey !== this.props.activeNodeKey) {\n      let path = nextProps.activeNodeKey.split('.');\n      let expandedKeys = [...this.state.expandedKeys];\n      const n = path.length;\n      for (var i = 1; i < n; i++) {\n        path[i] = path[i - 1] + '.' + path[i];\n        if (!expandedKeys.includes(path[i - 1])) {\n          expandedKeys.push(path[i - 1]);\n        }\n      }\n      this.setState({\n        expandedKeys,\n      });\n    }\n  }\n\n  onDrop = (info) => {\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    this.props.moveNode(dragKey, dropKey, dropPosition);\n  };\n\n  onExpand = (expandedKeys) => {\n    this.setState({\n      expandedKeys,\n    });\n  };\n\n  onChange = (e) => {\n    const { expandedKeys } = this.state;\n    const searchValue = e.target.value.trim().toLowerCase();\n    if (!searchValue) {\n      this.setState({\n        searchValue,\n        searchExpanded: [],\n      });\n      return;\n    }\n\n    let newSearchExpanded = [];\n    const loop = (data) => {\n      if (!data) return;\n      for (const item of data) {\n        if (item.name.toLowerCase().includes(searchValue)) {\n          let parents = item.key.split('.');\n          const n = parents.length;\n          for (let i = 1; i < n; i++) {\n            if (!(expandedKeys.includes(parents[i - 1]) || newSearchExpanded.includes(parents[i - 1]))) {\n              newSearchExpanded.push(parents[i - 1]);\n            }\n            parents[i] = parents[i - 1] + '.' + parents[i];\n          }\n        }\n        loop(item.children);\n      }\n    };\n    loop(this.props.tree);\n    this.setState({\n      searchValue,\n      searchExpanded: newSearchExpanded,\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      expandedKeys: [...this.state.expandedKeys, ...this.state.searchExpanded],\n      searchExpanded: [],\n    });\n  };\n\n  render() {\n    const { tree, setActiveNode, activeNodeKey } = this.props;\n    const { searchValue, expandedKeys, searchExpanded } = this.state;\n    const loop = (data) =>\n      data.map((item) => {\n        if (item.children && item.children.length) {\n          return (\n            <TreeNode\n              key={item.key}\n              title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n              isLeaf={item.isLeaf}\n            >\n              {loop(item.children)}\n            </TreeNode>\n          );\n        }\n        return (\n          <TreeNode\n            key={item.key}\n            title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n            isLeaf={item.isLeaf}\n          />\n        );\n      });\n    const children = loop(tree);\n    return (\n      <div>\n        <Search placeholder=\"Search\" onChange={this.onChange} onBlur={this.onBlur} />\n        <Tree\n          className=\"form-builder-draggable-tree\"\n          expandedKeys={searchExpanded.length ? [...expandedKeys, ...searchExpanded] : expandedKeys}\n          selectedKeys={[activeNodeKey]}\n          draggable\n          onDragEnter={this.onDragEnter}\n          onDrop={this.onDrop}\n          onExpand={this.onExpand}\n          onSelect={([selected]) => setActiveNode(selected)}\n          blockNode\n        >\n          {children}\n        </Tree>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    tree: present,\n    activeNodeKey,\n  }),\n  (dispatch) => ({\n    moveNode: (source, target, position) =>\n      dispatch({\n        type: 'TREE_MOVE_NODE',\n        payload: {\n          source,\n          target,\n          position,\n        },\n      }),\n    removeNode: (target) =>\n      dispatch({\n        type: 'TREE_REMOVE_NODE',\n        payload: target,\n      }),\n    setActiveNode: (selectedKey) =>\n      dispatch({\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: selectedKey,\n      }),\n    updateNodeTitle: (target, name) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target: target,\n          node: { name },\n          updateMode: 1,\n        },\n      }),\n  })\n)(Demo);\n","import Tree from './Tree';\nexport default Tree;\n","import React from 'react';\nimport JsonEditor from '../JsonEditor';\nimport { Input } from 'antd';\n\nexport default class NodeJsonEditor extends React.Component {\n  static get key() {\n    return 'json-editor';\n  }\n  static get name() {\n    return 'Json';\n  }\n  static filter(node) {\n    return true;\n  }\n\n  constructor(props) {\n    super(props);\n    const { schema, uiSchema } = props;\n    this.state = {\n      schemaJsonString: JSON.stringify(schema, null, 2),\n      uiSchemaJsonString: JSON.stringify(schema, null, 2),\n      schema,\n      uiSchema,\n    };\n  }\n\n  render() {\n    const { node, updateNode } = this.props;\n    const { schema, uiSchema } = node;\n    const { properties, items, additionalItems, ...rschema } = schema;\n    return (\n      <div>\n        <Input value={node.name} onChange={(e) => updateNode({ name: e.target.value })} />\n        <JsonEditor value={rschema} onChange={(schema) => updateNode({ schema })} autoSize />\n        <JsonEditor value={uiSchema} onChange={(uiSchema) => updateNode({ uiSchema })} autoSize />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Input, InputNumber, Select, Row, Col, Button, List, Dropdown, Menu, Switch, Slider } from 'antd';\nimport { EditOutlined, CaretDownOutlined, CloseOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport lodash from 'lodash';\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nexport function _FormItemTemplate({ title, children }) {\n  return (\n    <Row className=\"ant-form-item\">\n      <Col className=\"ant-form-item-label\">\n        <label>{title}</label>\n      </Col>\n      <Col className=\"ant-form-item-control-wrapper\">{children}</Col>\n    </Row>\n  );\n}\n\nexport function FormItemTemplate({ title, children, remove }) {\n  return (\n    <List.Item\n      actions={\n        remove ? [<Button onClick={remove} size=\"small\" type=\"danger\" shape=\"circle\" icon={<CloseOutlined />} />] : null\n      }\n    >\n      <List.Item.Meta title={title} description={children} />\n    </List.Item>\n  );\n}\n\nclass TimeThrottle extends React.Component {\n  throttle = 1000;\n  editing = (<EditOutlined />);\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: null,\n      value: props.value,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n      this.setState({ timer: null });\n      this.onSubmitValue(this.state.value);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n\n  onChange = (value) => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      value: value,\n      timer: setTimeout(() => {\n        this.setState({ timer: null });\n        this.onSubmitValue(this.state.value);\n      }, this.throttle),\n    });\n  };\n\n  onSubmitValue(value) {\n    this.props.onChange(value);\n  }\n\n  onBlur = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(this.state.value);\n  };\n\n  onRemove = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(undefined);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nclass TimeThrottleInput extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    return (\n      <FormItemTemplate\n        title={\n          <span>\n            {title}\n            {this.state.timer ? this.editing : null}\n          </span>\n        }\n        remove={this.onRemove}\n      >\n        <Input\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleTextArea extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {this.state.timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <TextArea\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleRange extends TimeThrottle {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value[0] !== this.state.value[0] || nextProps.value[1] !== this.state.value[1]) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n  onSubmitValue(value) {\n    if (!value) {\n      this.props.onChange(value);\n    }\n    let [min, max] = value;\n    if (typeof min === 'string') {\n      if (min) {\n        min = this.props.value[0];\n      } else {\n        min = undefined;\n      }\n    }\n    if (typeof max === 'string') {\n      if (max) {\n        max = this.props.value[1];\n      } else {\n        max = undefined;\n      }\n    }\n    this.props.onChange([min, max]);\n  }\n  render() {\n    const {\n      value: [min, max],\n      timer,\n    } = this.state;\n    const { title } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([typeof n === 'string' && !n ? undefined : n, max]);\n          }}\n          value={min === 0 && max === undefined ? '' : min}\n          style={{ width: 100, textAlign: 'center' }}\n          placeholder=\"Minimum\"\n        />\n        <Input\n          style={{ width: 30, borderLeft: 0, pointerEvents: 'none', backgroundColor: '#fff' }}\n          placeholder=\"~\"\n          disabled\n        />\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([min, typeof n === 'string' && !n ? undefined : n]);\n          }}\n          value={max}\n          style={{ width: 100, textAlign: 'center', borderLeft: 0 }}\n          placeholder=\"Maximum\"\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nconst widgetMap = {\n  boolean: {\n    checkbox: 'CheckboxWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    hidden: 'HiddenWidget',\n  },\n  string: {\n    text: 'TextWidget',\n    password: 'PasswordWidget',\n    // email: \"EmailWidget\",\n    // hostname: \"TextWidget\",\n    // ipv4: \"TextWidget\",\n    // ipv6: \"TextWidget\",\n    uri: 'URLWidget',\n    'data-url': 'FileWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    textarea: 'TextareaWidget',\n    hidden: 'HiddenWidget',\n    date: 'DateWidget',\n    datetime: 'DateTimeWidget',\n    // \"date-time\": \"DateTimeWidget\",\n    'alt-date': 'AltDateWidget',\n    'alt-datetime': 'AltDateTimeWidget',\n    color: 'ColorWidget',\n    file: 'FileWidget',\n  },\n  number: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  integer: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  array: {\n    select: 'SelectWidget',\n    checkboxes: 'CheckboxesWidget',\n    files: 'FileWidget',\n  },\n};\n\nconst widgets = lodash(widgetMap)\n  .toPairs()\n  .flatMap(([type, widgets]) =>\n    lodash(widgets)\n      .toPairs()\n      .map(([widget]) => [widget, type])\n      .value()\n  )\n  .groupBy('0')\n  .toPairs()\n  .map(([widget, types]) => [widget, types.map((a) => a[1])])\n  .map(([widget, types]) => [\n    types.length > 1 ? ({ type }) => types.includes(type) : ((t) => ({ type }) => type === t)(types[0]),\n    widget,\n  ])\n  .map(([filter, widget]) => {\n    switch (widget) {\n      case 'select':\n      case 'radio':\n        return [(schema, uiSchema) => schema.enum && filter(schema, uiSchema), widget];\n\n      default:\n        return [filter, widget];\n    }\n  })\n  .value();\n\nfunction type({ node: { schema }, updateSchema: update }) {\n  const key = 'type';\n  const title = 'Type';\n  const availableTypes = ['string', 'number', 'integer', 'boolean'];\n  if (!availableTypes.includes(schema.type)) return [];\n  const value = (schema || {})[key];\n  return [\n    null,\n    <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n      <Select onChange={(value) => update({ [key]: value })} value={value} style={{ width: '100%' }}>\n        {availableTypes.map((key) => (\n          <Option key={key}>{key}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nfunction title({ node: { schema }, updateSchema: update }) {\n  const key = 'title';\n  const title = 'Title';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction description({ node: { schema }, updateSchema: update }) {\n  const key = 'description';\n  const title = 'Description';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleTextArea\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n        autoSize\n      />,\n    ];\n  }\n}\n\nclass ClassNamesEditor extends React.Component {\n  colSizes = ['sm', 'md', 'lg', 'xl'];\n  style = { width: '100%' };\n\n  constructor(props) {\n    super(props);\n    const value = [...new Set(this.props.value.split(' ').filter((a) => a))];\n\n    const cols = this.extractCol(value);\n    this.state = {\n      col: cols.length ? cols[0][0] : 'md',\n      value: value,\n      options: value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      const value = nextProps.value.split(' ').filter((a) => a);\n      const { options } = this.state;\n      const newOptions = value.filter((a) => !options.includes(a));\n      this.setState({\n        value,\n        options: newOptions, //[...options, ...newOptions]\n      });\n    }\n  }\n\n  extractCol(classNames) {\n    return classNames\n      .filter((a) => a.startsWith('col-'))\n      .map((a) => a.split('-'))\n      .filter((a) => a.length === 3 && Number.isInteger(+a[2]) && this.colSizes.includes(a[1]))\n      .map(([a, b, c]) => [b, +c]);\n  }\n\n  renderMenu() {\n    return (\n      <Menu onClick={({ key }) => this.setState({ col: key })}>\n        {this.colSizes.map((a) => (\n          <Menu.Item key={a}>col-{a}-</Menu.Item>\n        ))}\n      </Menu>\n    );\n  }\n\n  sliderValue() {\n    const { value, col } = this.state;\n    return (this.extractCol(value).find((a) => a[0] === col) || [0, 0])[1];\n  }\n\n  onSliderChange = (value) => {\n    const { value: classNames, col } = this.state;\n\n    let found = false;\n    let newClassNames = classNames\n      .map((a) => {\n        let [perfix, b, v] = a.split('-');\n        if (perfix === 'col' && b === col && Number.isInteger(+v)) {\n          found = true;\n          return value ? `col-${b}-${value}` : '';\n        }\n        return a;\n      })\n      .filter((a) => a);\n    if (!found && value) {\n      newClassNames.push(`col-${col}-${value}`);\n    }\n    this.props.onChange(newClassNames.join(' '));\n  };\n\n  render() {\n    const { title, ...rest } = this.props;\n    const { options, value, col } = this.state;\n    return (\n      <FormItemTemplate title={title} remove={() => this.props.onChange(undefined)}>\n        <Row type=\"flex\" align=\"middle\">\n          <Col xs={4}>\n            <Dropdown overlay={this.renderMenu()}>\n              <Button type=\"link\">\n                {col} <CaretDownOutlined />\n              </Button>\n            </Dropdown>\n          </Col>\n          <Col xs={20}>\n            <Slider min={0} max={12} value={this.sliderValue()} onChange={this.onSliderChange} />\n          </Col>\n        </Row>\n        <Select\n          style={this.style}\n          mode=\"tags\"\n          tokenSeparators={[' ']}\n          {...rest}\n          value={value}\n          onChange={(value) => this.props.onChange(value.join(' '))}\n          onBlur={this.onBlur}\n        >\n          {options.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>\n    );\n  }\n}\n\nfunction classNames({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'classNames';\n  const title = 'Class Names';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <ClassNamesEditor key={key} title={title} value={value} onChange={(value) => update({ classNames: value })} />,\n    ];\n  }\n}\n\nfunction placeholder({ node: { schema, uiSchema }, updateUiOptions: update }) {\n  if (schema.type === 'object' || schema.type === 'array') {\n    return [];\n  }\n  const key = 'placeholder';\n  const title = 'Placeholder';\n  const uiOptions = (uiSchema || {})['ui:options'];\n  const value = (uiOptions || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction help({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:help';\n  const title = 'Help';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction widget({ node: { schema, uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:widget';\n  const title = 'Widget';\n  const availableWidgets = widgets.filter(([f]) => f(schema || {}, uiSchema || {}));\n  if (!availableWidgets.length) return [];\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          onChange={(value) => update({ [key]: value || null })}\n          value={value}\n          style={{ width: '100%' }}\n          showSearch\n        >\n          {availableWidgets.map(([_, key]) => (\n            <Option key={key}>{key}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\nfunction pattern({ node: { schema }, updateSchema: update }) {\n  if (schema.type !== 'string') return [];\n  const key = 'pattern';\n  const title = 'Pattern';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction required({ node: { schema }, updateSchema: update }) {\n  const key = 'required';\n  const title = 'Required';\n  if (schema.type !== 'object') return [];\n  if (!schema.required) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <FormItemTemplate key={key} title=\"Required\" remove={() => update({ [key]: undefined })}>\n      <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        onChange={(required) => update({ required })}\n        value={schema.required}\n      >\n        {Object.keys(schema.properties || {}).map((a) => (\n          <Option key={a}>{a}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nconst rangeMeta = (match, key, title, minp, maxp) => ({ node: { schema }, updateSchema: update }) => {\n  if (!match(schema)) return [];\n  if (schema[minp] === undefined && schema[maxp] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [minp]: 0 })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <TimeThrottleRange\n      key={key}\n      title={title}\n      value={[schema[minp], schema[maxp]]}\n      onChange={(value) => {\n        if (!value) {\n          update({ [minp]: undefined, [maxp]: undefined });\n        } else {\n          const [min, max] = value;\n          update({\n            [minp]: min ? min : max === undefined ? 0 : undefined,\n            [maxp]: max,\n          });\n        }\n      }}\n    />,\n  ];\n};\nconst length = rangeMeta((a) => a.type === 'string', 'length', 'Length', 'minLength', 'maxLength');\nconst range = rangeMeta((a) => a.type === 'number' || a.type === 'integer', 'range', 'Range', 'minimum', 'maximum');\nconst itemRange = rangeMeta((a) => a.type === 'array', 'itemRange', 'Item Range', 'minItems', 'maxItems');\n\nfunction uniqueItems({ node: { schema }, updateSchema: update }) {\n  const key = 'uniqueItems';\n  const title = 'Unique Items';\n  if (schema.type !== 'array') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: true })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <List.Item\n        actions={[\n          <Button onClick={() => update({ [key]: undefined })} size=\"small\" type=\"danger\" icon={<CloseOutlined />} />,\n        ]}\n      >\n        <List.Item.Meta title={title} />\n        <Switch defaultChecked onChange={(value) => update({ [key]: value })} />\n      </List.Item>,\n    ];\n  }\n}\n\nconst [enumKey, enumName] = [\n  ['enum', 'Enum'],\n  ['enumNames', 'Enum Names'],\n].map(([key, title]) => ({ node: { schema }, updateSchema: update }) => {\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          mode=\"tags\"\n          style={{ width: '100%' }}\n          onChange={(values) => update({ [key]: values })}\n          value={schema[key]}\n        >\n          {schema[key].map((a) => (\n            <Select.Option key={a}>{a}</Select.Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n});\n\nconst formatOptions = ['date-time', 'email', 'hostname', 'ipv4', 'ipv6', 'uri'];\nfunction format({ node: { schema }, updateSchema: update }) {\n  const key = 'format';\n  const title = 'Format';\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select style={{ width: '100%' }} onChange={(value) => update({ [key]: value })} value={schema[key]}>\n          {formatOptions.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\n\nexport default class BasicEditor extends React.Component {\n  static get key() {\n    return 'basic-editor';\n  }\n\n  static get name() {\n    return 'Basic';\n  }\n\n  static filter(node) {\n    return node.schema;\n  }\n\n  name() {\n    return null;\n  }\n\n  render() {\n    const l = [\n      type,\n      title,\n      description,\n      required,\n      widget,\n      classNames,\n      help,\n      placeholder,\n      enumKey,\n      enumName,\n      pattern,\n      length,\n      range,\n      itemRange,\n      uniqueItems,\n      format,\n    ].map((f) => f(this.props));\n\n    const addable = l.map((a) => a[0]).filter((a) => a);\n    const editable = l.map((a) => a[1]).filter((a) => a);\n\n    if (addable.length) {\n      editable.push(\n        <List.Item key=\"addButton\">\n          <Dropdown trigger={['click']} overlay={<Menu>{addable}</Menu>}>\n            <Button style={{ width: '100%' }} type=\"primary\" icon={<PlusOutlined />} />\n          </Dropdown>\n        </List.Item>\n      );\n    }\n\n    return <List itemLayout=\"horizontal\" dataSource={editable} renderItem={(a) => a} />;\n  }\n\n  _render() {\n    return (\n      <form className=\"ant-form ant-form-horizontal\">\n        {this.name()}\n        <fieldset>\n          <legend>Schema</legend>\n          {this.title()}\n          {this.description()}\n        </fieldset>\n        <fieldset>\n          <legend>uiSchema</legend>\n          {this.widgets()}\n          {this.classNames()}\n          {this.help()}\n        </fieldset>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs } from 'antd';\nimport JsonEditor from './JsonEditor';\nimport BasicEditor from './BasicEditor';\n\nconst { getNode } = require('../core');\nconst { TabPane } = Tabs;\n\nconst editorList = [BasicEditor, JsonEditor];\n\nclass Editor extends React.Component {\n  updateUiOptions = (uiOptionsUpdate) => {\n    const { uiSchema = {}, key } = this.props.node;\n    const uiOptions = uiSchema['ui:options'] || {};\n    const newUiOptions = { ...uiOptions, ...uiOptionsUpdate };\n    for (const i in newUiOptions) {\n      if (newUiOptions[i] !== undefined) {\n        this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': { ...uiOptions, ...newUiOptions } } });\n        return;\n      }\n    }\n    this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': undefined } });\n  };\n\n  render() {\n    const { node, updateNode } = this.props;\n    if (!(node && node.schema)) return null;\n    const filteredEditors = editorList.filter((a) => a.filter(node));\n    return (\n      <>\n        <Tabs defaultActiveKey={filteredEditors[0].key} type=\"card\">\n          {filteredEditors.map((Editor) => (\n            <TabPane tab={Editor.name} key={Editor.key}>\n              <div style={{ margin: '0px 16px' }}>\n                <Editor\n                  key={node.key}\n                  node={node}\n                  updateNode={(nodeUpdate) => updateNode(node.key, nodeUpdate)}\n                  updateSchema={(schemaUpdate) => updateNode(node.key, { schema: { ...node.schema, ...schemaUpdate } })}\n                  updateUiSchema={(uiSchemaUpdate) =>\n                    updateNode(node.key, { uiSchema: { ...node.uiSchema, ...uiSchemaUpdate } })\n                  }\n                  updateUiOptions={this.updateUiOptions}\n                />\n              </div>\n            </TabPane>\n          ))}\n        </Tabs>\n        <p>Click on the selected form in the left sidebar to push this drawer in.</p>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    node: activeNodeKey && getNode(present, activeNodeKey),\n  }),\n  (dispatch) => ({\n    updateNode: (target, nodeUpdate) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target,\n          nodeUpdate,\n        },\n      }),\n  })\n)(Editor);\n","import React from 'react';\nimport {instance as api} from \"../../axios\";\nimport { connect } from 'react-redux';\nimport { Button, Tooltip, Modal, notification, List } from 'antd';\nimport { FolderOpenOutlined, SaveOutlined, UndoOutlined, RedoOutlined } from '@ant-design/icons';\nimport { ActionTypes } from 'redux-undo';\nimport './index.css';\n\nconst buttonStyle = { marginLeft: 8 };\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      templates: [],\n      categories: [],\n      templateId: null,\n      categoryId: null\n    };\n  }\n\n  async componentDidMount() {\n    const { data: templates } = await api.get(\n      \"/templates\"\n    );\n    const templateProperties = {\n      categoryId: this.props.category,\n      templateId: this.props.template\n    }\n    this.setState({ templates, ...templateProperties });\n    if (templateProperties.templateId !== null)\n      this.renderThisTemplate(templateProperties.templateId)\n    else {\n      let schema = {\n        type: \"object\",\n        properties: {\n          name: {\n            type: \"string\",\n            title: \"Name\"\n          },\n          image: {\n            type: \"string\",\n            title: \"Image\"\n          },\n          description: {\n            type: \"string\",\n            title: \"Description\"\n          },\n          price: {\n            type: \"string\",\n            title: \"Price\"\n          }\n        }\n      },\n      uiSchema = {}\n      const { data: category } = await api.get('/categories/'+this.state.categoryId)\n      console.log(category)\n      // Will receive category_name to add in name of template\n      let name=`${category.name}-template`;\n      this.props.setTree({name, schema, uiSchema});\n    }\n  }\n\n  newTemplate = () => {\n    this.setState({ templateId: null })\n  }\n\n  save = async () => {\n    const {name , schema, uiSchema } = this.props.tree.present[0];\n    const body = {\n        name,\n        category_id: this.state.categoryId,\n        formSchema: JSON.stringify(schema),\n        uiSchema: (uiSchema !== undefined) ? JSON.stringify(uiSchema) : \"\",\n      };\n    try {\n      let resp;\n      console.log(body)\n      if(this.state.templateId === null) {\n        resp = await api.post(\n          \"/templates\",\n          body\n        );\n      } else {\n        resp = await api.patch(\n          \"/templates\",\n          {...body, id: this.state.templateId}\n        );\n      }\n      const response = resp.status;\n      if (response === 201) {\n        notification.open({\n          message: 'Template Created',\n          description:\n          'Your new template was added to the database.'\n        });\n      } else if (response === 200) {\n        notification.open({\n          message: 'Template Update',\n          description:\n            'Your new template was updated in the database.'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      notification.open({\n        message: 'Sorry, Template could not be created.',\n        description: 'There was some error in the backend'\n      })\n    }\n  };\n\n  showTemplates = async () => {\n    let { data: categories } = await api.get(\n      \"/categories\"\n    );\n    categories = categories.filter(category => category !== null && category.template_id !== null)\n    this.setState({\n      visible: true,\n      categories\n    });\n  };\n\n  handleOk = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  renderThisTemplate = async (_id) => {\n    let [thisTemplate] = this.state.templates.filter(template => template._id === _id)\n    let schema = JSON.parse(thisTemplate.formSchema), uiSchema = {}, name = thisTemplate.name\n    if (thisTemplate.uiSchema !== \"\") {\n      uiSchema = JSON.parse(thisTemplate.uiSchema)\n    }\n    this.props.setTree({ name, schema, uiSchema });\n    this.setState({ visible: false, existingTemplate: true, templateId: thisTemplate._id })\n  }\n\n  render() {\n    const { tree, undo, redo } = this.props;\n    const { past, future } = tree;\n    return (\n      <span>\n        {/* <Tooltip title=\"New\" onClick={this.newTemplate}>\n          <Button\n            style={buttonStyle}\n            onClick={newForm}\n            icon={<FileAddOutlined />}\n          />\n        </Tooltip> */}\n        <Tooltip title=\"Open\">  \n          <Button\n            style={buttonStyle}\n            onClick={() => this.showTemplates()}\n            icon={<FolderOpenOutlined />}\n          >\n            Open\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Save\">\n          <Button\n            style={buttonStyle}\n            onClick={() => {\n              Modal.confirm({\n                title: 'Confirm',\n                content: `Are you sure you want to ${this.state.templateId === null ? 'save' : 'update'} this Template?`,\n                okText: 'OK',\n                cancelText: 'Cancel',\n                onOk: () => this.save()\n              });\n            }}\n            icon={<SaveOutlined />}\n          >\n            {this.state.templateId === null ? 'Save' : 'Update'}\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Undo\">\n          <Button\n            style={buttonStyle}\n            onClick={undo}\n            disabled={!past.length}\n            icon={<UndoOutlined />}\n          >\n            Undo\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Redo\">\n          <Button\n            style={buttonStyle}\n            onClick={redo}\n            disabled={!future.length}\n            icon={<RedoOutlined />}\n          >\n            Redo\n          </Button>\n        </Tooltip>\n        <Modal\n          title=\"View Existing Templates by Category\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleOk}\n          footer={[\n            <Button key=\"back\" onClick={this.handleOk}>\n              Okay\n            </Button>,\n          ]}\n        >\n          <List\n            bordered\n            dataSource={this.state.categories}\n            renderItem={item => (\n              <List.Item \n                className=\"template-list\" \n                onClick={() => this.renderThisTemplate(item.template_id)}\n              >\n                {item.name}\n              </List.Item>\n            )}\n          />\n        </Modal>\n      </span>\n    );\n  }\n}\n\nexport default connect(\n    ({ tree, settings }) => ({ tree, settings }),\n    (dispatch) => ({\n        newForm: () =>\n            dispatch({\n                type: 'TREE_CLEAR',\n            }),\n        setTree: (payload) =>\n            dispatch({\n                type: 'TREE_SET_TREE',\n                payload,\n            }),\n        undo: () => dispatch({ type: ActionTypes.UNDO }),\n        redo: () => dispatch({ type: ActionTypes.REDO }),\n        updateSettings: (subViews) =>\n        // This function was needed before when a select search bar to toggle subviews of \n        // schema, ui-schema and formData was used in this component. \n            dispatch({\n                type: 'SETTINGS_UPDATE',\n                payload: { subViews },\n            }),\n    })\n)(Toolbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Slider, Switch, Button, List, Modal } from 'antd';\nconst { confirm } = Modal;\n\nconst tipFormatter = ((flag = false) => (number) => {\n    flag = !flag;\n    return flag ? number : window.innerWidth - number;\n})();\n\nclass Settings extends React.Component {\n    siderWidth() {\n        const { leftSiderWidth, rightSiderWidth } = this.props.settings;\n        return {\n            key: 'sider-width',\n            title: 'Sider Width',\n            description: (\n                <Slider\n                    included\n                    min={0}\n                    max={window.innerWidth}\n                    tipFormatter={tipFormatter}\n                    range\n                    value={[leftSiderWidth, window.innerWidth - rightSiderWidth]}\n                    onChange={([left, right]) => {\n                        this.props.updateSettings({\n                            leftSiderWidth: left > 200 ? left : 200,\n                            rightSiderWidth: window.innerWidth - right,\n                        });\n                    }}\n                />\n            ),\n        };\n    }\n\n    formWidth() {\n        return {\n            key: 'form-item',\n            title: 'Form Width',\n            description: (\n                <Slider\n                    min={0}\n                    max={window.innerWidth}\n                    value={this.props.settings.formWidth}\n                    onChange={(value) => {\n                        this.props.updateSettings({\n                            formWidth: value,\n                        });\n                    }}\n                />\n            ),\n        };\n    }\n\n    inlineMode() {\n        return {\n            key: 'inline-mode',\n            title: 'Inline Mode',\n            actions: [\n                <Switch\n                    onChange={(v) => this.props.updateSettings({ isInlineMode: v })}\n                    checked={this.props.settings.isInlineMode}\n                />,\n            ],\n        };\n    }\n\n    liveValidate() {\n        return {\n            key: 'live-validate',\n            title: 'Live Validate',\n            actions: [\n                <Switch\n                    onChange={(v) => this.props.updateSettings({ isLiveValidate: v })}\n                    checked={this.props.settings.isLiveValidate}\n                />,\n            ],\n        };\n    }\n\n    menu() {\n        const { setTree, rootNode, setMenu, menu } = this.props;\n        return {\n            key: 'menu',\n            title: 'Menu',\n            description: [\n                <Button key=\"edit\" onClick={() => setTree(menu)}>\n                    Customize\n        </Button>,\n                <Button key=\"set\" onClick={() => setMenu(rootNode)}>\n                    Apply Change\n        </Button>,\n            ],\n        };\n    }\n\n    reset() {\n        return {\n            key: 'reset',\n            description: (\n                <Button\n                    type=\"danger\"\n                    sytle={{ width: '100%' }}\n                    key=\"edit\"\n                    onClick={() => {\n                        confirm({\n                            title: 'Reset Form Buiilder?',\n                            content: 'Removing persistent data from local storage.\\n All settings and unsaved form will be lost.',\n                            okText: 'Continue',\n                            okType: 'danger',\n                            closable: true,\n                            maskClosable: true,\n                            onOk() {\n                                window.localStorage.removeItem('persist:react-jsonschema-formbuilder');\n                                window.location.reload();\n                            },\n                        });\n                    }}\n                >\n                    Reset Form Builder\n                </Button>\n            ),\n        };\n    }\n\n    listItems() {\n        return [this.siderWidth(), this.formWidth(), this.inlineMode(), this.liveValidate(), this.menu(), this.reset()];\n    }\n\n    renderItem(a) {\n        const {\n            Item,\n            Item: { Meta },\n        } = List;\n        return (\n            <Item key={a.key} actions={a.actions}>\n                <Meta title={a.title} description={a.description} />\n            </Item>\n        );\n    }\n\n    render() {\n        return <List itemLayout=\"horizontal\" dataSource={this.listItems()} renderItem={this.renderItem} />;\n    }\n}\n\nexport default connect(\n    ({\n        settings,\n        tree: {\n            present: [rootNode],\n        },\n        menu,\n    }) => ({ settings, rootNode, menu }),\n    (dispatch) => ({\n        updateSettings: (payload) =>\n            dispatch({\n                type: 'SETTINGS_UPDATE',\n                payload,\n            }),\n        setTree: ({ schema, uiSchema }) =>\n            dispatch({\n                type: 'TREE_SET_TREE',\n                payload: {\n                    name: 'menu',\n                    schema,\n                    uiSchema,\n                },\n            }),\n        setMenu: ({ schema, uiSchema }) =>\n            dispatch({\n                type: 'MENU_SET',\n                payload: {\n                    schema,\n                    uiSchema,\n                },\n            }),\n    })\n)(Settings);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './css';\nimport { Layout, Tabs, Card } from 'antd';\nimport Tree from './Tree';\nimport { FormView, SchemaView, UiSchemaView } from \"./views\";\nimport NodeEditor from './Editor';\nimport Toolbar from './Toolbar';\nimport Settings from './Settings';\nconst { Header, Sider, Content } = Layout;\nconst { TabPane } = Tabs;\n\nclass NewTemplate extends Component {\n    state = {\n        collapsed: false,\n        categoryId: null,\n        templateId: null\n    };\n    componentWillMount() {\n      this.props.setFormData({ formData: {} })\n      this.props.defaultMenu();\n    }\n    componentDidMount () {\n      // To remove the inline icons (Delete, etc) which are present in Template page\n      this.props.updateSettings({ isInlineMode: true })\n      const query = new URLSearchParams(this.props.location.search)\n      let categoryId = query.get('category'), templateId = query.get('template')\n      this.setState({categoryId, templateId})\n    }\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    render() {\n        const { settings } = this.props;\n        return (\n            <Layout>\n                <Sider\n                    trigger={null}\n                    collapsible\n                    collapsed={this.state.collapsed}\n                    width={settings.leftSiderWidth}\n                    style={{\n                        background: '#fff',\n                        padding: 0,\n                        overflow: 'auto',\n                        boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 0,\n                    }}\n                >\n                    <Tabs defaultActiveKey=\"0\" size=\"small\" type=\"card\">\n                        <TabPane tab=\"Editor\" style={{ padding: '8px' }} key=\"0\">\n                            <Tree />\n                        </TabPane>\n                        <TabPane tab=\"Settings\" style={{ padding: '8px' }} key=\"1\">\n                            <Settings />\n                        </TabPane>\n                    </Tabs>\n                </Sider>\n                <Layout style={{ marginLeft: settings.leftSiderWidth }}>\n                    <Header style={{ background: '#fff', padding: 0 }}>\n                        <Toolbar category={this.state.categoryId} template={this.state.templateId}/>\n                    </Header>\n                    <Content style={{ minHeight: 280, padding: '12px 8px' }}>\n                        <Card\n                            bordered={false}\n                            style={{ width: settings.formWidth, margin: '12px 8px', display: 'inline-block', verticalAlign: 'top' }}\n                        >\n                            <FormView />\n                        </Card>\n                        {/* {(settings.subViews || []).map((a) => {\n                            const style = { margin: '12px 8px', width: 400, display: 'inline-block', verticalAlign: 'top' };\n                            switch (a) {\n                              case \"schema\":\n                                return (\n                                  <Card\n                                    key=\"schema\"\n                                    title=\"Schema\"\n                                    style={style}\n                                  >\n                                    <SchemaView />\n                                  </Card>\n                                );\n                              case \"uiSchema\":\n                                return (\n                                  <Card\n                                    key=\"uischema\"\n                                    title=\"UiSchema\"\n                                    style={style}\n                                  >\n                                    <UiSchemaView />\n                                  </Card>\n                                );\n                              default:\n                                return <div key=\"null\" />;\n                            }\n                        })} */}\n                    </Content>\n                </Layout>\n              <Sider\n                width={this.props.activeNodeKey ? settings.rightSiderWidth : 0}\n                style={{\n                  overflow: 'auto',\n                  background: '#fff',\n                  boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n                  position: 'fixed',\n                  height: '100vh',\n                  right: 0,\n                }}\n              >\n                <NodeEditor />\n              </Sider>\n            </Layout>\n        );\n    }\n}\n\nexport default connect(({ activeNodeKey, settings }) => ({\n  activeNodeKey,\n  settings,\n}), (dispatch) => ({\n  setFormData: ({ formData }) =>\n    dispatch({\n      type: 'FORM_DATA_SET',\n      payload: formData,\n    }),\n    updateSettings: (payload) =>\n      dispatch({\n        type: 'SETTINGS_UPDATE',\n        payload,\n      }),\n    defaultMenu: () =>\n      dispatch({\n        type: 'MENU_DEFAULT',\n        payload: {},\n      }),\n}))(NewTemplate);\n\n// export default NewTemplate;","import React, { useEffect, useState } from 'react';\nimport { Table, Button, notification, Modal, Skeleton } from 'antd';\n\nimport { instance as api } from '../../../axios';\nimport './list.css';\n\nconst List = () => {\n\n    const [data, setData] = useState()\n    const [tableColumns, setColumns] = useState()\n    const [fetching, setFetch] = useState(true)\n\n    useEffect(() => {\n        (async () => {\n            try {\n                let { data: templates } = await api.get('/templates')\n                templates = templates.filter(el => el.category_id !== null);\n                templates = templates.map((el) => {\n                    return {\n                        name: el.name,\n                        category: el.category_id.name,\n                        key: el._id,\n                        category_id: el.category_id._id\n                    };\n                });\n                setData(templates)\n                const columns = [\n                    {\n                        title: 'Template Name',\n                        dataIndex: 'name',\n                        key: 'name'\n                    },\n                    {\n                        title: 'Category',\n                        dataIndex: 'category',\n                        key: 'category'\n                    },\n                    {\n                        title: 'View/Edit',\n                        key: 'view/edit',\n                        fixed: 'right',\n                        render: (item) => {\n                            return (<Button\n                                href={`/template?category=${item.category_id}&template=${item.key}`}\n                            >\n                                View/Edit\n                            </Button>)\n                        }\n                    }\n                ]\n                setColumns(columns);\n                setFetch(false);\n            } catch (e) {\n                console.log(e);\n                notification['error']({\n                    message: 'An Error Occurred',\n                    description: 'There was an error while displaying products.'\n                })\n            }\n        })();\n    }, []);\n    return (\n        <div className=\"container main-container\">\n            <h3>Listing all Templates</h3>\n            {fetching === true ? <Skeleton active /> : <Table dataSource={data} columns={tableColumns} />}\n        </div>\n    )\n}\n\nexport default List;","import React, { Component } from 'react';\nimport { Table, Button, notification, Spin, Space } from 'antd';\nimport { connect } from 'react-redux';\nimport { instance as api } from '../../../axios';\nimport './ProductList.css';\n\nclass ProductList extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            templateId: null,\n            categoryId: null,\n            dataFetching: true,\n            products: {\n                data: [],\n                names: []\n            },\n            columns: []\n        }\n    }\n\n    async componentDidMount () {\n    try {\n        const query = new URLSearchParams(this.props.location.search)\n        let categoryId = query.get('category');\n        let products = []\n        if (categoryId !== null){\n            this.setState({categoryId})\n            let { data } = await api.get(\"/product/category/\"+categoryId)\n            products = data\n            if(products.length !== 0)\n                this.setState({templateId: products[0].template})\n        } else {\n            let { data } = await api.get(\"/product/\")\n            console.log(data)\n            products = data\n        }\n        // For earlier products that didn't have any data\n        products = products.filter(prod => prod.data !== \"{}\")\n        const data = products.map(product => {\n            return JSON.parse(product.data);\n        })\n        const names = products.map(product => {\n            if(product.name === undefined) {\n                // For earlier products that didn't have manuf, model defined.\n                product.name = '--Not defined--'\n            }\n            let updates = product.meta.update;\n            return {\n                name: product.name,\n                image:product.image,\n                description:product.description,\n                price:product.price, \n                data: JSON.parse(product.data), \n                created_at: product.meta.created_at,\n                updated_at: updates.length > 0 ? updates.slice(updates.length-1)[0].updated_at : '-',\n                template: product.template,\n                category: product.category,\n                id: product._id,\n                key: product._id\n            };\n        })\n        const columns = [\n            {\n                title: 'Name', \n                dataIndex: 'name', \n                key: 'name',\n                filters: names.map(prod => ({text: prod.name, value: prod.name}))\n            }, {\n                title: 'Created At',\n                dataIndex: 'created_at',\n                key: 'created_at',\n                defaultSortOrder: 'descend',\n                sorter: (a, b) => new Date(a.created_at) - new Date(b.created_at),\n            }, {\n                title: 'Update At',\n                dataIndex: 'updated_at',\n                key: 'updated_at',\n                sorter: (a, b) => new Date(a.updated_at) - new Date(b.updated_at),\n            }\n        ]\n        columns.push({\n            title: 'Add a product using existing product',\n            key: 'name',\n            width: 200,\n            render: (item) => {\n                return (<Button onClick={async (e) => {\n                    let a = await this.props.setFormData({ formData: item.data });\n                    // Due to asynchronous behaviour, the above line does not work without the setTimeout \n                    if (typeof a === 'object') {\n                        setTimeout(() => {\n                            let path = `addproduct?category=${item.category._id}&template=${item.template._id}`;\n                            window.location.href = path;\n                        }, 1000)\n                    }\n                }}>Make a Copy</Button>)\n            },\n        }, {\n            title: 'Make changes to existing product',\n            key: 'name',\n            width: 200,\n            render: (item) => {\n                return (<Button\n                    onClick={async (e) => {\n                    let a = await this.props.setFormData({ formData: item.data })\n                    // Due to asynchronous behaviour, the above line does not work without the setTimeout\n                    if (typeof a === 'object') {\n                        setTimeout(() => {\n                            let path = `addproduct?category=${item.category._id}&template=${item.template._id}&product=${item.id}`\n                            window.location.href = path;\n                        }, 1000)\n                    }\n                }}>Edit</Button>)\n            },\n        }, {\n            title: 'Delete Product',\n            key: 'name',\n            fixed: 'right',\n            width: 100,\n            render: (item) => {\n                return (<Button onClick={async (e) => {\n                    const resp = await api.delete(`/product/${item.category._id}/${item.id}`)\n                    if(resp.status === 204) {\n                        notification['success']({\n                            message: 'Product Deleted',\n                            description: 'This product was deleted from the database.'\n                        })\n                    } else {\n                        notification['error']({\n                            message: 'An Error Occurred',\n                            description: 'There was an error while deleting this product.'\n                        })\n                    }\n                }}>Remove Product</Button>\n                )\n            }\n        })\n        this.setState({products: {data, names}, columns, dataFetching: false})\n    } catch (e) {\n        console.log(e);\n        notification['error']({\n            message: 'An Error Occurred',\n            description: 'There was an error while displaying products.'\n        })\n    }\n    }\n\n    render() {\n        return (\n        <div className=\"container main-container\">\n            <h3>{this.state.templateId ? 'Listing Products based on Template' : 'Listing all Products'}</h3>\n        <div style={{ display: 'flex' }}>\n                    {!this.state.dataFetching ? <Table dataSource={this.state.products.names} columns={this.state.columns} /> : <Space size=\"middle\"><Spin /></Space>}\n        </div>\n        {this.state.categoryId && this.state.templateId ? (\n            <Button\n                style={{marginLeft: '45%'}}\n                href={`/addproduct?template=${this.state.templateId}&category=${this.state.categoryId}`}\n            >\n            Add Product\n            </Button>\n        ): null}\n        </div>\n        )\n    }\n}\n\nexport default connect(({\n    formData\n}) => ({\n    formData\n}), (dispatch) => ({\n    setFormData: ({ formData }) =>\n        dispatch({\n            type: 'FORM_DATA_SET',\n            payload: formData,\n        }),\n}))(ProductList);","import { schema2tree, schema2node, removeNode, addNode, moveNode, updateNode, getNodeByRjsfId } from './core';\nimport defaultSettings from './default/settings';\nimport defaultMenuSchema from './default/menu';\nimport defaultOptions from './default/options';\nimport undoable from 'redux-undo';\nimport { includeAction } from 'redux-undo';\nimport { combineReducers } from 'redux';\n\nconst defaultMenu = schema2node(['menu'], defaultMenuSchema.schema, defaultMenuSchema.uiSchema);\nconst DEFAULT_TREE_NAME = 'root';\n\nconst emptyTree = schema2tree(DEFAULT_TREE_NAME, { type: 'object', properties: {\n  accuracy: {\n    type: 'string',\n    title: 'Accuracy'\n  },\n  limit: {\n    type: 'string',\n    title: 'Limit'\n  }\n} });\n\nfunction tree(state = emptyTree, action) {\n  switch (action.type) {\n    case 'TREE_CLEAR':\n      return emptyTree;\n    case 'TREE_SET_TREE': {\n      const { name, schema, uiSchema } = action.payload;\n      return schema2tree(\n        name || (state[0] && state[0].name) || DEFAULT_TREE_NAME,\n        schema || state[0].schema,\n        uiSchema || state[0].uiSchema\n      );\n    }\n    case 'TREE_ADD_NODE': {\n      const { targetNodeKey, position, node2add } = action.payload;\n      return addNode(state, targetNodeKey, position, node2add);\n    }\n    case 'TREE_REMOVE_NODE':\n      const newState = removeNode(state, action.payload);\n      return newState.length ? newState : emptyTree;\n    case 'TREE_MOVE_NODE': {\n      const { source, target, position } = action.payload;\n      return moveNode(state, source, target, position);\n    }\n    case 'TREE_UPDATE_NODE': {\n      const { target, nodeUpdate } = action.payload;\n      const newState = updateNode(state, target, nodeUpdate);\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction activeNodeKey(state = null, action) {\n  switch (action.type) {\n    case 'ACTIVE_NODE_KEY_SET':\n      return action.payload || null;\n    case 'TREE_UPDATE_NODE':\n      const { target, nodeUpdate } = action.payload;\n      if (state === target && nodeUpdate.name) {\n        const path = state.split('.');\n        if (path[path.length - 1] !== nodeUpdate.name) {\n          return path.slice(0, -1).join('.') + '.' + nodeUpdate.name;\n        }\n      }\n      return state;\n    case 'TREE_SET_TREE':\n    case 'TREE_CLEAR':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction formData(state = {}, action) {\n  switch (action.type) {\n    case 'FORM_DATA_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction settings(state = defaultSettings, action) {\n  switch (action.type) {\n    case 'SETTINGS_UPDATE':\n      return Object.assign({}, state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction menu(state = defaultMenu, action) {\n  switch (action.type) {\n    case 'MENU_SET': {\n      const { schema, uiSchema } = action.payload;\n      return schema2node(['menu'], schema, uiSchema);\n    }\n    case 'MENU_DEFAULT': {\n      return defaultMenu;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction menuOpenKeys(state = [], action) {\n  switch (action.type) {\n    case 'MENU_OPEN_KEYS_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction options(state = defaultOptions, action) {\n  switch (action.type) {\n    case 'SET_OPTIONS':\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nfunction removeUnnecessaryHistory(reducer) {\n  return (state, action) => {\n    let newState = reducer(state, action);\n    delete newState.history;\n    return newState;\n  };\n}\n\nvar reducer = combineReducers({\n  tree: removeUnnecessaryHistory(\n    undoable(tree, {\n      filter: includeAction([\n        'TREE_UPDATE_NODE',\n        'TREE_SET_TREE',\n        'TREE_CLEAR',\n        'TREE_ADD_NODE',\n        'TREE_REMOVE_NODE',\n        'TREE_MOVE_NODE',\n      ]),\n    })\n  ),\n  activeNodeKey,\n  settings,\n  menu,\n  formData,\n  menuOpenKeys,\n  options,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case 'TREE_REMOVE_NODE_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'TREE_REMOVE_NODE',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'TREE_UPDATE_NODE_BY_RJSF_ID': {\n      const { rjsfId } = action.payload;\n      const target = getNodeByRjsfId(state.tree.present, rjsfId);\n      if (!target) return state;\n      action = {\n        type: 'TREE_UPDATE_NODE',\n        payload: { ...action.payload, target: target.key },\n      };\n      break;\n    }\n    default:\n      break;\n  }\n  return reducer(state, action);\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nvar persistConfig = {\n  key: 'react-jsonschema-formbuilder',\n  storage,\n  stateReconciler: hardSet,\n  throttle: 15,\n};\n\nvar { schema2tree } = require('./core');\n\nvar form = {\n  schema: {\n    title: 'Template Form',\n    description: 'A simple form example.',\n    type: 'object',\n    required: ['name', 'image'],\n    properties: {\n      name: {\n        type: 'string',\n        title: 'Product Name',\n      },\n      image: {\n        type: 'string',\n        title: 'Image Link',\n      },\n      price: {\n        type: 'integer',\n        title: 'Price',\n      },\n      description: {\n        type: 'string',\n        title: 'Description',\n      },\n     \n    },\n  },\n  uiSchema: {\n    name: {\n      'ui:emptyValue': '',\n    },\n    image: {\n      'ui:emptyvalue':'',\n    },\n    price: {\n      'ui:emptyvalue':'',\n    },\n    description: {\n      'ui:emptyvalue':'',\n    },\n    date: {\n      'ui:widget': 'alt-datetime',\n    },\n   \n  },\n};\n\nvar initTree = schema2tree('root', form.schema, form.uiSchema);\n\nvar persistedReducer = persistReducer(persistConfig, reducer);\n\nvar store = createStore(persistedReducer, {\n  tree: {\n    past: [],\n    present: initTree,\n    future: [],\n  },\n});\n\nvar persistor = persistStore(store);\n\nexport { store, persistor };\nexport default { store, persistor };\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport \"./index.css\";\nimport Category from './items/Categories/Categories';\nimport Products from './items/Products';\nimport NewTemplate from './items/ProductTemplates/Templates.jsx';\nimport List from './items/ProductTemplates/List';\nimport ProductList from './items/Products/List/ProductList';\n\nimport { Provider, connect } from \"react-redux\";\nimport { store, persistor } from \"./items/ProductTemplates/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Menu, Layout } from \"antd\";\nimport {\n  ContainerOutlined,\n  UnorderedListOutlined,\n  DatabaseFilled,\n} from \"@ant-design/icons\";\n\nconst { Content } = Layout;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"category\",\n    };\n  }\n\n  componentWillMount () {\n    const pathname = window.location.pathname,\n      secondslash = pathname.indexOf('/', 1) > 0 ? pathname.indexOf('/', 1) + 1 : -1; \n    let location;\n    if (secondslash === -1) {\n      location = pathname.slice(1);\n    } else {\n      location = pathname.slice(1, secondslash);\n    }\n    location = location === '' ? 'category' : location;\n    location = location === 'addproduct' ? 'product' : location;\n    location = location === 'viewtemplates' ? 'template' : location;\n    this.setState({ current: location })\n  }\n\n  handleClick = (e) => {\n    console.log(\"click \", e);\n    this.setState({ current: e.key });\n  };\n\n  render() {\n    const { current } = this.state;\n    return (\n      <Router>\n        <div className=\"App\">\n          <Menu\n            theme=\"dark\"\n            onClick={this.handleClick}\n            selectedKeys={[current]}\n            mode=\"horizontal\"\n          >\n            <Menu.Item key=\"category\" icon={<UnorderedListOutlined />}>\n              <Link to=\"/category\">Categories</Link>\n            </Menu.Item>\n            <Menu.Item key=\"template\" icon={<ContainerOutlined />}>\n              <Link to=\"/viewtemplates\">Product Templates</Link>\n            </Menu.Item>\n            <Menu.Item key=\"product\" icon={<DatabaseFilled />}>\n              <Link to=\"/product\">Products</Link>\n            </Menu.Item>\n          </Menu>\n          <Layout>\n            <Content>\n              <Route path={[\"/category\", \"/\"]} exact>\n                <Category />\n              </Route>\n              <Route path=\"/template\" component={NewTemplate} />\n              <Route path=\"/viewtemplates\" component={List} />\n              <Route path=\"/product\" component={ProductList} />\n              <Route path=\"/addproduct/\" component={Products} />\n            </Content>\n          </Layout>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst AppContainer = connect(({ activeNodeKey, settings }) => ({\n  activeNodeKey,\n  settings,\n}))(App);\nexport default () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <AppContainer />\n    </PersistGate>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { notification } from 'antd';\n\nfunction isEmptyObject(obj) {\n  if (!obj) return true;\n  for (const i in obj) {\n    if (obj[i] !== undefined) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isLeaf(node) {\n  return node.isLeaf;\n}\n\nfunction schema2tree(name, schema, uiSchema) {\n  return [schema2node([name], schema, uiSchema)];\n}\n\nlet forceChange = ((FORCE_CHANGE_KEY) => (obj) => {\n  // workaround for forcing rjsf to rerender because the schema still deep equal to after reordering properties.\n  if (FORCE_CHANGE_KEY in obj) {\n    delete obj[FORCE_CHANGE_KEY];\n  } else {\n    obj[FORCE_CHANGE_KEY] = undefined;\n  }\n})(`__${Date.now()}__`);\n\ntry {\n  if (process.env.NODE_ENV === 'test') {\n    forceChange = (a) => a;\n  }\n} catch (e) {}\n\nfunction schema2node(path, schema, uiSchema) {\n  if (!schema) return null;\n  const key = path.join('.');\n  const name = path[path.length - 1];\n  if (schema.type === 'object') {\n    let children = [];\n    for (const i in schema.properties) {\n      const nextPath = [...path, i];\n      const child = schema2node(nextPath, schema.properties[i], uiSchema && uiSchema[i]);\n      if (child) children.push(child);\n    }\n    return {\n      key,\n      name,\n      //path,\n      schema,\n      uiSchema,\n      children,\n    };\n  }\n  if (schema.type === 'array') {\n    let children;\n    if (Array.isArray(schema.items)) {\n      const nextPath = [...path, '[items]'];\n      children = [\n        {\n          key: key + '.[items]',\n          name: '[items]',\n          //path: nextPath,\n          children: schema.items.map((a, i) =>\n            schema2node([...nextPath, i.toString()], schema.items[i], uiSchema && uiSchema.items && uiSchema.items[i])\n          ),\n        },\n      ];\n      if ('additionalItems' in schema) {\n        const nextPath = [...path, 'additionalItems'];\n        children.push(schema2node(nextPath, schema.additionalItems, uiSchema && uiSchema.additionalItems));\n      }\n    } else {\n      children = [schema2node([...path, 'items'], schema.items, uiSchema && uiSchema.items)];\n    }\n\n    return {\n      key,\n      name,\n      schema,\n      uiSchema,\n      children,\n      //path,\n    };\n  }\n  return {\n    key,\n    name,\n    //path,\n    schema,\n    uiSchema,\n    isLeaf: true,\n  };\n}\n\nfunction getNodeByPath(tree, path) {\n  let node;\n  let children = tree;\n  for (const i of path) {\n    node = children.find((a) => a.name === i);\n    if (!node) return null;\n    children = node.children;\n  }\n  return node;\n}\n\nfunction getNode(tree, key) {\n  return getNodeByPath(tree, key.split('.'));\n}\n\nfunction updateParentKey(tree, parentKey) {\n  return tree.map((node) => {\n    const key = parentKey + '.' + node.name;\n    return Object.assign(\n      {},\n      node,\n      {\n        key: parentKey + '.' + node.name,\n      },\n      node.children && {\n        children: updateParentKey(node.children, key),\n      }\n    );\n  });\n}\n\nfunction getNodeParentKey(node) {\n  return node.key.substring(0, node.key.length - node.name.length - 1);\n}\n\nfunction updateNodeParentKeyAndName(node, parentKey, name) {\n  if (!name) {\n    name = node.name;\n  }\n  if (!parentKey) {\n    parentKey = getNodeParentKey(node);\n  }\n  const newKey = parentKey ? parentKey + '.' + name : name;\n  if (node.key === newKey) return node;\n  node.schema.title = name[0].toUpperCase() + name.slice(1, name.length);\n  return Object.assign(\n    {},\n    node,\n    {\n      name,\n      key: newKey,\n    },\n    node.children && {\n      children: updateParentKey(node.children, newKey),\n    }\n  );\n}\n\nfunction updateSchema(node, newChildren) {\n  let newSchema = Object.assign({}, node.schema);\n  if (node.schema.type === 'object') {\n    let newProperties = {};\n    for (const child of newChildren) {\n      newProperties[child.name] = child.schema;\n    }\n    newSchema.properties = newProperties;\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      newSchema = Object.assign({}, node.schema);\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          newSchema.items = newItemsNode.children.map((a) => a.schema);\n        } else {\n          delete newSchema.items;\n        }\n      } else {\n        // additionalItems field updated\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newSchema.additionalItems = newAdditionalItemsNode.schema;\n        } else {\n          delete newSchema.additionalItems;\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode) {\n        newSchema.items = newItemsNode.schema;\n      } else {\n        delete newSchema.items;\n      }\n    }\n  }\n  return newSchema;\n}\n\nfunction updateUiSchema(node, newChildren) {\n  let newUiSchema = {};\n  for (const i in node.uiSchema) {\n    if (i.startsWith('ui:') || i === 'classNames') {\n      newUiSchema[i] = node.uiSchema[i];\n    }\n  }\n  if (node.schema.type === 'object') {\n    for (const child of newChildren) {\n      if (child.uiSchema) {\n        newUiSchema[child.name] = child.uiSchema;\n      }\n    }\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          let empty = true;\n          newUiSchema.items = newItemsNode.children.map((a) => {\n            empty = empty && !a.uiSchema;\n            return a.uiSchema || null;\n          });\n          if (empty) {\n            delete newUiSchema.items;\n          }\n        }\n        if ('additionalItems' in node.uiSchema) {\n          newUiSchema.additionalItems = node.uiSchema.additionalItems;\n        }\n      } else {\n        // additionalItems field updated\n        if ('items' in node.uiSchema) {\n          newUiSchema.items = node.uiSchema.items;\n        }\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newUiSchema.additionalItems = newItemsNode.children.map((a) => a.schema);\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode && newItemsNode.uiSchema) {\n        newUiSchema.items = newItemsNode.uiSchema;\n      }\n    }\n  }\n  return newUiSchema;\n}\n\nfunction updateNodeByNewChildren(oldNode, newChildren) {\n  if (!oldNode.schema) {\n    return { ...oldNode, children: newChildren };\n  }\n  const schema = updateSchema(oldNode, newChildren);\n  const uiSchema = updateUiSchema(oldNode, newChildren);\n  const newNode = Object.assign({}, oldNode, {\n    schema,\n    uiSchema,\n    children: newChildren,\n  });\n  if (isEmptyObject(uiSchema)) {\n    delete newNode.uiSchema;\n  }\n  return newNode;\n}\n\nfunction updateArrayIndex(tree) {\n  return tree.map((node, i) =>\n    node.name === i.toString() ? node : updateNodeParentKeyAndName(node, null, i.toString())\n  );\n}\n\nfunction _removeNodeByPath(tree, [head, ...tail], arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let removed = false;\n  let newTree = [];\n  if (!tail.length) {\n    let newTree = tree.filter((a) => a.name !== head);\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return newTree.length === tree.length ? tree : newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    const newChildren = _removeNodeByPath(node.children, tail, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    removed = true;\n    let newNode = updateNodeByNewChildren(node, newChildren);\n    let newSchema = null;\n    if (tail.length === 1 && (newSchema = newNode.schema) && newSchema.required) {\n      const newRequired = newSchema.required.filter((a) => a !== tail[0]);\n      if (newRequired.length !== newSchema.required.length) {\n        newNode.schema = Object.assign({}, newSchema, {\n          required: newRequired.length ? newRequired : undefined,\n        });\n      }\n    }\n    newTree.push(newNode);\n  }\n  return removed ? newTree : tree;\n}\n\nfunction removeNodeByPath(tree, path) {\n  return _removeNodeByPath(tree, path);\n}\n\nfunction removeNode(tree, key) {\n  if (key === `${tree[0].key}.name` || key === `${tree[0].key}.image`) {\n    // Antd modal error notification.\n    notification['error']({\n      message: 'Cannot delete basic fields!',\n      description: 'You cannot delete the basic fields required for templates.'\n    })\n    return tree;\n  }\n  return _removeNodeByPath(tree, key.split('.'));\n}\n\nfunction _addNodeByPath(tree, [head, ...tail], position, node2Add, arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let added = false;\n  let newTree = [];\n  if (!tail.length) {\n    tree = tree || [];\n    let added = false;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name !== head) {\n        newTree.push(cn);\n        continue;\n      }\n      added = true;\n      if (position < 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n      if (position === 0) {\n        if (isLeaf(cn)) return tree;\n        if (!arrayItemsFlag && cn.children.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n\n        let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2Add, cn.key)];\n        if (arrayItemsFlag === 1) {\n          newNodeChildren = updateArrayIndex(newNodeChildren);\n        }\n        newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n      } else {\n        newTree.push(cn);\n      }\n      if (position > 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n    }\n    if (!added) return tree;\n    if (arrayItemsFlag === 2) {\n      return updateArrayIndex(newTree);\n    }\n    return newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    console.log(arrayItemsFlag);\n    const newChildren = _addNodeByPath(node.children, tail, position, node2Add, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    added = true;\n    newTree.push(updateNodeByNewChildren(node, newChildren));\n  }\n  return added ? newTree : tree;\n}\n\nfunction addNodeByPath(tree, [head, ...tail], position, newNode) {\n  return _addNodeByPath(tree, [head, ...tail], position, newNode);\n}\n\nfunction addNode(tree, targetKey, position, newNode) {\n  return _addNodeByPath(tree, targetKey.split('.'), position, newNode);\n}\n\nfunction _moveNodeByPath(tree, [sh, ...st], [th, ...tt], position, arrayItemsFlag = 0) {\n  if (!sh) return tree;\n  if (sh === th && tt.length) {\n    let newTree = [];\n    let updated = false;\n    for (const node of tree) {\n      if (node.name !== sh) {\n        newTree.push(node);\n        continue;\n      }\n      if (isLeaf(node)) return tree;\n      if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n        arrayItemsFlag = 1;\n      } else if (arrayItemsFlag === 1 && sh === '[items]') {\n        arrayItemsFlag = 2;\n      } else {\n        arrayItemsFlag = 0;\n      }\n      const newChildren = _moveNodeByPath(node.children, st, tt, position, arrayItemsFlag);\n      if (newChildren === node.children) {\n        // no change\n        return tree;\n      }\n      updated = true;\n      if (tt.length === 1 && st.length === 1 && node.schema && node.schema.type === 'object') {\n        // reorder object properties\n        let properties = {};\n        for (const child of newChildren) {\n          properties[child.name] = child.schema;\n        }\n        let schema = Object.assign({}, node.schema, {\n          properties,\n        });\n        forceChange(schema);\n        newTree.push(\n          Object.assign({}, node, {\n            schema,\n            children: newChildren,\n          })\n        );\n      } else {\n        newTree.push(updateNodeByNewChildren(node, newChildren));\n      }\n    }\n    return updated ? newTree : tree;\n  }\n\n  if (!st.length && !tt.length) {\n    let newTree = [];\n    let updated = false;\n    const node2move = tree.find((a) => a.name === sh);\n    if (!node2move) return tree;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name === sh) continue;\n      if (cn.name === th) {\n        updated = true;\n        if (position < 0) newTree.push(node2move);\n        if (position === 0) {\n          if (isLeaf(cn)) return tree;\n          let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2move, cn.key)];\n          if (arrayItemsFlag === 1) {\n            newNodeChildren = updateArrayIndex(newNodeChildren);\n          }\n          newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n        } else {\n          newTree.push(cn);\n        }\n        if (position > 0) newTree.push(node2move);\n      } else {\n        newTree.push(cn);\n      }\n    }\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return updated ? newTree : tree;\n  }\n\n  const node2move = getNodeByPath(tree, [sh, ...st]);\n  if (!node2move) return tree;\n  const tmpTree = _removeNodeByPath(tree, [sh, ...st], arrayItemsFlag);\n  const newTree = _addNodeByPath(tmpTree, [th, ...tt], position, node2move, arrayItemsFlag);\n  return newTree === tmpTree ? tree : newTree;\n}\n\nfunction moveNodeByPath(tree, sourceNode, targetNode, position) {\n  return _moveNodeByPath(tree, sourceNode, targetNode, position);\n}\nfunction moveNode(tree, sourceKey, targetKey, position) {\n  return _moveNodeByPath(tree, sourceKey.split('.'), targetKey.split('.'), position);\n}\n\nvar allowedUpdatedTypes = ['string', 'number', 'integer', 'boolean'];\n\nfunction _updateNodeByPath(tree, [head, ...tail], nodeUpdate) {\n  let newTree = [];\n  let updated = false;\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    let newNode = Object.assign({}, node);\n    if (!tail.length) {\n      const { schema, uiSchema, name } = nodeUpdate;\n      let nu = Object.assign({}, nodeUpdate);\n      delete nu.schema;\n      delete nu.uiSchema;\n      delete nu.name;\n      delete nu.children;\n      delete nu.key;\n      newNode = Object.assign(newNode, nu);\n      let typeUpdated = false;\n      if (schema) {\n        updated = true;\n        const oldSchema = node.schema;\n        let newSchema = Object.assign({}, schema);\n        if (!newSchema.type) {\n          newSchema.type = oldSchema.type;\n        } else {\n          if (newSchema.type !== oldSchema.type) {\n            if (allowedUpdatedTypes.includes(newSchema.type) && allowedUpdatedTypes.includes(oldSchema.type)) {\n              typeUpdated = true;\n              for (const i in newSchema) {\n                if (!['type', 'title', 'description'].includes(i)) {\n                  delete newSchema[i];\n                }\n              }\n            } else {\n              return tree;\n            }\n          }\n        }\n\n        if (newSchema.type === 'object') {\n          newSchema.properties = oldSchema.properties;\n        }\n        if (newSchema.type === 'array') {\n          newSchema.items = oldSchema.items;\n          newSchema.additionalItems = oldSchema.items;\n        }\n        newNode.schema = newSchema;\n      }\n      if (uiSchema) {\n        updated = true;\n        const oldUiSchema = node.uiSchema;\n        const newUiSchema = {};\n        for (const i in uiSchema) {\n          if (i.startsWith('ui:') || i === 'classNames') {\n            newUiSchema[i] = uiSchema[i];\n          }\n        }\n        if (typeUpdated) delete newUiSchema['ui:widget'];\n        for (const i in node.uiSchema) {\n          if (!(i.startsWith('ui:') || i === 'classNames')) {\n            newUiSchema[i] = oldUiSchema[i];\n          }\n        }\n        if (isEmptyObject(newUiSchema)) {\n          delete newNode.uiSchema;\n        } else {\n          newNode.uiSchema = newUiSchema;\n        }\n      }\n      if (name && name !== newNode.name) {\n        if (tree.find((a) => a.name === name)) return tree;\n        updated = true;\n        newNode = updateNodeParentKeyAndName(newNode, null, name);\n      }\n      newTree.push(newNode);\n    } else {\n      if (node.children) {\n        const newChildren = _updateNodeByPath(node.children, tail, nodeUpdate);\n        if (newChildren === node.children) {\n          return tree;\n        }\n        updated = true;\n        let newNode = updateNodeByNewChildren(node, newChildren);\n        // update required\n        let newSchema = null;\n        if (\n          tail.length === 1 &&\n          nodeUpdate.name &&\n          (newSchema = newNode.schema) &&\n          newSchema.required &&\n          newSchema.required.includes(tail[0])\n        ) {\n          newNode.schema = Object.assign({}, newSchema, {\n            required: newSchema.required.map((a) => (a === tail[0] ? nodeUpdate.name : a)),\n          });\n        }\n        newTree.push(newNode);\n      } else {\n        return tree;\n      }\n    }\n  }\n  return updated ? newTree : tree;\n}\n\nfunction updateNodeByPath(tree, path, nodeUpdate) {\n  return _updateNodeByPath(tree, path, nodeUpdate);\n}\n\nfunction updateNode(tree, targetKey, nodeUpdate) {\n  return updateNodeByPath(tree, targetKey.split('.'), nodeUpdate);\n}\n\nvar SEPERATOR = '_';\nfunction getNodeByRjsfId(tree, rjsfId) {\n  for (const node of tree) {\n    if (node && node.name === rjsfId) {\n      return node;\n    }\n    if (rjsfId.startsWith(node.name) && rjsfId[node.name.length] === SEPERATOR) {\n      if (node.schema.type === 'array') {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const i = rjsfId.indexOf(SEPERATOR);\n        const index = i > 0 ? rjsfId.slice(0, i) : rjsfId;\n        if (isNaN(index)) return null;\n        const rest = i > 0 ? rjsfId.slice(i + 1) : null;\n        if (Array.isArray(node.schema.items)) {\n          if (+index < node.schema.items.length) {\n            let n = node.children.find((a) => a.name === '[items]');\n            n = n && n.children.find((a) => a.name === index);\n            return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n          } else {\n            let n = node.children.find((a) => a.name === 'additionalItems');\n            return rest ? n && getNodeByRjsfId(n.children, rest) : n;\n          }\n        } else {\n          let n = node.children.find((a) => a.name === 'items');\n          return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n        }\n      }\n\n      if (node.children) {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const n = getNodeByRjsfId(node.children, rjsfId);\n        if (n) return n;\n      }\n    }\n  }\n  return null;\n}\n\nexport {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n\nexport default {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n"],"sourceRoot":""}